- en: Xml
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/xml-class.html](https://pymupdf.readthedocs.io/en/latest/xml-class.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*   New in v1.21.0'
  prefs: []
  type: TYPE_NORMAL
- en: This represents an HTML or an XML node. It is a helper class intended to access
    the DOM (Document Object Model) content of a [Story](story-class.html#story) object.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is no need to ever directly construct an [Xml](#xml) object: after creating
    a [Story](story-class.html#story), simply take [`Story.body`](story-class.html#Story.body
    "Story.body") – which is an Xml node – and use it to navigate your way through
    the story’s DOM.'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Method / Attribute** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_bullet_list()`](#Xml.add_bullet_list "Xml.add_bullet_list") | Add a
    *ul* tag - bulleted list, context manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_codeblock()`](#Xml.add_codeblock "Xml.add_codeblock") | Add a *pre*
    tag, context manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_description_list()`](#Xml.add_description_list "Xml.add_description_list")
    | Add a *dl* tag, context manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_division()`](#Xml.add_division "Xml.add_division") | add a *div* tag
    (renamed from “section”), context manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_header()`](#Xml.add_header "Xml.add_header") | Add a header tag (one
    of *h1* to *h6*), context manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_horizontal_line()`](#Xml.add_horizontal_line "Xml.add_horizontal_line")
    | Add a *hr* tag. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_image()`](#Xml.add_image "Xml.add_image") | Add a *img* tag. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_link()`](#Xml.add_link "Xml.add_link") | Add a *a* tag. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_number_list()`](#Xml.add_number_list "Xml.add_number_list") | Add a
    *ol* tag, context manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_paragraph()`](#Xml.add_paragraph "Xml.add_paragraph") | Add a *p* tag.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_span()`](#Xml.add_span "Xml.add_span") | Add a *span* tag, context
    manager. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_subscript()`](#Xml.add_subscript "Xml.add_subscript") | Add subscript
    text(*sub* tag) - inline element, treated like text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_superscript()`](#Xml.add_superscript "Xml.add_superscript") | Add subscript
    text (*sup* tag) - inline element, treated like text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_code()`](#Xml.add_code "Xml.add_code") | Add code text (*code* tag)
    - inline element, treated like text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_var()`](#Xml.add_var "Xml.add_var") | Add code text (*code* tag) -
    inline element, treated like text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_samp()`](#Xml.add_samp "Xml.add_samp") | Add code text (*code* tag)
    - inline element, treated like text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_kbd()`](#Xml.add_kbd "Xml.add_kbd") | Add code text (*code* tag) -
    inline element, treated like text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_text()`](#Xml.add_text "Xml.add_text") | Add a text string. Line breaks
    [`n`](colorspace.html#Colorspace.n "Colorspace.n") are honored as *br* tags. |'
  prefs: []
  type: TYPE_TB
- en: '| [`append_child()`](#Xml.append_child "Xml.append_child") | Append a child
    node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`clone()`](#Xml.clone "Xml.clone") | Make a copy if this node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`create_element()`](#Xml.create_element "Xml.create_element") | Make a new
    node with a given tag name. |'
  prefs: []
  type: TYPE_TB
- en: '| [`create_text_node()`](#Xml.create_text_node "Xml.create_text_node") | Create
    direct text for the current node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`find()`](#Xml.find "Xml.find") | Find a sub-node with given properties.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`find_next()`](#Xml.find_next "Xml.find_next") | Repeat previous “find”
    with the same criteria. |'
  prefs: []
  type: TYPE_TB
- en: '| [`insert_after()`](#Xml.insert_after "Xml.insert_after") | Insert an element
    after current node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`insert_before()`](#Xml.insert_before "Xml.insert_before") | Insert an element
    before current node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`remove()`](#Xml.remove "Xml.remove") | Remove this node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_align()`](#Xml.set_align "Xml.set_align") | Set the alignment using
    a CSS style spec. Only works for block-level tags. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_attribute()`](#Xml.set_attribute "Xml.set_attribute") | Set an arbitrary
    key to some value (which may be empty). |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_bgcolor()`](#Xml.set_bgcolor "Xml.set_bgcolor") | Set the background
    color. Only works for block-level tags. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_bold()`](#Xml.set_bold "Xml.set_bold") | Set bold on or off or to some
    string value. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_color()`](#Xml.set_color "Xml.set_color") | Set text color. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_columns()`](#Xml.set_columns "Xml.set_columns") | Set the number of
    columns. Argument may be any valid number or string. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_font()`](#Xml.set_font "Xml.set_font") | Set the font-family, e.g.
    “sans-serif”. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_fontsize()`](#Xml.set_fontsize "Xml.set_fontsize") | Set the font size.
    Either a float or a valid HTML/CSS string. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_id()`](#Xml.set_id "Xml.set_id") | Set a *id*. A check for uniqueness
    is performed. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_italic()`](#Xml.set_italic "Xml.set_italic") | Set italic on or off
    or to some string value. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_leading()`](#Xml.set_leading "Xml.set_leading") | Set inter-block text
    distance (`-mupdf-leading`), only works on block-level nodes. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_lineheight()`](#Xml.set_lineheight "Xml.set_lineheight") | Set height
    of a line. Float like 1.5, which sets to `1.5 * fontsize`. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_margins()`](#Xml.set_margins "Xml.set_margins") | Set the margin(s),
    float or string with up to 4 values. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_pagebreak_after()`](#Xml.set_pagebreak_after "Xml.set_pagebreak_after")
    | Insert a page break after this node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_pagebreak_before()`](#Xml.set_pagebreak_before "Xml.set_pagebreak_before")
    | Insert a page break before this node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_properties()`](#Xml.set_properties "Xml.set_properties") | Set any
    or all desired properties in one call. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_style()`](#Xml.add_style "Xml.add_style") | Set (add) a “style” that
    is not supported by its own `set_` method. |'
  prefs: []
  type: TYPE_TB
- en: '| [`add_class()`](#Xml.add_class "Xml.add_class") | Set (add) a “class” attribute.
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`set_text_indent()`](#Xml.set_text_indent "Xml.set_text_indent") | Set indentation
    for first textblock line. Only works for block-level nodes. |'
  prefs: []
  type: TYPE_TB
- en: '| [`tagname`](#Xml.tagname "Xml.tagname") | Either the HTML tag name like *p*
    or `None` if a text node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`text`](#Xml.text "Xml.text") | Either the node’s text or `None` if a tag
    node. |'
  prefs: []
  type: TYPE_TB
- en: '| [`is_text`](#Xml.is_text "Xml.is_text") | Check if the node is a text. |'
  prefs: []
  type: TYPE_TB
- en: '| [`first_child`](#Xml.first_child "Xml.first_child") | Contains the first
    node one level below this one (or `None`). |'
  prefs: []
  type: TYPE_TB
- en: '| [`last_child`](#Xml.last_child "Xml.last_child") | Contains the last node
    one level below this one (or `None`). |'
  prefs: []
  type: TYPE_TB
- en: '| [`next`](annot.html#Annot.next "Annot.next") | The next node at the same
    level (or `None`). |'
  prefs: []
  type: TYPE_TB
- en: '| [`previous`](#Xml.previous "Xml.previous") | The previous node at the same
    level. |'
  prefs: []
  type: TYPE_TB
- en: '| [`root`](#Xml.root "Xml.root") | The top node of the DOM, which hence has
    the tagname *html*. |'
  prefs: []
  type: TYPE_TB
- en: '**Class API**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Add an *ul* tag - bulleted list, context manager. See [ul](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Add a *pre* tag, context manager. See [pre](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Add a *dl* tag, context manager. See [dl](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Add a *div* tag, context manager. See [div](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Add a header tag (one of *h1* to *h6*), context manager. See [headings](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** (*int*) – a value 1 - 6.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Add a *hr* tag. See [hr](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Add an *img* tag. This causes the inclusion of the named image in the DOM.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**name** (*str*) – the filename of the image. This **must be the member name**
    of some entry of the [Archive](archive-class.html#archive) parameter of the [Story](story-class.html#story)
    constructor.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**width** – if provided, either an absolute (int) value, or a percentage string
    like “30%”. A percentage value refers to the width of the specified `where` rectangle
    in [`Story.place()`](story-class.html#Story.place "Story.place"). If this value
    is provided and [`height`](irect.html#IRect.height "IRect.height") is omitted,
    the image will be included keeping its aspect ratio.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**height** – if provided, either an absolute (int) value, or a percentage string
    like “30%”. A percentage value refers to the height of the specified `where` rectangle
    in [`Story.place()`](story-class.html#Story.place "Story.place"). If this value
    is provided and [`width`](irect.html#IRect.width "IRect.width") is omitted, the
    image’s aspect ratio will be honored.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Add an *a* tag - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**href** (*str*) – the URL target.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**text** (*str*) – the text to display. If omitted, the `href` text is shown
    instead.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Add an *ol* tag, context manager.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Add a *p* tag, context manager.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Add a *span* tag, context manager. See [span](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Add “subscript” text(*sub* tag) - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Add “superscript” text (*sup* tag) - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Add “code” text (*code* tag) - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Add “variable” text (*var* tag) - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Add “sample output” text (*samp* tag) - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Add “keyboard input” text (*kbd* tag) - inline element, treated like text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Add a text string. Line breaks [`n`](colorspace.html#Colorspace.n "Colorspace.n")
    are honored as *br* tags.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Set the text alignment. Only works for block-level tags.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – either one of the [Text Alignment](vars.html#textalign) or the
    [text-align](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) values.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Set an arbitrary key to some value (which may be empty).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**key** (*str*) – the name of the attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**value** (*str*) – the (optional) value of the attribute.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Retrieve all attributes of the current nodes as a dictionary.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: a dictionary with the attributes and their values of the node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Get the attribute value of `key`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**key** (*str*) – the name of the attribute.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: a string with the value of `key`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: Remove the attribute `key` from the node.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**key** (*str*) – the name of the attribute.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: Set the background color. Only works for block-level tags.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – either an RGB value like (255, 0, 0) (for “red”) or a valid [background-color](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color)
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: Set bold on or off or to some string value.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – `True`, `False` or a valid [font-weight](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight)
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: Set the color of the text following.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – either an RGB value like (255, 0, 0) (for “red”) or a valid [color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: Set the number of columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – a valid [columns](https://developer.mozilla.org/en-US/docs/Web/CSS/columns)
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Currently ignored - supported in a future MuPDF version.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: Set the font-family.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** (*str*) – e.g. “sans-serif”.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: Set the font size for text following.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – a float or a valid [font-size](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size)
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: Set a *id*. This serves as a unique identification of the node within the DOM.
    Use it to easily locate the node to inspect or modify it. A check for uniqueness
    is performed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**unqid** (*str*) – id string of the node.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Set italic on or off or to some string value for the text following it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – `True`, `False` or some valid [font-style](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style)
    value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: Set inter-block text distance (`-mupdf-leading`), only works on block-level
    nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** (*float*) – the distance in points to the previous block.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: Set height of a line.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – a float like 1.5 (which sets to `1.5 * fontsize`), or some valid
    [line-height](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: Set the margin(s).
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – float or string with up to 4 values. See [CSS documentation](https://developer.mozilla.org/en-US/docs/Web/CSS/margin).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: Insert a page break after this node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: Insert a page break before this node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: Set any or all desired properties in one call. The meaning of argument values
    equal the values of the corresponding `set_` methods.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The properties set by this method are directly attached to the node, whereas
    every `set_` method generates a new *span* below the current node that has the
    respective property. So to e.g. “globally” set some property for the *body*, this
    method must be used.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: Set (add) some style attribute not supported by its own `set_` method.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** (*str*) – any valid CSS style value.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: Set (add) some “class” attribute.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** (*str*) – the name of the class. Must have been defined in either
    the HTML or the CSS source of the DOM.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Set indentation for the first textblock line. Only works for block-level nodes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** – a valid [text-indent](https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent)
    value. Please note that negative values do not work.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: Append a child node. This is a low-level method used by other methods like [`Xml.add_paragraph()`](#Xml.add_paragraph
    "Xml.add_paragraph").
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**node** – the [Xml](#xml) node to append.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: Create direct text for the current node.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**text** (*str*) – the text to append.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Xml](#xml)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: the created element.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: Create a new node with a given tag. This a low-level method used by other methods
    like [`Xml.add_paragraph()`](#Xml.add_paragraph "Xml.add_paragraph").
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tag** (*str*) – the element tag.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Xml](#xml)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: the created element. To actually bind it to the DOM, use [`Xml.append_child()`](#Xml.append_child
    "Xml.append_child").
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: Insert the given element `elem` before this node.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**elem** – some [Xml](#xml) element.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: Insert the given element `elem` after this node.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**elem** – some [Xml](#xml) element.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: Make a copy of this node, which then may be appended (using [`Xml.append_child()`](#Xml.append_child
    "Xml.append_child")) or inserted (using one of [`Xml.insert_before()`](#Xml.insert_before
    "Xml.insert_before"), [`Xml.insert_after()`](#Xml.insert_after "Xml.insert_after"))
    in this DOM.
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: the clone ([Xml](#xml)) of the current node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: Remove this node from the DOM.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: For debugging purposes, print this node’s structure in a simplified form.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: Under the current node, find the first node with the given `tag`, attribute
    `att` and value `match`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tag** (*str*) – restrict search to this tag. May be `None` for unrestricted
    searches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**att** (*str*) – check this attribute. May be `None`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**match** (*str*) – the desired attribute value to match. May be `None`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Xml](#xml).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '`None` if nothing found, otherwise the first matching node.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: Continue a previous [`Xml.find()`](#Xml.find "Xml.find") (or [`find_next()`](#Xml.find_next
    "Xml.find_next")) with the same values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Xml](#xml).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '`None` if none more found, otherwise the next matching node.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: Either the HTML tag name like *p* or `None` if a text node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: Either the node’s text or `None` if a tag node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: Check if a text node.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: Contains the first node one level below this one (or `None`).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: Contains the last node one level below this one (or `None`).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE56]'
  prefs: []
  type: TYPE_PRE
- en: The next node at the same level (or `None`).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE57]'
  prefs: []
  type: TYPE_PRE
- en: The previous node at the same level.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE58]'
  prefs: []
  type: TYPE_PRE
- en: The top node of the DOM, which hence has the tagname *html*.
  prefs: []
  type: TYPE_NORMAL
- en: Setting Text properties
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In HTML tags can be nested such that innermost text **inherits properties**
    from the tag enveloping its parent tag. For example `<p>`.
  prefs: []
  type: TYPE_NORMAL
- en: To achieve the same effect, methods like [`Xml.set_bold()`](#Xml.set_bold "Xml.set_bold")
    and [`Xml.set_italic()`](#Xml.set_italic "Xml.set_italic") each open a temporary
    *span* with the desired property underneath the current node.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, these methods return there parent node, so they can be concatenated
    with each other.
  prefs: []
  type: TYPE_NORMAL
- en: Context Manager support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The standard way to add nodes to a DOM is this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE59]'
  prefs: []
  type: TYPE_PRE
- en: 'Methods that are flagged as “context managers” can conveniently be used in
    this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE60]'
  prefs: []
  type: TYPE_PRE
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: Setting Text properties
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In HTML tags can be nested such that innermost text **inherits properties**
    from the tag enveloping its parent tag. For example `<p>`.
  prefs: []
  type: TYPE_NORMAL
- en: To achieve the same effect, methods like [`Xml.set_bold()`](#Xml.set_bold "Xml.set_bold")
    and [`Xml.set_italic()`](#Xml.set_italic "Xml.set_italic") each open a temporary
    *span* with the desired property underneath the current node.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, these methods return there parent node, so they can be concatenated
    with each other.
  prefs: []
  type: TYPE_NORMAL
- en: Context Manager support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The standard way to add nodes to a DOM is this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE61]'
  prefs: []
  type: TYPE_PRE
- en: 'Methods that are flagged as “context managers” can conveniently be used in
    this way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE62]'
  prefs: []
  type: TYPE_PRE
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
