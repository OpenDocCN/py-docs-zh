["```py\nfrom functools import partial\nimport jax\n\n@partial(jax.custom_vjp, nondiff_argnums=(0, 1))\ndef clip_gradient(lo, hi, x):\n  return x  # identity function\n\ndef clip_gradient_fwd(lo, hi, x):\n  return x, None  # no residual values to save\n\ndef clip_gradient_bwd(lo, hi, _, g):\n  return (jnp.clip(g, lo, hi),)\n\nclip_gradient.defvjp(clip_gradient_fwd, clip_gradient_bwd) \n```", "```py\nimport jax\n\n@jax.custom_vjp  # no nondiff_argnums!\ndef clip_gradient(lo, hi, x):\n  return x  # identity function\n\ndef clip_gradient_fwd(lo, hi, x):\n  return x, (lo, hi)  # save lo and hi values as residuals\n\ndef clip_gradient_bwd(res, g):\n  lo, hi = res\n  return (None, None, jnp.clip(g, lo, hi))  # return None for lo and hi\n\nclip_gradient.defvjp(clip_gradient_fwd, clip_gradient_bwd) \n```", "```py\nfrom functools import partial\nimport jax\n\n@partial(jax.custom_vjp, nondiff_argnums=(0,))\ndef skip_app(f, x):\n  return f(x)\n\ndef skip_app_fwd(f, x):\n  return skip_app(f, x), None\n\ndef skip_app_bwd(f, _, g):\n  return (g,)\n\nskip_app.defvjp(skip_app_fwd, skip_app_bwd) \n```"]