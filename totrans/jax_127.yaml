- en: jax.profiler module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/jax.profiler.html`](https://jax.readthedocs.io/en/latest/jax.profiler.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Tracing and time profiling'
  prefs: []
  type: TYPE_NORMAL
- en: Profiling JAX programs describes how to make use of JAX’s tracing and time profiling
    features.
  prefs: []
  type: TYPE_NORMAL
- en: '| `start_server`(port) | Starts the profiler server on port port. |'
  prefs: []
  type: TYPE_TB
- en: '| `start_trace`(log_dir[, create_perfetto_link, ...]) | Starts a profiler trace.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `stop_trace`() | Stops the currently-running profiler trace. |'
  prefs: []
  type: TYPE_TB
- en: '| `trace`(log_dir[, create_perfetto_link, ...]) | Context manager to take a
    profiler trace. |'
  prefs: []
  type: TYPE_TB
- en: '| `annotate_function`(func[, name]) | Decorator that generates a trace event
    for the execution of a function. |'
  prefs: []
  type: TYPE_TB
- en: '| `TraceAnnotation` | Context manager that generates a trace event in the profiler.
    |'
  prefs: []
  type: TYPE_TB
- en: '| `StepTraceAnnotation`(name, **kwargs) | Context manager that generates a
    step trace event in the profiler. |'
  prefs: []
  type: TYPE_TB
- en: Device memory profiling
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: See Device Memory Profiling for an introduction to JAX’s device memory profiling
    features.
  prefs: []
  type: TYPE_NORMAL
- en: '| `device_memory_profile`([backend]) | Captures a JAX device memory profile
    as `pprof`-format protocol buffer. |'
  prefs: []
  type: TYPE_TB
- en: '| `save_device_memory_profile`(filename[, backend]) | Collects a device memory
    profile and writes it to a file. |'
  prefs: []
  type: TYPE_TB
