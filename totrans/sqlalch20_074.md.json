["```py\nsqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER = '__sa_instrumentation_manager__'\n```", "```py\nclass sqlalchemy.orm.instrumentation.InstrumentationFactory\n```", "```py\nclass sqlalchemy.ext.instrumentation.InstrumentationManager\n```", "```py\nmethod dict_getter(class_)\n```", "```py\nmethod get_instance_dict(class_, instance)\n```", "```py\nmethod initialize_instance_dict(class_, instance)\n```", "```py\nmethod install_descriptor(class_, key, inst)\n```", "```py\nmethod install_member(class_, key, implementation)\n```", "```py\nmethod install_state(class_, instance, state)\n```", "```py\nmethod instrument_attribute(class_, key, inst)\n```", "```py\nmethod instrument_collection_class(class_, key, collection_class)\n```", "```py\nmethod manage(class_, manager)\n```", "```py\nmethod manager_getter(class_)\n```", "```py\nmethod post_configure_attribute(class_, key, inst)\n```", "```py\nmethod remove_state(class_, instance)\n```", "```py\nmethod state_getter(class_)\n```", "```py\nmethod uninstall_descriptor(class_, key)\n```", "```py\nmethod uninstall_member(class_, key)\n```", "```py\nmethod unregister(class_, manager)\n```", "```py\nsqlalchemy.ext.instrumentation.instrumentation_finders = [<function find_native_user_instrumentation_hook>]\n```", "```py\nclass sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry\n```", "```py\nsqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER = '__sa_instrumentation_manager__'\n```", "```py\nclass sqlalchemy.orm.instrumentation.InstrumentationFactory\n```", "```py\nclass sqlalchemy.ext.instrumentation.InstrumentationManager\n```", "```py\nmethod dict_getter(class_)\n```", "```py\nmethod get_instance_dict(class_, instance)\n```", "```py\nmethod initialize_instance_dict(class_, instance)\n```", "```py\nmethod install_descriptor(class_, key, inst)\n```", "```py\nmethod install_member(class_, key, implementation)\n```", "```py\nmethod install_state(class_, instance, state)\n```", "```py\nmethod instrument_attribute(class_, key, inst)\n```", "```py\nmethod instrument_collection_class(class_, key, collection_class)\n```", "```py\nmethod manage(class_, manager)\n```", "```py\nmethod manager_getter(class_)\n```", "```py\nmethod post_configure_attribute(class_, key, inst)\n```", "```py\nmethod remove_state(class_, instance)\n```", "```py\nmethod state_getter(class_)\n```", "```py\nmethod uninstall_descriptor(class_, key)\n```", "```py\nmethod uninstall_member(class_, key)\n```", "```py\nmethod unregister(class_, manager)\n```", "```py\nsqlalchemy.ext.instrumentation.instrumentation_finders = [<function find_native_user_instrumentation_hook>]\n```", "```py\nclass sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry\n```"]