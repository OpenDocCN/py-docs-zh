- en: jax.numpy.fft.rfftn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.rfftn.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.rfftn.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the N-dimensional discrete Fourier Transform for real input.
  prefs: []
  type: TYPE_NORMAL
- en: LAX-backend implementation of [`numpy.fft.rfftn()`](https://numpy.org/doc/stable/reference/generated/numpy.fft.rfftn.html#numpy.fft.rfftn
    "(in NumPy v2.0)").
  prefs: []
  type: TYPE_NORMAL
- en: '*Original docstring below.*'
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the N-dimensional discrete Fourier Transform over any
    number of axes in an M-dimensional real array by means of the Fast Fourier Transform
    (FFT). By default, all axes are transformed, with the real transform performed
    over the last axis, while the remaining transforms are complex.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a** (*array_like*) – Input array, taken to be real.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**s** (*sequence* *of* *ints**,* *optional*) –'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shape (length along each transformed axis) to use from the input. (`s[0]` refers
    to axis 0, `s[1]` to axis 1, etc.). The final element of s corresponds to n for
    `rfft(x, n)`, while for the remaining axes, it corresponds to n for `fft(x, n)`.
    Along any axis, if the given shape is smaller than that of the input, the input
    is cropped. If it is larger, the input is padded with zeros.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in version 2.0: If it is `-1`, the whole input is used (no padding/trimming).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If s is not given, the shape of the input along the axes specified by axes is
    used.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0: If s is not `None`, axes must not be `None` either.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0: s must contain only `int` s, not `None` values.
    `None` values currently mean that the default value for `n` is used in the corresponding
    1-D transform, but this behaviour is deprecated.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**axes** (*sequence* *of* *ints**,* *optional*) –'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Axes over which to compute the FFT. If not given, the last `len(s)` axes are
    used, or all axes if s is also not specified.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0: If s is specified, the corresponding axes to
    be transformed must be explicitly specified too.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**norm** (*{"backward"**,* *"ortho"**,* *"forward"}**,* *optional*)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out** – The truncated or zero-padded input, transformed along the axes indicated
    by axes, or by a combination of s and a, as explained in the parameters section
    above. The length of the last axis transformed will be `s[-1]//2+1`, while the
    remaining transformed axes will have lengths according to s, or unchanged from
    the input.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: complex ndarray
  prefs: []
  type: TYPE_NORMAL
