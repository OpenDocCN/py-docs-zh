["```py\n<page>\n    <text block>\n        <line>\n            <span>\n                <char>\n    <image block>\n        <img> \n```", "```py\n>>> print(page.get_text(\"text\"))\nSome text on first page. \n```", "```py\n(x0, y0, x1, y1, \"lines in block\", block_no, block_type) \n```", "```py\n>>> print(page.get_text(\"blocks\", sort=False))\n[(50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375,\n'Some text on first page.', 0, 0)] \n```", "```py\n(x0, y0, x1, y1, \"word\", block_no, line_no, word_no) \n```", "```py\n>>> for word in page.get_text(\"words\", sort=False):\n print(word)\n(50.0, 88.17500305175781, 78.73200225830078, 103.28900146484375,\n'Some', 0, 0, 0)\n(81.79000091552734, 88.17500305175781, 99.5219955444336, 103.28900146484375,\n'text', 0, 0, 1)\n(102.57999420166016, 88.17500305175781, 114.8119888305664, 103.28900146484375,\n'on', 0, 0, 2)\n(117.86998748779297, 88.17500305175781, 135.5909881591797, 103.28900146484375,\n'first', 0, 0, 3)\n(138.64898681640625, 88.17500305175781, 166.1709747314453, 103.28900146484375,\n'page.', 0, 0, 4) \n```", "```py\n>>> for line in page.get_text(\"html\").splitlines():\n print(line)\n\n<div id=\"page0\" style=\"position:relative;width:300pt;height:350pt;\nbackground-color:white\">\n<p style=\"position:absolute;white-space:pre;margin:0;padding:0;top:88pt;\nleft:50pt\"><span style=\"font-family:Helvetica,sans-serif;\nfont-size:11pt\">Some text on first page.</span></p>\n</div> \n```", "```py\nimport sys\nfilename = sys.argv[1]\notext = open(filename).read()                 # original html text string\npos1 = 0                                      # search start poition\nfont_serif = \"font-family:Times\"              # enter ...\nfont_sans  = \"font-family:Helvetica\"          # ... your choices ...\nfont_mono  = \"font-family:Courier\"            # ... here\nfound_one  = False                            # true if search successful\n\nwhile True:\n    pos0 = otext.find(\"font-family:\", pos1)   # start of a font spec\n    if pos0 < 0:                              # none found - we are done\n        break\n    pos1 = otext.find(\";\", pos0)              # end of font spec\n    test = otext[pos0 : pos1]                 # complete font spec string\n    testn = \"\"                                # the new font spec string\n    if test.endswith(\",serif\"):               # font with serifs?\n        testn = font_serif                    # use Times instead\n    elif test.endswith(\",sans-serif\"):        # sans serifs font?\n        testn = font_sans                     # use Helvetica\n    elif test.endswith(\",monospace\"):         # monospaced font?\n        testn = font_mono                     # becomes Courier\n\n    if testn != \"\":                           # any of the above found?\n        otext = otext.replace(test, testn)    # change the source\n        found_one = True\n        pos1 = 0                              # start over\n\nif found_one:\n    ofile = open(filename + \".html\", \"w\")\n    ofile.write(otext)\n    ofile.close()\nelse:\n    print(\"Warning: could not find any font specs!\") \n```", "```py\n{\n    \"width\": 300.0,\n    \"height\": 350.0,\n    \"blocks\": [{\n        \"type\": 0,\n        \"bbox\": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375),\n        \"lines\": ({\n            \"wmode\": 0,\n            \"dir\": (1.0, 0.0),\n            \"bbox\": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375),\n            \"spans\": ({\n                \"size\": 11.0,\n                \"flags\": 0,\n                \"font\": \"Helvetica\",\n                \"color\": 0,\n                \"origin\": (50.0, 100.0),\n                \"text\": \"Some text on first page.\",\n                \"bbox\": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375)\n            })\n        }]\n    }]\n} \n```", "```py\n\"chars\": [{\n    \"origin\": (50.0, 100.0),\n    \"bbox\": (50.0, 88.17500305175781, 57.336997985839844, 103.28900146484375),\n    \"c\": \"S\"\n}, {\n    \"origin\": (57.33700180053711, 100.0),\n    \"bbox\": (57.33700180053711, 88.17500305175781, 63.4530029296875, 103.28900146484375),\n    \"c\": \"o\"\n}, {\n    \"origin\": (63.4530029296875, 100.0),\n    \"bbox\": (63.4530029296875, 88.17500305175781, 72.61600494384766, 103.28900146484375),\n    \"c\": \"m\"\n}, {\n    \"origin\": (72.61600494384766, 100.0),\n    \"bbox\": (72.61600494384766, 88.17500305175781, 78.73200225830078, 103.28900146484375),\n    \"c\": \"e\"\n}, {\n    \"origin\": (78.73200225830078, 100.0),\n    \"bbox\": (78.73200225830078, 88.17500305175781, 81.79000091552734, 103.28900146484375),\n    \"c\": \" \"\n< ... deleted ... >\n}, {\n    \"origin\": (163.11297607421875, 100.0),\n    \"bbox\": (163.11297607421875, 88.17500305175781, 166.1709747314453, 103.28900146484375),\n    \"c\": \".\"\n}], \n```", "```py\n>>> for line in page.get_text(\"xml\").splitlines():\n print(line)\n\n<page id=\"page0\" width=\"300\" height=\"350\">\n<block bbox=\"50 88.175 166.17098 103.289\">\n<line bbox=\"50 88.175 166.17098 103.289\" wmode=\"0\" dir=\"1 0\">\n<font name=\"Helvetica\" size=\"11\">\n<char quad=\"50 88.175 57.336999 88.175 50 103.289 57.336999 103.289\" x=\"50\"\ny=\"100\" color=\"#000000\" c=\"S\"/>\n<char quad=\"57.337 88.175 63.453004 88.175 57.337 103.289 63.453004 103.289\" x=\"57.337\"\ny=\"100\" color=\"#000000\" c=\"o\"/>\n<char quad=\"63.453004 88.175 72.616008 88.175 63.453004 103.289 72.616008 103.289\" x=\"63.453004\"\ny=\"100\" color=\"#000000\" c=\"m\"/>\n<char quad=\"72.616008 88.175 78.732 88.175 72.616008 103.289 78.732 103.289\" x=\"72.616008\"\ny=\"100\" color=\"#000000\" c=\"e\"/>\n<char quad=\"78.732 88.175 81.79 88.175 78.732 103.289 81.79 103.289\" x=\"78.732\"\ny=\"100\" color=\"#000000\" c=\" \"/>\n\n... deleted ...\n\n<char quad=\"163.11298 88.175 166.17098 88.175 163.11298 103.289 166.17098 103.289\" x=\"163.11298\"\ny=\"100\" color=\"#000000\" c=\".\"/>\n</font>\n</line>\n</block>\n</page> \n```", "```py\n<div id=\"page0\">\n<p>Some text on first page.</p>\n</div> \n```", "```py\n>>> print(page.get_text(\"text\"))\nH a l l o !\nMo r e  t e x t\ni s  f o l l o w i n g\ni n  E n g l i s h\n. . .  l e t ' s  s e e\nw h a t  h a p p e n s .\n>>> print(page.get_text(\"text\", flags=pymupdf.TEXT_INHIBIT_SPACES))\nHallo!\nMore text\nis following\nin English\n... let's see\nwhat happens.\n>>> \n```", "```py\n<page>\n    <text block>\n        <line>\n            <span>\n                <char>\n    <image block>\n        <img> \n```", "```py\n>>> print(page.get_text(\"text\"))\nSome text on first page. \n```", "```py\n(x0, y0, x1, y1, \"lines in block\", block_no, block_type) \n```", "```py\n>>> print(page.get_text(\"blocks\", sort=False))\n[(50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375,\n'Some text on first page.', 0, 0)] \n```", "```py\n(x0, y0, x1, y1, \"word\", block_no, line_no, word_no) \n```", "```py\n>>> for word in page.get_text(\"words\", sort=False):\n print(word)\n(50.0, 88.17500305175781, 78.73200225830078, 103.28900146484375,\n'Some', 0, 0, 0)\n(81.79000091552734, 88.17500305175781, 99.5219955444336, 103.28900146484375,\n'text', 0, 0, 1)\n(102.57999420166016, 88.17500305175781, 114.8119888305664, 103.28900146484375,\n'on', 0, 0, 2)\n(117.86998748779297, 88.17500305175781, 135.5909881591797, 103.28900146484375,\n'first', 0, 0, 3)\n(138.64898681640625, 88.17500305175781, 166.1709747314453, 103.28900146484375,\n'page.', 0, 0, 4) \n```", "```py\n>>> for line in page.get_text(\"html\").splitlines():\n print(line)\n\n<div id=\"page0\" style=\"position:relative;width:300pt;height:350pt;\nbackground-color:white\">\n<p style=\"position:absolute;white-space:pre;margin:0;padding:0;top:88pt;\nleft:50pt\"><span style=\"font-family:Helvetica,sans-serif;\nfont-size:11pt\">Some text on first page.</span></p>\n</div> \n```", "```py\nimport sys\nfilename = sys.argv[1]\notext = open(filename).read()                 # original html text string\npos1 = 0                                      # search start poition\nfont_serif = \"font-family:Times\"              # enter ...\nfont_sans  = \"font-family:Helvetica\"          # ... your choices ...\nfont_mono  = \"font-family:Courier\"            # ... here\nfound_one  = False                            # true if search successful\n\nwhile True:\n    pos0 = otext.find(\"font-family:\", pos1)   # start of a font spec\n    if pos0 < 0:                              # none found - we are done\n        break\n    pos1 = otext.find(\";\", pos0)              # end of font spec\n    test = otext[pos0 : pos1]                 # complete font spec string\n    testn = \"\"                                # the new font spec string\n    if test.endswith(\",serif\"):               # font with serifs?\n        testn = font_serif                    # use Times instead\n    elif test.endswith(\",sans-serif\"):        # sans serifs font?\n        testn = font_sans                     # use Helvetica\n    elif test.endswith(\",monospace\"):         # monospaced font?\n        testn = font_mono                     # becomes Courier\n\n    if testn != \"\":                           # any of the above found?\n        otext = otext.replace(test, testn)    # change the source\n        found_one = True\n        pos1 = 0                              # start over\n\nif found_one:\n    ofile = open(filename + \".html\", \"w\")\n    ofile.write(otext)\n    ofile.close()\nelse:\n    print(\"Warning: could not find any font specs!\") \n```", "```py\n{\n    \"width\": 300.0,\n    \"height\": 350.0,\n    \"blocks\": [{\n        \"type\": 0,\n        \"bbox\": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375),\n        \"lines\": ({\n            \"wmode\": 0,\n            \"dir\": (1.0, 0.0),\n            \"bbox\": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375),\n            \"spans\": ({\n                \"size\": 11.0,\n                \"flags\": 0,\n                \"font\": \"Helvetica\",\n                \"color\": 0,\n                \"origin\": (50.0, 100.0),\n                \"text\": \"Some text on first page.\",\n                \"bbox\": (50.0, 88.17500305175781, 166.1709747314453, 103.28900146484375)\n            })\n        }]\n    }]\n} \n```", "```py\n\"chars\": [{\n    \"origin\": (50.0, 100.0),\n    \"bbox\": (50.0, 88.17500305175781, 57.336997985839844, 103.28900146484375),\n    \"c\": \"S\"\n}, {\n    \"origin\": (57.33700180053711, 100.0),\n    \"bbox\": (57.33700180053711, 88.17500305175781, 63.4530029296875, 103.28900146484375),\n    \"c\": \"o\"\n}, {\n    \"origin\": (63.4530029296875, 100.0),\n    \"bbox\": (63.4530029296875, 88.17500305175781, 72.61600494384766, 103.28900146484375),\n    \"c\": \"m\"\n}, {\n    \"origin\": (72.61600494384766, 100.0),\n    \"bbox\": (72.61600494384766, 88.17500305175781, 78.73200225830078, 103.28900146484375),\n    \"c\": \"e\"\n}, {\n    \"origin\": (78.73200225830078, 100.0),\n    \"bbox\": (78.73200225830078, 88.17500305175781, 81.79000091552734, 103.28900146484375),\n    \"c\": \" \"\n< ... deleted ... >\n}, {\n    \"origin\": (163.11297607421875, 100.0),\n    \"bbox\": (163.11297607421875, 88.17500305175781, 166.1709747314453, 103.28900146484375),\n    \"c\": \".\"\n}], \n```", "```py\n>>> for line in page.get_text(\"xml\").splitlines():\n print(line)\n\n<page id=\"page0\" width=\"300\" height=\"350\">\n<block bbox=\"50 88.175 166.17098 103.289\">\n<line bbox=\"50 88.175 166.17098 103.289\" wmode=\"0\" dir=\"1 0\">\n<font name=\"Helvetica\" size=\"11\">\n<char quad=\"50 88.175 57.336999 88.175 50 103.289 57.336999 103.289\" x=\"50\"\ny=\"100\" color=\"#000000\" c=\"S\"/>\n<char quad=\"57.337 88.175 63.453004 88.175 57.337 103.289 63.453004 103.289\" x=\"57.337\"\ny=\"100\" color=\"#000000\" c=\"o\"/>\n<char quad=\"63.453004 88.175 72.616008 88.175 63.453004 103.289 72.616008 103.289\" x=\"63.453004\"\ny=\"100\" color=\"#000000\" c=\"m\"/>\n<char quad=\"72.616008 88.175 78.732 88.175 72.616008 103.289 78.732 103.289\" x=\"72.616008\"\ny=\"100\" color=\"#000000\" c=\"e\"/>\n<char quad=\"78.732 88.175 81.79 88.175 78.732 103.289 81.79 103.289\" x=\"78.732\"\ny=\"100\" color=\"#000000\" c=\" \"/>\n\n... deleted ...\n\n<char quad=\"163.11298 88.175 166.17098 88.175 163.11298 103.289 166.17098 103.289\" x=\"163.11298\"\ny=\"100\" color=\"#000000\" c=\".\"/>\n</font>\n</line>\n</block>\n</page> \n```", "```py\n<div id=\"page0\">\n<p>Some text on first page.</p>\n</div> \n```", "```py\n>>> print(page.get_text(\"text\"))\nH a l l o !\nMo r e  t e x t\ni s  f o l l o w i n g\ni n  E n g l i s h\n. . .  l e t ' s  s e e\nw h a t  h a p p e n s .\n>>> print(page.get_text(\"text\", flags=pymupdf.TEXT_INHIBIT_SPACES))\nHallo!\nMore text\nis following\nin English\n... let's see\nwhat happens.\n>>> \n```"]