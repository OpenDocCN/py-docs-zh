- en: jax.numpy.fft.irfftn
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.irfftn.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.irfftn.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Computes the inverse of rfftn.
  prefs: []
  type: TYPE_NORMAL
- en: LAX-backend implementation of [`numpy.fft.irfftn()`](https://numpy.org/doc/stable/reference/generated/numpy.fft.irfftn.html#numpy.fft.irfftn
    "(in NumPy v2.0)").
  prefs: []
  type: TYPE_NORMAL
- en: '*Original docstring below.*'
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the inverse of the N-dimensional discrete Fourier Transform
    for real input over any number of axes in an M-dimensional array by means of the
    Fast Fourier Transform (FFT). In other words, `irfftn(rfftn(a), a.shape) == a`
    to within numerical accuracy. (The `a.shape` is necessary like `len(a)` is for
    irfft, and for the same reason.)
  prefs: []
  type: TYPE_NORMAL
- en: The input should be ordered in the same way as is returned by rfftn, i.e. as
    for irfft for the final transformation axis, and as for ifftn along all the other
    axes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a** (*array_like*) – Input array.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**s** (*sequence* *of* *ints**,* *optional*) –'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shape (length of each transformed axis) of the output (`s[0]` refers to axis
    0, `s[1]` to axis 1, etc.). s is also the number of input points used along this
    axis, except for the last axis, where `s[-1]//2+1` points of the input are used.
    Along any axis, if the shape indicated by s is smaller than that of the input,
    the input is cropped. If it is larger, the input is padded with zeros.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in version 2.0: If it is `-1`, the whole input is used (no padding/trimming).'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If s is not given, the shape of the input along the axes specified by axes is
    used. Except for the last axis which is taken to be `2*(m-1)` where `m` is the
    length of the input along that axis.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0: If s is not `None`, axes must not be `None` either.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0: s must contain only `int` s, not `None` values.
    `None` values currently mean that the default value for `n` is used in the corresponding
    1-D transform, but this behaviour is deprecated.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**axes** (*sequence* *of* *ints**,* *optional*) –'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Axes over which to compute the inverse FFT. If not given, the last len(s) axes
    are used, or all axes if s is also not specified. Repeated indices in axes means
    that the inverse transform over that axis is performed multiple times.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Deprecated since version 2.0: If s is specified, the corresponding axes to
    be transformed must be explicitly specified too.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**norm** (*{"backward"**,* *"ortho"**,* *"forward"}**,* *optional*)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out** – The truncated or zero-padded input, transformed along the axes indicated
    by axes, or by a combination of s or a, as explained in the parameters section
    above. The length of each transformed axis is as given by the corresponding element
    of s, or the length of the input in every axis except for the last one if s is
    not given. In the final transformed axis the length of the output when s is not
    given is `2*(m-1)` where `m` is the length of the final transformed axis of the
    input. To get an odd number of output points in the final axis, s must be specified.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: ndarray
  prefs: []
  type: TYPE_NORMAL
