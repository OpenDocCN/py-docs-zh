- en: 0.2 Changelog
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 0.2 更新日志
- en: 原文：[https://docs.sqlalchemy.org/en/20/changelog/changelog_02.html](https://docs.sqlalchemy.org/en/20/changelog/changelog_02.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sqlalchemy.org/en/20/changelog/changelog_02.html](https://docs.sqlalchemy.org/en/20/changelog/changelog_02.html)
- en: 0.2.8
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.8
- en: 'Released: Tue Sep 05 2006'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年9月5日星期二
- en: '**[no_tags]**'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: cleanup on connection methods + documentation. custom DBAPI arguments specified
    in query string, ‘connect_args’ argument to ‘create_engine’, or custom creation
    function via ‘creator’ function to ‘create_engine’.
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 清理连接方法和文档。在查询字符串中指定自定义DBAPI参数，“create_engine”中的‘connect_args’参数，或通过‘creator’函数指定自定义创建函数到‘create_engine’。
- en: '**[no_tags]**'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “recycle” argument to Pool, is “pool_recycle” on create_engine, defaults
    to 3600 seconds; connections after this age will be closed and replaced with a
    new one, to handle db’s that automatically close stale connections
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Pool中添加了“recycle”参数，在create_engine中是“pool_recycle”，默认为3600秒；超过此时间的连接将被关闭并替换为新连接，以处理自动关闭陈旧连接的数据库
- en: 'References: [#274](https://www.sqlalchemy.org/trac/ticket/274)'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#274](https://www.sqlalchemy.org/trac/ticket/274)
- en: '**[no_tags]**'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: changed “invalidate” semantics with pooled connection; will instruct the underlying
    connection record to reconnect the next time its called. “invalidate” will also
    automatically be called if any error is thrown in the underlying call to connection.cursor().
    this will hopefully allow the connection pool to reconnect to a database that
    had been stopped and started without restarting the connecting application
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用池化连接时更改了“invalidate”语义；将指示底层连接记录在下一次调用时重新连接。“invalidate”也将在底层调用connection.cursor()时抛出任何错误时自动调用。这将希望连接池能够重新连接到已停止并重新启动的数据库，而无需重新启动连接应用程序
- en: 'References: [#121](https://www.sqlalchemy.org/trac/ticket/121)'
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#121](https://www.sqlalchemy.org/trac/ticket/121)
- en: '**[no_tags]**'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: eesh ! the tutorial doctest was broken for quite some time.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 哎呀！教程的doctest很长一段时间都是错误的。
- en: '**[no_tags]**'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: add_property() method on mapper does a “compile all mappers” step in case the
    given property references a non-compiled mapper (as it did in the case of the
    tutorial !)
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在映射器上的add_property()方法会执行“编译所有映射器”步骤，以防所给属性引用未编译的映射器（就像在教程中的情况一样！）
- en: '**[no_tags]**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: check for pg sequence already existing before create
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建之前检查pg序列是否已经存在
- en: 'References: [#277](https://www.sqlalchemy.org/trac/ticket/277)'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#277](https://www.sqlalchemy.org/trac/ticket/277)
- en: '**[no_tags]**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: if a contextual session is established via MapperExtension.get_session (as it
    is using the sessioncontext plugin, etc), a lazy load operation will use that
    session by default if the parent object is not persistent with a session already.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果通过MapperExtension.get_session（例如使用sessioncontext插件等）建立了上下文会话，则懒加载操作将默认使用该会话，如果父对象尚未与会话关联。
- en: '**[no_tags]**'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazy loads will not fire off for an object that does not have a database identity
    (why? see [https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData](https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData))
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于没有数据库标识的对象，惰性加载不会触发（为什么？请参见[https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData](https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData)）
- en: '**[no_tags]**'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unit-of-work does a better check for “orphaned” objects that are part of a “delete-orphan”
    cascade, for certain conditions where the parent isn’t available to cascade from.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工作单元对于“delete-orphan”级联中的“孤立”对象进行了更好的检查，适用于某些情况下父对象无法进行级联的情况。
- en: '**[no_tags]**'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mappers can tell if one of their objects is an “orphan” based on interactions
    with the attribute package. this check is based on a status flag maintained for
    each relationship when objects are attached and detached from each other.
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 映射器可以根据与属性包的交互来判断它们的对象是否是“孤立”的。此检查基于每个关系维护的状态标志，当对象相互附加和分离时进行维护。
- en: '**[no_tags]**'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: it is now invalid to declare a self-referential relationship with “delete-orphan”
    (as the abovementioned check would make them impossible to save)
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，使用“delete-orphan”声明自引用关系是无效的（因为上述检查会使它们无法保存）。
- en: '**[no_tags]**'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved the check for objects being part of a session when the unit of work
    seeks to flush() them as part of a relationship..
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进了在工作单元试图将对象作为关系的一部分进行flush()时检查对象是否属于会话的方法。
- en: '**[no_tags]**'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: statement execution supports using the same BindParam object more than once
    in an expression; simplified handling of positional parameters. nice job by Bill
    Noon figuring out the basic idea.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句执行支持在表达式中多次使用相同的BindParam对象；简化了位置参数的处理。Bill Noon在基本思想方面做得很好。
- en: 'References: [#280](https://www.sqlalchemy.org/trac/ticket/280)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#280](https://www.sqlalchemy.org/trac/ticket/280)
- en: '**[no_tags]**'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres reflection moved to use pg_schema tables, can be overridden with use_information_schema=True
    argument to create_engine.
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: postgres反射移至使用pg_schema表，可以通过传递use_information_schema=True参数给create_engine来覆盖。
- en: 'References: [#60](https://www.sqlalchemy.org/trac/ticket/60), [#71](https://www.sqlalchemy.org/trac/ticket/71)'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#60](https://www.sqlalchemy.org/trac/ticket/60)，[#71](https://www.sqlalchemy.org/trac/ticket/71)
- en: '**[no_tags]**'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added case_sensitive argument to MetaData, Table, Column, determines itself
    automatically based on if a parent schemaitem has a non-None setting for the flag,
    or if not, then whether the identifier name is all lower case or not. when set
    to True, quoting is applied to identifiers with mixed or uppercase identifiers.
    quoting is also applied automatically in all cases to identifiers that are known
    to be reserved words or contain other non-standard characters. various database
    dialects can override all of this behavior, but currently they are all using the
    default behavior. tested with postgres, mysql, sqlite, oracle. needs more testing
    with firebird, ms-sql. part of the ongoing work with
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MetaData、Table、Column中添加了case_sensitive参数，根据父模式项是否具有标志的非None设置或否，以及标识符名称是否全为小写来自动确定。当设置为True时，对具有混合或大写标识符的标识符应用引用。对已知为保留字或包含其他非标准字符的标识符也自动应用引用。各种数据库方言可以覆盖所有这些行为，但目前它们都使用默认行为。已在postgres、mysql、sqlite、oracle上进行了测试。需要在firebird、ms-sql上进行更多测试。正在进行的工作的一部分
- en: 'References: [#155](https://www.sqlalchemy.org/trac/ticket/155)'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#155](https://www.sqlalchemy.org/trac/ticket/155)
- en: '**[no_tags]**'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unit tests updated to run without any pysqlite installed; pool test uses a mock
    DBAPI
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单元测试已更新，可以在没有安装任何pysqlite的情况下运行；池测试使用模拟的DBAPI
- en: '**[no_tags]**'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: urls support escaped characters in passwords
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: URL支持密码中的转义字符
- en: 'References: [#281](https://www.sqlalchemy.org/trac/ticket/281)'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#281](https://www.sqlalchemy.org/trac/ticket/281)
- en: '**[no_tags]**'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added limit/offset to UNION queries (though not yet in oracle)
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对UNION查询的limit/offset支持（尽管oracle中还没有）
- en: '**[no_tags]**'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “timezone=True” flag to DateTime and Time types. postgres so far will
    convert this to “TIME[STAMP] (WITH|WITHOUT) TIME ZONE”, so that control over timezone
    presence is more controllable (psycopg2 returns datetimes with tzinfo’s if available,
    which can create confusion against datetimes that don’t).
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了“timezone=True”标志到DateTime和Time类型。到目前为止，postgres将其转换为“TIME[STAMP] (WITH|WITHOUT)
    TIME ZONE”，以便更可控地控制时区的存在（如果可用，psycopg2会返回带有tzinfo的datetimes，这可能会与不带tzinfo的datetimes造成混淆）。
- en: '**[no_tags]**'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to using query.count() with distinct, **kwargs with SelectResults count()
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了使用query.count()与distinct、SelectResults count()的kwargs的问题
- en: 'References: [#287](https://www.sqlalchemy.org/trac/ticket/287)'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#287](https://www.sqlalchemy.org/trac/ticket/287)
- en: '**[no_tags]**'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: deregister Table from MetaData when autoload fails;
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当autoload失败时，从MetaData中注销Table；
- en: 'References: [#289](https://www.sqlalchemy.org/trac/ticket/289)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#289](https://www.sqlalchemy.org/trac/ticket/289)
- en: '**[no_tags]**'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: import of py2.5s sqlite3
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导入py2.5的sqlite3
- en: 'References: [#293](https://www.sqlalchemy.org/trac/ticket/293)'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#293](https://www.sqlalchemy.org/trac/ticket/293)
- en: '**[no_tags]**'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unicode fix for startswith()/endswith()
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了startswith()/endswith()的unicode问题
- en: 'References: [#296](https://www.sqlalchemy.org/trac/ticket/296)'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#296](https://www.sqlalchemy.org/trac/ticket/296)
- en: 0.2.7
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.7
- en: 'Released: Sat Aug 12 2006'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Sat Aug 12 2006
- en: '**[no_tags]**'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: quoting facilities set up so that database-specific quoting can be turned on
    for individual table, schema, and column identifiers when used in all queries/creates/drops.
    Enabled via “quote=True” in Table or Column, as well as “quote_schema=True” in
    Table. Thanks to Aaron Spike for the excellent efforts.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 引用设施设置，以便在所有查询/创建/删除中为单个表、模式和列标识符启用特定于数据库的引用。通过在Table或Column中启用“quote=True”以及在Table中启用“quote_schema=True”来启用。感谢Aaron
    Spike的出色工作。
- en: '**[no_tags]**'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: assignmapper was setting is_primary=True, causing all sorts of mayhem by not
    raising an error when redundant mappers were set up, fixed
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assignmapper设置is_primary=True，导致设置冗余映射器时未引发错误，已修复
- en: '**[no_tags]**'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added allow_null_pks option to Mapper, allows rows where some primary key columns
    are null (i.e. when mapping to outer joins etc)
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Mapper中添加了allow_null_pks选项，允许某些主键列为空的行（例如映射到外连接等情况）
- en: '**[no_tags]**'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: modification to unitofwork to not maintain ordering within the “new” list or
    within the UOWTask “objects” list; instead, new objects are tagged with an ordering
    identifier as they are registered as new with the session, and the INSERT statements
    are then sorted within the mapper save_obj. the INSERT ordering has basically
    been pushed all the way to the end of the flush cycle. that way the various sorts
    and organizations occurring within UOWTask (particularly the circular task sort)
    don’t have to worry about maintaining order (which they weren’t anyway)
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修改unitofwork以不在“new”列表或UOWTask“objects”列表中维护排序；相反，新对象在向会话注册为新对象时被标记为排序标识符，并且INSERT语句然后在映射器save_obj中排序。INSERT排序基本上被推迟到刷新周期的最后。这样，在UOWTask中发生的各种排序和组织（特别是循环任务排序）就不必担心维护顺序（它们本来也不会）
- en: '**[no_tags]**'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed reflection of foreign keys to autoload the referenced table if it was
    not loaded already
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了外键反射以自动加载引用表（如果尚未加载）
- en: '**[no_tags]**'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: pass URL query string arguments to connect() function
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将URL查询字符串参数传递给connect()函数
- en: 'References: [#256](https://www.sqlalchemy.org/trac/ticket/256)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#256](https://www.sqlalchemy.org/trac/ticket/256)
- en: '**[no_tags]**'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: oracle boolean type
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: oracle布尔类型
- en: 'References: [#257](https://www.sqlalchemy.org/trac/ticket/257)'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#257](https://www.sqlalchemy.org/trac/ticket/257)
- en: '**[no_tags]**'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: custom primary/secondary join conditions in a relation *will* be propagated
    to backrefs by default. specifying a backref() will override this behavior.
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在关系中自定义主/次连接条件 *将* 默认传播到backrefs。指定backref()将覆盖此行为。
- en: '**[no_tags]**'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: better check for ambiguous join conditions in sql.Join; propagates to a better
    error message in PropertyLoader (i.e. relation()/backref()) for when the join
    condition can’t be reasonably determined.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在sql.Join中更好地检查模糊的连接条件；在PropertyLoader中传播到更好的错误消息（即relation()/backref()）以处理无法合理确定连接条件的情况。
- en: '**[no_tags]**'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: sqlite creates ForeignKeyConstraint objects properly upon table reflection.
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sqlite在表反射时正确创建ForeignKeyConstraint对象。
- en: '**[no_tags]**'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: adjustments to pool stemming from changes made for. overflow counter should
    only be decremented if the connection actually succeeded. added a test script
    to attempt testing this.
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于为所做的更改而起源的池调整。如果连接实际成功，溢出计数器应该只在连接成功时递减。添加了一个测试脚本来尝试测试这一点。
- en: 'References: [#224](https://www.sqlalchemy.org/trac/ticket/224)'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#224](https://www.sqlalchemy.org/trac/ticket/224)
- en: '**[no_tags]**'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed mysql reflection of default values to be PassiveDefault
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了mysql反射默认值为PassiveDefault
- en: '**[no_tags]**'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added reflected ‘tinyint’, ‘mediumint’ type to MS-SQL.
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MS-SQL中添加了反射的‘tinyint’、‘mediumint’类型。
- en: 'References: [#263](https://www.sqlalchemy.org/trac/ticket/263), [#264](https://www.sqlalchemy.org/trac/ticket/264)'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#263](https://www.sqlalchemy.org/trac/ticket/263), [#264](https://www.sqlalchemy.org/trac/ticket/264)
- en: '**[no_tags]**'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: SingletonThreadPool has a size and does a cleanup pass, so that only a given
    number of thread-local connections stay around (needed for sqlite applications
    that dispose of threads en masse)
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SingletonThreadPool有一个大小，并进行清理，以便只有给定数量的线程本地连接保持活动（对于大量释放线程的sqlite应用程序是必要的）
- en: '**[no_tags]**'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed small pickle bug(s) with lazy loaders
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了懒加载器中的小pickle错误
- en: 'References: [#265](https://www.sqlalchemy.org/trac/ticket/265), [#267](https://www.sqlalchemy.org/trac/ticket/267)'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#265](https://www.sqlalchemy.org/trac/ticket/265), [#267](https://www.sqlalchemy.org/trac/ticket/267)
- en: '**[no_tags]**'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed possible error in mysql reflection where certain versions return an array
    instead of string for SHOW CREATE TABLE call
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了mysql反射可能出现的错误，某些版本返回数组而不是字符串以进行SHOW CREATE TABLE调用
- en: '**[no_tags]**'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to lazy loads when mapping to joins
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了映射到连接时的懒加载
- en: 'References: [#1770](https://www.sqlalchemy.org/trac/ticket/1770)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#1770](https://www.sqlalchemy.org/trac/ticket/1770)
- en: '**[no_tags]**'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: all create()/drop() calls have a keyword argument of “connectable”. “engine”
    is deprecated.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有create()/drop()调用都有一个“connectable”的关键字参数。“engine”已被弃用。
- en: '**[no_tags]**'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed ms-sql connect() to work with adodbapi
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了ms-sql connect()与adodbapi一起工作的问题
- en: '**[no_tags]**'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “nowait” flag to Select()
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向Select()添加了“nowait”标志
- en: '**[no_tags]**'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: inheritance check uses issubclass() instead of direct __mro__ check to make
    sure class A inherits from B, allowing mapper inheritance to more flexibly correspond
    to class inheritance
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 继承检查使用issubclass()而不是直接的__mro__检查，以确保类A继承自B，使映射继承更灵活地对应于类继承
- en: 'References: [#271](https://www.sqlalchemy.org/trac/ticket/271)'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#271](https://www.sqlalchemy.org/trac/ticket/271)
- en: '**[no_tags]**'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: SelectResults will use a subselect, when calling an aggregate (i.e. max, min,
    etc.) on a SelectResults that has an ORDER BY clause
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当在具有ORDER BY子句的SelectResults上调用聚合函数（如max、min等）时，SelectResults将使用子选择
- en: 'References: [#252](https://www.sqlalchemy.org/trac/ticket/252)'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#252](https://www.sqlalchemy.org/trac/ticket/252)
- en: '**[no_tags]**'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to types so that database-specific types more easily used; fixes to mysql
    text types to work with this methodology
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对类型进行了修复，以便更容易使用特定于数据库的类型；修复了与此方法一起使用mysql文本类型的问题
- en: 'References: [#269](https://www.sqlalchemy.org/trac/ticket/269)'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#269](https://www.sqlalchemy.org/trac/ticket/269)
- en: '**[no_tags]**'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to sqlite date type organization
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对sqlite日期类型组织进行了一些修复
- en: '**[no_tags]**'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added MSTinyInteger to MS-SQL
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将MSTinyInteger添加到MS-SQL
- en: 'References: [#263](https://www.sqlalchemy.org/trac/ticket/263)'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#263](https://www.sqlalchemy.org/trac/ticket/263)
- en: 0.2.6
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.6
- en: 'Released: Thu Jul 20 2006'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年7月20日星期四
- en: '**[no_tags]**'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: big overhaul to schema to allow truly composite primary and foreign key constraints,
    via new ForeignKeyConstraint and PrimaryKeyConstraint objects. Existing methods
    of primary/foreign key creation have not been changed but use these new objects
    behind the scenes. table creation and reflection is now more table oriented rather
    than column oriented.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对模式进行了重大改进，以允许真正的复合主键和外键约束，通过新的ForeignKeyConstraint和PrimaryKeyConstraint对象。现有的主键/外键创建方法没有改变，但在幕后使用这些新对象。表的创建和反射现在更加面向表而不是面向列。
- en: 'References: [#76](https://www.sqlalchemy.org/trac/ticket/76)'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#76](https://www.sqlalchemy.org/trac/ticket/76)
- en: '**[no_tags]**'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to MapperExtension calling scheme, wasn’t working very well previously
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对MapperExtension调用方案进行了全面改进，之前的工作效果不是很好
- en: '**[no_tags]**'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweaks to ActiveMapper, supports self-referential relationships
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对ActiveMapper进行了调整，支持自引用关系
- en: '**[no_tags]**'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: slight rearrangement to objectstore (in activemapper/threadlocal) so that the
    SessionContext is referenced by ‘.context’ instead of subclassed directly.
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对objectstore（在activemapper/threadlocal中）进行了轻微重新排列，以便SessionContext通过'.context'引用而不是直接子类化。
- en: '**[no_tags]**'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: activemapper will use threadlocal’s objectstore if the mod is activated when
    activemapper is imported
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在导入activemapper时激活了mod，则activemapper将使用threadlocal的objectstore
- en: '**[no_tags]**'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to URL regexp to allow filenames with ‘@’ in them
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对URL正则表达式进行了小修复，以允许文件名中包含'@'
- en: '**[no_tags]**'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to Session expunge/update/etc…needs more cleanup.
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对Session的expunge/update等进行了修复...需要更多清理。
- en: '**[no_tags]**'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: select_table mappers *still* weren’t always compiling
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: select_table映射器仍然不总是编译
- en: '**[no_tags]**'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed up Boolean datatype
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了Boolean数据类型
- en: '**[no_tags]**'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added count()/count_by() to list of methods proxied by assignmapper; this also
    adds them to activemapper
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将count()/count_by()添加到assignmapper代理的方法列表中；这也将它们添加到activemapper中
- en: '**[no_tags]**'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: connection exceptions wrapped in DBAPIError
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接异常包装在DBAPIError中
- en: '**[no_tags]**'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ActiveMapper now supports autoloading column definitions from the database if
    you supply a __autoload__ = True attribute in your mapping inner-class. Currently
    this does not support reflecting any relationships.
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在映射内部类中提供了__autoload__ = True属性，则ActiveMapper现在支持从数据库自动加载列定义。目前不支持反射任何关系。
- en: '**[no_tags]**'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: deferred column load could screw up the connection status in a flush() under
    some circumstances, this was fixed
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在某些情况下，延迟列加载可能会在flush()中破坏连接状态，这个问题已经修复
- en: '**[no_tags]**'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: expunge() was not working with cascade, fixed.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了expunge()在级联时无法工作的问题
- en: '**[no_tags]**'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: potential endless loop in cascading operations fixed.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了级联操作中潜在的无限循环
- en: '**[no_tags]**'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “synonym()” function, applied to properties to have a propname the same
    as another, for the purposes of overriding props and allowing the original propname
    to be accessible in select_by().
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了“synonym()”函数，应用于属性，使一个属性名与另一个属性名相同，以便覆盖属性并允许在select_by()中访问原始属性名。
- en: '**[no_tags]**'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to typing in clause construction which specifically helps type issues with
    polymorphic_union (CAST/ColumnClause propagates its type to proxy columns)
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在子句构造中的类型问题，特别有助于多态联合的类型问题（CAST/ColumnClause将其类型传播到代理列）
- en: '**[no_tags]**'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mapper compilation work ongoing, someday it’ll work….moved around the initialization
    of MapperProperty objects to be after all mappers are created to better handle
    circular compilations. do_init() method is called on all properties now which
    are more aware of their “inherited” status if so.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 映射器编译工作正在进行中，总有一天会成功……将MapperProperty对象的初始化移动到所有映射器创建后以更好地处理循环编译。现在所有属性都调用do_init()方法，如果需要，它们更加了解自己的“继承”状态。
- en: '**[no_tags]**'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: eager loads explicitly disallowed on self-referential relationships, or relationships
    to an inheriting mapper (which is also self-referential)
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁止在自引用关系或与继承映射器（也是自引用关系）的关系上显式急切加载
- en: '**[no_tags]**'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: reduced bind param size in query._get to appease the picky oracle
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 减少了查询._get中绑定参数的大小，以满足挑剔的Oracle
- en: 'References: [#244](https://www.sqlalchemy.org/trac/ticket/244)'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#244](https://www.sqlalchemy.org/trac/ticket/244)
- en: '**[no_tags]**'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘checkfirst’ argument to table.create()/table.drop(), as well as table.exists()
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在table.create()/table.drop()中添加了‘checkfirst’参数，以及table.exists()
- en: 'References: [#234](https://www.sqlalchemy.org/trac/ticket/234)'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#234](https://www.sqlalchemy.org/trac/ticket/234)
- en: '**[no_tags]**'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some other ongoing fixes to inheritance
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对继承进行了一些其他持续修复
- en: 'References: [#245](https://www.sqlalchemy.org/trac/ticket/245)'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#245](https://www.sqlalchemy.org/trac/ticket/245)
- en: '**[no_tags]**'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: attribute/backref/orphan/history-tracking tweaks as usual…
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 属性/backref/orphan/history-tracking调整如常…
- en: 0.2.5
  id: totrans-175
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.5
- en: 'Released: Sat Jul 08 2006'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年7月8日
- en: '**[no_tags]**'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed endless loop bug in select_by(), if the traversal hit two mappers that
    referenced each other
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在select_by()中的无限循环错误，如果遍历命中两个相互引用的映射器
- en: '**[no_tags]**'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: upgraded all unittests to insert ‘./lib/’ into sys.path, working around new
    setuptools PYTHONPATH-killing behavior
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将所有单元测试升级为将‘./lib/’插入sys.path，解决了新的setuptools PYTHONPATH破坏行为
- en: '**[no_tags]**'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: further fixes with attributes/dependencies/etc….
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进一步修复属性/依赖关系等……
- en: '**[no_tags]**'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved error handling for when DynamicMetaData is not connected
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进了当DynamicMetaData未连接时的错误处理
- en: '**[no_tags]**'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: MS-SQL support largely working (tested with pymssql)
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MS-SQL支持基本正常（已使用pymssql进行测试）
- en: '**[no_tags]**'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ordering of UPDATE and DELETE statements within groups is now in order of primary
    key values, for more deterministic ordering
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 组内UPDATE和DELETE语句的排序现在按主键值的顺序进行，以获得更具确定性的排序
- en: '**[no_tags]**'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: after_insert/delete/update mapper extensions now called per object, not per-object-per-table
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在插入/删除/更新映射器扩展现在按对象而不是按对象-表调用
- en: '**[no_tags]**'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: further fixes/refactorings to mapper compilation
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进一步修复/重构映射器编译
- en: 0.2.4
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.4
- en: 'Released: Tue Jun 27 2006'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年6月27日
- en: '**[no_tags]**'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: try/except when the mapper sets init.__name__ on a mapped class, supports python
    2.3
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当映射器在映射类上设置init.__name__时，支持Python 2.3时使用try/except
- en: '**[no_tags]**'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where threadlocal engine would still autocommit despite a transaction
    in progress
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了线程本地引擎仍会自动提交尽管事务正在进行的错误
- en: '**[no_tags]**'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazy load and deferred load operations require the parent object to be in a
    Session to do the operation; whereas before the operation would just return a
    blank list or None, it now raises an exception.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 惰性加载和延迟加载操作需要父对象在会话中才能执行操作；而以前操作只会返回空列表或None，现在会引发异常。
- en: '**[no_tags]**'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Session.update() is slightly more lenient if the session to which the given
    object was formerly attached to was garbage collected; otherwise still requires
    you explicitly remove the instance from the previous Session.
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定对象曾经附加到的会话被垃圾回收，Session.update()会稍微宽松一些；否则仍然需要显式从先前的会话中删除实例。
- en: '**[no_tags]**'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to mapper compilation, checking for more error conditions
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了映射器编译时的错误检查
- en: '**[no_tags]**'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to eager loading combined with ordering/limit/offset
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了与排序/限制/偏移量结合使用时的急切加载问题
- en: '**[no_tags]**'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'utterly remarkable: added a single space between ‘CREATE TABLE’ and ‘(<the
    rest of it>’ since *that’s how MySQL indicates a non- reserved word tablename…..*'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 非常引人注目：在‘CREATE TABLE’和‘(<the rest of it>’之间添加了一个空格，因为*这就是MySQL指示非保留字表名的方式……*
- en: 'References: [#206](https://www.sqlalchemy.org/trac/ticket/206)'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#206](https://www.sqlalchemy.org/trac/ticket/206)
- en: '**[no_tags]**'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: more fixes to inheritance, related to many-to-many relations properly saving
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对继承的更多修复，涉及到许多对多关系的正确保存
- en: '**[no_tags]**'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug when specifying explicit module to mysql dialect
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在指定显式模块给 mysql 方言时的bug
- en: '**[no_tags]**'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: when QueuePool times out it raises a TimeoutError instead of erroneously making
    another connection
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 QueuePool 超时时，会引发 TimeoutError 而不是错误地建立另一个连接
- en: '**[no_tags]**'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Queue.Queue usage in pool has been replaced with a locally modified version
    (works in py2.3/2.4!) that uses a threading.RLock for a mutex. this is to fix
    a reported case where a ConnectionFairy’s __del__() method got called within the
    Queue’s get() method, which then returns its connection to the Queue via the put()
    method, causing a reentrant hang unless threading.RLock is used.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在池中使用 Queue.Queue 已被替换为一个经过本地修改的版本（在 py2.3/2.4 中可用！），它使用 threading.RLock 作为互斥锁。这是为了修复一个报告的情况，其中
    ConnectionFairy 的 __del__() 方法在 Queue 的 get() 方法中被调用，然后通过 put() 方法将其连接返回给 Queue，导致在不使用
    threading.RLock 的情况下发生重入挂起。
- en: '**[no_tags]**'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres will not place SERIAL keyword on a primary key column if it has a foreign
    key constraint
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果主键列有外键约束，Postgres 将不会在主键列上放置 SERIAL 关键字
- en: '**[no_tags]**'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: cursor() method on ConnectionFairy allows db-specific extension arguments to
    be propagated
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ConnectionFairy 上的 cursor() 方法允许传播特定于数据库的扩展参数
- en: 'References: [#221](https://www.sqlalchemy.org/trac/ticket/221)'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#221](https://www.sqlalchemy.org/trac/ticket/221)
- en: '**[no_tags]**'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazy load bind params properly propagate column type
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 惰性加载绑定参数正确传播列类型
- en: 'References: [#225](https://www.sqlalchemy.org/trac/ticket/225)'
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#225](https://www.sqlalchemy.org/trac/ticket/225)
- en: '**[no_tags]**'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'new MySQL types: MSEnum, MSTinyText, MSMediumText, MSLongText, etc. more support
    for MS-specific length/precision params in numeric types patch courtesy Mike Bernson'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新的 MySQL 类型：MSEnum、MSTinyText、MSMediumText、MSLongText 等。在数值类型中更多支持 MS 特定的长度/精度参数，补丁由
    Mike Bernson 提供
- en: '**[no_tags]**'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to connection pool invalidate()
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对连接池 invalidate() 进行了一些修复
- en: 'References: [#224](https://www.sqlalchemy.org/trac/ticket/224)'
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#224](https://www.sqlalchemy.org/trac/ticket/224)
- en: 0.2.3
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.3
- en: 'Released: Sat Jun 17 2006'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年6月17日（星期六）
- en: '**[no_tags]**'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to mapper compilation to be deferred. this allows mappers to be constructed
    in any order, and their relationships to each other are compiled when the mappers
    are first used.
  id: totrans-234
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重大改动，将映射器编译推迟。这样可以按任意顺序构建映射器，并且它们之间的关系在首次使用映射器时编译。
- en: '**[no_tags]**'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed a pretty big speed bottleneck in cascading behavior particularly when
    backrefs were in use
  id: totrans-236
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在使用反向引用时级联行为中的一个相当大的速度瓶颈
- en: '**[no_tags]**'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: the attribute instrumentation module has been completely rewritten; its now
    a large degree simpler and clearer, slightly faster. the “history” of an attribute
    is no longer micromanaged with each change and is instead part of a “CommittedState”
    object created when the instance is first loaded. HistoryArraySet is gone, the
    behavior of list attributes is now more open ended (i.e. they’re not sets anymore).
  id: totrans-238
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 属性检测模块已完全重写；现在更简单、更清晰，稍微更快。属性的“历史”不再在每次更改时进行微观管理，而是作为实例首次加载时创建的“CommittedState”对象的一部分。HistoryArraySet
    已删除，列表属性的行为现在更加开放（即它们不再是集合）。
- en: '**[no_tags]**'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: py2.4 “set” construct used internally, falls back to sets.Set when “set” not
    available/ordering is needed.
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在内部使用 py2.4 的“set”构造，当“set”不可用/需要排序时，会回退到 sets.Set。
- en: '**[no_tags]**'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to transaction control, so that repeated rollback() calls don’t fail (was
    failing pretty badly when flush() would raise an exception in a larger try/except
    transaction block)
  id: totrans-242
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了事务控制，使得重复的 rollback() 调用不会失败（在较大的 try/except 事务块中 flush() 引发异常时会失败得相当严重）
- en: '**[no_tags]**'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”foreignkey” argument to relation() can also be a list. fixed auto-foreignkey
    detection
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ”foreignkey” 参数在 relation() 中也可以是一个列表。修复了自动外键检测
- en: 'References: [#151](https://www.sqlalchemy.org/trac/ticket/151)'
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#151](https://www.sqlalchemy.org/trac/ticket/151)
- en: '**[no_tags]**'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where tables with schema names weren’t getting indexed in the MetaData
    object properly
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了一个bug，导致具有模式名称的表在 MetaData 对象中未正确索引
- en: '**[no_tags]**'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where Column with redefined “key” property wasn’t getting type conversion
    happening in the ResultProxy
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了重新定义“key”属性的 Column 在 ResultProxy 中未进行类型转换的bug
- en: 'References: [#207](https://www.sqlalchemy.org/trac/ticket/207)'
  id: totrans-250
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#207](https://www.sqlalchemy.org/trac/ticket/207)
- en: '**[no_tags]**'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed ‘port’ attribute of URL to be an integer if present
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 URL 的‘port’属性，如果存在则为整数
- en: '**[no_tags]**'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed old bug where if a many-to-many table mapped as “secondary” had extra
    columns, delete operations didn’t work
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了旧bug，即如果作为“secondary”映射的多对多表具有额外列，则删除操作将无法正常工作
- en: '**[no_tags]**'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: bugfixes for mapping against UNION queries
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了针对UNION查询的映射的bug
- en: '**[no_tags]**'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed incorrect exception class thrown when no DB driver present
  id: totrans-258
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了当没有DB驱动程序时抛出的不正确异常类
- en: '**[no_tags]**'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added NonExistentTable exception thrown when reflecting a table that doesn’t
    exist
  id: totrans-260
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当反射一个不存在的表时，添加了NonExistentTable异常抛出
- en: 'References: [#138](https://www.sqlalchemy.org/trac/ticket/138)'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#138](https://www.sqlalchemy.org/trac/ticket/138)
- en: '**[no_tags]**'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to ActiveMapper regarding one-to-one backrefs, other refactorings
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对ActiveMapper进行了小修复，涉及一对一backrefs，其他重构
- en: '**[no_tags]**'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overridden constructor in mapped classes gets __name__ and __doc__ from the
    original class
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在映射类中重写的构造函数从原始类获取__name__和__doc__
- en: '**[no_tags]**'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed small bug in selectresult.py regarding mapper extension
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ���复了selectresult.py中关于mapper扩展的小bug
- en: 'References: [#200](https://www.sqlalchemy.org/trac/ticket/200)'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#200](https://www.sqlalchemy.org/trac/ticket/200)
- en: '**[no_tags]**'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small tweak to cascade_mappers, not very strongly supported function at the
    moment
  id: totrans-270
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对cascade_mappers进行了小调整，目前不是非常强力支持的功能
- en: '**[no_tags]**'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to between(), column.between() to propagate typing information better
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对between()、column.between()进行了一些修正，以更好地传播类型信息
- en: 'References: [#202](https://www.sqlalchemy.org/trac/ticket/202)'
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#202](https://www.sqlalchemy.org/trac/ticket/202)
- en: '**[no_tags]**'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: if an object fails to be constructed, is not added to the session
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果对象无法构建，则不会添加到会话中
- en: 'References: [#203](https://www.sqlalchemy.org/trac/ticket/203)'
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#203](https://www.sqlalchemy.org/trac/ticket/203)
- en: '**[no_tags]**'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: CAST function has been made into its own clause object with its own compilation
    function in ansicompiler; allows MySQL to silently ignore most CAST calls since
    MySQL seems to only support the standard CAST syntax with Date types. MySQL-compatible
    CAST support for strings, ints, etc. a TODO
  id: totrans-278
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CAST函数已被制作为其自己的子句对象，具有自己的编译函数在ansicompiler中；允许MySQL默默地忽略大多数CAST调用，因为MySQL似乎只支持具有Date类型的标准CAST语法。为字符串、整数等提供与MySQL兼容的CAST支持，一个TODO
- en: 0.2.2
  id: totrans-279
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.2
- en: 'Released: Mon Jun 05 2006'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Mon Jun 05 2006
- en: '**[no_tags]**'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: big improvements to polymorphic inheritance behavior, enabling it to work with
    adjacency list table structures
  id: totrans-282
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对多态继承行为进行了重大改进，使其能够与邻接列表表结构一起使用
- en: 'References: [#190](https://www.sqlalchemy.org/trac/ticket/190)'
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#190](https://www.sqlalchemy.org/trac/ticket/190)
- en: '**[no_tags]**'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: major fixes and refactorings to inheritance relationships overall, more unit
    tests
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对继承关系的主要修复和重构，更多单元测试
- en: '**[no_tags]**'
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed “echo_pool” flag on create_engine()
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在create_engine()上的“echo_pool”标志
- en: '**[no_tags]**'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to docs, removed incorrect info that close() is unsafe to use with threadlocal
    strategy (its totally safe !)
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复文档，删除了与threadlocal策略一起使用close()不安全的错误信息（完全安全！）
- en: '**[no_tags]**'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: create_engine() can take URLs as string or unicode
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine()可以接受字符串或unicode格式的URL
- en: 'References: [#188](https://www.sqlalchemy.org/trac/ticket/188)'
  id: totrans-292
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#188](https://www.sqlalchemy.org/trac/ticket/188)
- en: '**[no_tags]**'
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: firebird support partially completed; thanks to James Ralston and Brad Clements
    for their efforts.
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firebird支持部分完成；感谢James Ralston和Brad Clements的努力。
- en: '**[no_tags]**'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Oracle url translation was broken, fixed, will feed host/port/sid into cx_oracle
    makedsn() if ‘database’ field is present, else uses straight TNS name from the
    ‘host’ field
  id: totrans-296
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Oracle的url翻译出现问题，已修复，如果‘database’字段存在，则将主机/端口/sid传递给cx_oracle makedsn()，否则直接使用‘host’字段中的TNS名称
- en: '**[no_tags]**'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to using unicode criterion for query.get()/query.load()
  id: totrans-298
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了对于query.get()/query.load()使用unicode条件的bug
- en: '**[no_tags]**'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: count() function on selectables now uses table primary key or first column instead
    of “1” for criterion, also uses label “rowcount” instead of “count”.
  id: totrans-300
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: count()函数在selectables上现在使用表的主键或第一列而不是“1”作为条件，还使用标签“rowcount”而不是“count”。
- en: '**[no_tags]**'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: got rudimental “mapping to multiple tables” functionality cleaned up, more correctly
    documented
  id: totrans-302
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对映射到多个表的基本功能进行了清理，更正确地记录
- en: '**[no_tags]**'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: restored global_connect() function, attaches to a DynamicMetaData instance called
    “default_metadata”. leaving MetaData arg to Table out will use the default metadata.
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 恢复了global_connect()函数，将其附加到名为“default_metadata”的DynamicMetaData实例。如果在Table中留出MetaData参数，则将使用默认元数据。
- en: '**[no_tags]**'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to session cascade behavior, entity_name propagation
  id: totrans-306
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了会话级联行为、entity_name传播的问题
- en: '**[no_tags]**'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: reorganized unittests into subdirectories
  id: totrans-308
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 unittest 重新组织到子目录中
- en: '**[no_tags]**'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: more fixes to threadlocal connection nesting patterns
  id: totrans-310
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对线程本地连接嵌套模式进行了更多修复
- en: 0.2.1
  id: totrans-311
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.1
- en: 'Released: Mon May 29 2006'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年5月29日 星期一
- en: '**[no_tags]**'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”pool” argument to create_engine() properly propagates
  id: totrans-314
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine() 的“pool”参数正确传播
- en: '**[no_tags]**'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to URL, raises exception if not parsed, does not pass blank fields along
    to the DB connect string (a string such as user:host@/db was breaking on postgres)
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 URL，如果未解析则引发异常，不会将空字段传递给 DB 连接字符串（例如 user:host@/db 这样的字符串在 postgres 上会出错）
- en: '**[no_tags]**'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fixes to Mapper when it inserts and tries to get new primary key values
    back
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Mapper 插入并尝试获取新的主键值时进行了一些小修复
- en: '**[no_tags]**'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: rewrote half of TLEngine, the ComposedSQLEngine used with ‘strategy=”threadlocal”’.
    it now properly implements engine.begin()/ engine.commit(), which nest fully with
    connection.begin()/trans.commit(). added about six unittests.
  id: totrans-320
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重写了 TLEngine 的一半，与 ‘strategy=”threadlocal”’ 一起使用的 ComposedSQLEngine。现在它正确地实现了
    engine.begin()/ engine.commit()，与 connection.begin()/trans.commit() 完全嵌套。添加了大约六个
    unittest。
- en: '**[no_tags]**'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: major “duh” in pool.Pool, forgot to put back the WeakValueDictionary. unittest
    which was supposed to check for this was also silently missing it. fixed unittest
    to ensure that ConnectionFairy properly falls out of scope.
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 pool.Pool 中发现了一个重大的“duh”问题，忘记将 WeakValueDictionary 放回去。应该检查这一点的 unittest 也悄悄地遗漏了。修复了
    unittest 以确保 ConnectionFairy 正确地退出作用域。
- en: '**[no_tags]**'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: placeholder dispose() method added to SingletonThreadPool, doesn’t do anything
    yet
  id: totrans-324
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了一个占位符 dispose() 方法到 SingletonThreadPool，目前还没有任何功能
- en: '**[no_tags]**'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: rollback() is automatically called when an exception is raised, but only if
    there’s no transaction in process (i.e. works more like autocommit).
  id: totrans-326
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当引发异常时自动调用 rollback()，但仅当没有正在进行的事务时（即更像是自动提交）。
- en: '**[no_tags]**'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed exception raise in sqlite if no sqlite module present
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 sqlite 中如果没有 sqlite 模块存在时引发的异常
- en: '**[no_tags]**'
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added extra example detail for association object doc
  id: totrans-330
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为关联对象文档添加了额外的示例细节
- en: '**[no_tags]**'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Connection adds checks for already being closed
  id: totrans-332
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Connection 添加了检查是否已关闭的功能
- en: 0.2.0
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.0
- en: 'Released: Sat May 27 2006'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年5月27日 星期六
- en: '**[no_tags]**'
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to Engine system so that what was formerly the SQLEngine is now a ComposedSQLEngine
    which consists of a variety of components, including a Dialect, ConnectionProvider,
    etc. This impacted all the db modules as well as Session and Mapper.
  id: totrans-336
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 Engine 系统进行了全面改进，以前的 SQLEngine 现在是一个 ComposedSQLEngine，包括各种组件，包括 Dialect、ConnectionProvider
    等。这影响了所有的 db 模块以及 Session 和 Mapper。
- en: '**[no_tags]**'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'create_engine now takes only RFC-1738-style strings: `driver://user:password@host:port/database`'
  id: totrans-338
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine 现在只接受 RFC-1738 格式的字符串：`driver://user:password@host:port/database`
- en: '**update** this format is generally but not exactly RFC-1738, including that
    underscores, not dashes or periods, are accepted in the “scheme” portion.'
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**update** 这种格式通常但不完全符合 RFC-1738，包括“scheme”部分接受下划线而不是破折号或句点。'
- en: '**[no_tags]**'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: total rewrite of connection-scoping methodology, Connection objects can now
    execute clause elements directly, added explicit “close” as well as support throughout
    Engine/ORM to handle closing properly, no longer relying upon __del__ internally
    to return connections to the pool.
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对连接作用域方法进行了全面重写，Connection 对象现在可以直接执行子句元素，增加了显式的“close”以及在整个 Engine/ORM 中处理关闭的支持，不再依赖于内部的
    __del__ 来将连接返回到池中。
- en: 'References: [#152](https://www.sqlalchemy.org/trac/ticket/152)'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#152](https://www.sqlalchemy.org/trac/ticket/152)
- en: '**[no_tags]**'
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to Session interface and scoping. uses hibernate-style methods, including
    query(class), save(), save_or_update(), etc. no threadlocal scope is installed
    by default. Provides a binding interface to specific Engines and/or Connections
    so that underlying Schema objects do not need to be bound to an Engine. Added
    a basic SessionTransaction object that can simplistically aggregate transactions
    across multiple engines.
  id: totrans-344
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 Session 接口和作用域进行了全面改进。使用 hibernate 风格的方法，包括 query(class)、save()、save_or_update()
    等。默认情况下不安装 threadlocal 作用域。提供了一个绑定接口到特定 Engines 和/或 Connections 的方法，使底层 Schema
    对象不需要绑定到一个 Engine。添加了一个基本的 SessionTransaction 对象，可以简单地跨多个 Engines 聚合事务。
- en: '**[no_tags]**'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to mapper’s dependency and “cascade” behavior; dependency logic factored
    out of properties.py into a separate module “dependency.py”. “cascade” behavior
    is now explicitly controllable, proper implementation of “delete”, “delete-orphan”,
    etc. dependency system can now determine at flush time if a child object has a
    parent or not so that it makes better decisions on how that child should be updated
    in the DB with regards to deletes.
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对映射器的依赖性和“级联”行为进行了彻底改革；将依赖性逻辑从 properties.py 中拆分到一个单独的模块“dependency.py”中。 “级联”行为现在是明确可控的，“delete”，“delete-orphan”等的正确实现。依赖性系统现在可以在刷新时确定子对象是否有父对象，以便在删除方面做出更好的决策。
- en: '**[no_tags]**'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to Schema to build upon MetaData object instead of an Engine. Entire
    SQL/Schema system can be used with no Engines whatsoever, executed solely by an
    explicit Connection object. the “bound” methodology exists via the BoundMetaData
    for schema objects. ProxyEngine is generally not needed anymore and is replaced
    by DynamicMetaData.
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 Schema 进行彻底改革，以构建在 MetaData 对象之上，而不是 Engine。整个 SQL/Schema 系统可以不使用任何 Engines，仅通过显式的
    Connection 对象执行。通过 BoundMetaData 存在“bound”方法用于模式对象。ProxyEngine 现在通常不再需要，并被 DynamicMetaData
    取代。
- en: '**[no_tags]**'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: true polymorphic behavior implemented, fixes
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实现了真正的多态行为，修复
- en: 'References: [#167](https://www.sqlalchemy.org/trac/ticket/167)'
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献：[#167](https://www.sqlalchemy.org/trac/ticket/167)
- en: '**[no_tags]**'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”oid” system has been totally moved into compile-time behavior; if they are
    used in an order_by where they are not available, the order_by doesn’t get compiled,
    fixes
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “oid” 系统已完全移至编译时行为；如果在不可用的情况下在 order_by 中使用它们，order_by 不会被编译，修复
- en: 'References: [#147](https://www.sqlalchemy.org/trac/ticket/147)'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献：[#147](https://www.sqlalchemy.org/trac/ticket/147)
- en: '**[no_tags]**'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to packaging; “mapping” is now “orm”, “objectstore” is now “session”,
    the old “objectstore” namespace gets loaded in via the “threadlocal” mod if used
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包装程序进行了彻底改革；“mapping”现在是“orm”，“objectstore”现在是“session”，旧的“objectstore”命名空间通过“threadlocal”模块加载（如果使用）。
- en: '**[no_tags]**'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mods now called in via “import <modname>”. extensions favored over mods as mods
    are globally-monkeypatching
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在通过“import <modname>”调用 mods。扩展优先于 mods，因为 mods 全局性地进行了修改。
- en: '**[no_tags]**'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to add_property so that it propagates properties to inheriting mappers
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复 add_property 以将属性传播到继承映射器
- en: 'References: [#154](https://www.sqlalchemy.org/trac/ticket/154)'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献：[#154](https://www.sqlalchemy.org/trac/ticket/154)
- en: '**[no_tags]**'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: backrefs create themselves against primary mapper of its originating property,
    primary/secondary join arguments can be specified to override. helps their usage
    with polymorphic mappers
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: backrefs 自动针对其原始属性的主映射器创建自己，可以指定主/次要 join 参数来覆盖。有助于它们与多态映射器的使用
- en: '**[no_tags]**'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”table exists” function has been implemented
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实现了“表存在”功能
- en: 'References: [#31](https://www.sqlalchemy.org/trac/ticket/31)'
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献：[#31](https://www.sqlalchemy.org/trac/ticket/31)
- en: '**[no_tags]**'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”create_all/drop_all” added to MetaData object
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ”create_all/drop_all” 添加到 MetaData 对象
- en: 'References: [#98](https://www.sqlalchemy.org/trac/ticket/98)'
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考文献：[#98](https://www.sqlalchemy.org/trac/ticket/98)
- en: '**[no_tags]**'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements and fixes to topological sort algorithm, as well as more unit tests
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对拓扑排序算法进行了改进和修复，以及更多单元测试
- en: '**[no_tags]**'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tutorial page added to docs which also can be run with a custom doctest runner
    to ensure its properly working. docs generally overhauled to deal with new code
    patterns
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在文档中添加了教程页面，还可以使用自定义的 doctest 运行器来运行，以确保其正常工作。文档通常进行了改革，以处理新的代码模式
- en: '**[no_tags]**'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: many more fixes, refactorings.
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进行了许多其他修复和重构。
- en: '**[no_tags]**'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: migration guide is available on the Wiki at [https://www.sqlalchemy.org/trac/wiki/02Migration](https://www.sqlalchemy.org/trac/wiki/02Migration)
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 迁移指南可在 Wiki 上找到 [https://www.sqlalchemy.org/trac/wiki/02Migration](https://www.sqlalchemy.org/trac/wiki/02Migration)
- en: 0.2.8
  id: totrans-378
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.8
- en: 'Released: Tue Sep 05 2006'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Tue Sep 05 2006
- en: '**[no_tags]**'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: cleanup on connection methods + documentation. custom DBAPI arguments specified
    in query string, ‘connect_args’ argument to ‘create_engine’, or custom creation
    function via ‘creator’ function to ‘create_engine’.
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接方法和文档进行清理。在查询字符串中指定自定义 DBAPI 参数，在 'create_engine' 中使用 'connect_args' 参数，或通过
    'create_engine' 的 'creator' 函数指定自定义创建函数。
- en: '**[no_tags]**'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “recycle” argument to Pool, is “pool_recycle” on create_engine, defaults
    to 3600 seconds; connections after this age will be closed and replaced with a
    new one, to handle db’s that automatically close stale connections
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Pool 中新增了“recycle”参数，在 create_engine 中为“pool_recycle”，默认为 3600 秒；此时，超过这个年龄的连接将被关闭并替换为新连接，以处理自动关闭陈旧连接的数据库。
- en: 'References: [#274](https://www.sqlalchemy.org/trac/ticket/274)'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#274](https://www.sqlalchemy.org/trac/ticket/274)
- en: '**[no_tags]**'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: changed “invalidate” semantics with pooled connection; will instruct the underlying
    connection record to reconnect the next time its called. “invalidate” will also
    automatically be called if any error is thrown in the underlying call to connection.cursor().
    this will hopefully allow the connection pool to reconnect to a database that
    had been stopped and started without restarting the connecting application
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改变了使用池化连接的“使无效”语义；将指示底层连接记录在下次调用时重新连接。“使无效”还将在底层调用 connection.cursor() 时抛出任何错误时自动调用。这将希望连接池能够重新连接到已停止并重新启动的数据库，而无需重新启动连接的应用程序。
- en: 'References: [#121](https://www.sqlalchemy.org/trac/ticket/121)'
  id: totrans-387
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#121](https://www.sqlalchemy.org/trac/ticket/121)
- en: '**[no_tags]**'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: eesh ! the tutorial doctest was broken for quite some time.
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 哎呀！教程中的 doctest 已经很长时间没有修复。
- en: '**[no_tags]**'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: add_property() method on mapper does a “compile all mappers” step in case the
    given property references a non-compiled mapper (as it did in the case of the
    tutorial !)
  id: totrans-391
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在映射器上的 add_property() 方法会执行“编译所有映射器”步骤，以防给定的属性引用了未编译的映射器（就像教程中的情况！）
- en: '**[no_tags]**'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: check for pg sequence already existing before create
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在创建之前检查 pg 序列是否已存在
- en: 'References: [#277](https://www.sqlalchemy.org/trac/ticket/277)'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#277](https://www.sqlalchemy.org/trac/ticket/277)
- en: '**[no_tags]**'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: if a contextual session is established via MapperExtension.get_session (as it
    is using the sessioncontext plugin, etc), a lazy load operation will use that
    session by default if the parent object is not persistent with a session already.
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果通过 MapperExtension.get_session（例如使用 sessioncontext 插件等）建立了上下文会话，则惰性加载操作将默认使用该会话，如果父对象尚未与会话持久化。
- en: '**[no_tags]**'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazy loads will not fire off for an object that does not have a database identity
    (why? see [https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData](https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData))
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 惰性加载不会为没有数据库标识的对象触发（为什么？请参阅 [https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData](https://www.sqlalchemy.org/trac/wiki/WhyDontForeignKeysLoadData)）
- en: '**[no_tags]**'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unit-of-work does a better check for “orphaned” objects that are part of a “delete-orphan”
    cascade, for certain conditions where the parent isn’t available to cascade from.
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: unit-of-work 对“删除孤立”级联中的“孤儿”对象进行更好的检查，对于某些情况下父级不可用于级联的情况。
- en: '**[no_tags]**'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mappers can tell if one of their objects is an “orphan” based on interactions
    with the attribute package. this check is based on a status flag maintained for
    each relationship when objects are attached and detached from each other.
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 映射器可以根据与属性包的交互来判断它们的对象是否为“孤儿”。当对象相互附加和分离时，此检查基于为每个关系维护的状态标志。
- en: '**[no_tags]**'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: it is now invalid to declare a self-referential relationship with “delete-orphan”
    (as the abovementioned check would make them impossible to save)
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在使用“delete-orphan”声明自引用关系是无效的（因为上述检查将使它们无法保存）
- en: '**[no_tags]**'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved the check for objects being part of a session when the unit of work
    seeks to flush() them as part of a relationship..
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当工作单元试图将它们作为关系的一部分 flush() 时，对于对象是否为会话的一部分进行了更好的检查。
- en: '**[no_tags]**'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: statement execution supports using the same BindParam object more than once
    in an expression; simplified handling of positional parameters. nice job by Bill
    Noon figuring out the basic idea.
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语句执行支持在表达式中多次使用相同的 BindParam 对象；简化了位置参数的处理。Bill Noon 在理解基本思想时做得很好。
- en: 'References: [#280](https://www.sqlalchemy.org/trac/ticket/280)'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#280](https://www.sqlalchemy.org/trac/ticket/280)
- en: '**[no_tags]**'
  id: totrans-410
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres reflection moved to use pg_schema tables, can be overridden with use_information_schema=True
    argument to create_engine.
  id: totrans-411
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: postgres 反射移至使用 pg_schema 表，可以通过传递 use_information_schema=True 参数给 create_engine
    进行覆盖。
- en: 'References: [#60](https://www.sqlalchemy.org/trac/ticket/60), [#71](https://www.sqlalchemy.org/trac/ticket/71)'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#60](https://www.sqlalchemy.org/trac/ticket/60), [#71](https://www.sqlalchemy.org/trac/ticket/71)
- en: '**[no_tags]**'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added case_sensitive argument to MetaData, Table, Column, determines itself
    automatically based on if a parent schemaitem has a non-None setting for the flag,
    or if not, then whether the identifier name is all lower case or not. when set
    to True, quoting is applied to identifiers with mixed or uppercase identifiers.
    quoting is also applied automatically in all cases to identifiers that are known
    to be reserved words or contain other non-standard characters. various database
    dialects can override all of this behavior, but currently they are all using the
    default behavior. tested with postgres, mysql, sqlite, oracle. needs more testing
    with firebird, ms-sql. part of the ongoing work with
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在MetaData、Table、Column中添加了case_sensitive参数，根据父模式项是否具有标志的非None设置或标识符名称是否全为小写来自动确定。当设置为True时，对具有混合或大写标识符的标识符应用引号。对已知为保留字或包含其他非标准字符的标识符也自动应用引号。各种数据库方言可以覆盖所有这些行为，但目前它们都使用默认行为。已在postgres、mysql、sqlite、oracle上进行测试。需要在firebird、ms-sql上进行更多测试。这是正在进行的工作的一部分
- en: 'References: [#155](https://www.sqlalchemy.org/trac/ticket/155)'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#155](https://www.sqlalchemy.org/trac/ticket/155)
- en: '**[no_tags]**'
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unit tests updated to run without any pysqlite installed; pool test uses a mock
    DBAPI
  id: totrans-417
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更新了单元测试，可以在没有安装任何pysqlite的情况下运行；pool测试使用模拟的DBAPI
- en: '**[no_tags]**'
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: urls support escaped characters in passwords
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: urls支持密码中的转义字符
- en: 'References: [#281](https://www.sqlalchemy.org/trac/ticket/281)'
  id: totrans-420
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#281](https://www.sqlalchemy.org/trac/ticket/281)
- en: '**[no_tags]**'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added limit/offset to UNION queries (though not yet in oracle)
  id: totrans-422
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向UNION查询添加了limit/offset（尽管oracle尚未支持）
- en: '**[no_tags]**'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “timezone=True” flag to DateTime and Time types. postgres so far will
    convert this to “TIME[STAMP] (WITH|WITHOUT) TIME ZONE”, so that control over timezone
    presence is more controllable (psycopg2 returns datetimes with tzinfo’s if available,
    which can create confusion against datetimes that don’t).
  id: totrans-424
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在DateTime和Time类型中添加了“timezone=True”标志。到目前为止，postgres将其转换为“TIME[STAMP] (WITH|WITHOUT)
    TIME ZONE”，以便更可控地控制时区的存在（如果可用，psycopg2会返回带有tzinfo的datetimes，这可能会与不带tzinfo的datetimes造成混淆）。
- en: '**[no_tags]**'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to using query.count() with distinct, **kwargs with SelectResults count()
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在distinct、**kwargs与SelectResults count()中使用query.count()的问题
- en: 'References: [#287](https://www.sqlalchemy.org/trac/ticket/287)'
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#287](https://www.sqlalchemy.org/trac/ticket/287)
- en: '**[no_tags]**'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: deregister Table from MetaData when autoload fails;
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当autoload失败时，从MetaData中注销Table；
- en: 'References: [#289](https://www.sqlalchemy.org/trac/ticket/289)'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#289](https://www.sqlalchemy.org/trac/ticket/289)
- en: '**[no_tags]**'
  id: totrans-431
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: import of py2.5s sqlite3
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 导入py2.5的sqlite3
- en: 'References: [#293](https://www.sqlalchemy.org/trac/ticket/293)'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#293](https://www.sqlalchemy.org/trac/ticket/293)
- en: '**[no_tags]**'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unicode fix for startswith()/endswith()
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复startswith()/endswith()的unicode问题
- en: 'References: [#296](https://www.sqlalchemy.org/trac/ticket/296)'
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#296](https://www.sqlalchemy.org/trac/ticket/296)
- en: 0.2.7
  id: totrans-437
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.7
- en: 'Released: Sat Aug 12 2006'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年8月12日星期六
- en: '**[no_tags]**'
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: quoting facilities set up so that database-specific quoting can be turned on
    for individual table, schema, and column identifiers when used in all queries/creates/drops.
    Enabled via “quote=True” in Table or Column, as well as “quote_schema=True” in
    Table. Thanks to Aaron Spike for the excellent efforts.
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设置引号设施，以便在所有查询/创建/删除中使用时可以为单个表、模式和列标识符启用特定于数据库的引号。通过在Table或Column中启用“quote=True”，以及在Table中启用“quote_schema=True”来启用。感谢Aaron
    Spike的出色努力。
- en: '**[no_tags]**'
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: assignmapper was setting is_primary=True, causing all sorts of mayhem by not
    raising an error when redundant mappers were set up, fixed
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: assignmapper设置is_primary=True，导致设置冗余映射器时未引发任何错误，已修复
- en: '**[no_tags]**'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added allow_null_pks option to Mapper, allows rows where some primary key columns
    are null (i.e. when mapping to outer joins etc)
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向Mapper添加了allow_null_pks选项，允许某些主键列为空的行（即在映射到外连接等情况下）
- en: '**[no_tags]**'
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: modification to unitofwork to not maintain ordering within the “new” list or
    within the UOWTask “objects” list; instead, new objects are tagged with an ordering
    identifier as they are registered as new with the session, and the INSERT statements
    are then sorted within the mapper save_obj. the INSERT ordering has basically
    been pushed all the way to the end of the flush cycle. that way the various sorts
    and organizations occurring within UOWTask (particularly the circular task sort)
    don’t have to worry about maintaining order (which they weren’t anyway)
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修改了 unitofwork，不再在“new”列表或 UOWTask “objects” 列表中维护排序；相反，新对象在与会话注册为新对象时被标记为排序标识符，然后
    INSERT 语句在映射器 save_obj 中进行排序。INSERT 排序基本上一直推迟到刷新周期的最后。这样，UOWTask 中发生的各种排序和组织（特别是循环任务排序）就不必担心维护顺序（它们本来也不会）
- en: '**[no_tags]**'
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed reflection of foreign keys to autoload the referenced table if it was
    not loaded already
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了外键的反射，如果引用的表尚未加载，则自动加载
- en: '**[no_tags]**'
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: pass URL query string arguments to connect() function
  id: totrans-450
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 URL 查询字符串参数传递给 connect() 函数
- en: 'References: [#256](https://www.sqlalchemy.org/trac/ticket/256)'
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#256](https://www.sqlalchemy.org/trac/ticket/256)
- en: '**[no_tags]**'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: oracle boolean type
  id: totrans-453
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle 布尔类型
- en: 'References: [#257](https://www.sqlalchemy.org/trac/ticket/257)'
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#257](https://www.sqlalchemy.org/trac/ticket/257)
- en: '**[no_tags]**'
  id: totrans-455
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: custom primary/secondary join conditions in a relation *will* be propagated
    to backrefs by default. specifying a backref() will override this behavior.
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在关系中自定义主/次连接条件 *将* 默认传播到反向引用。指定 backref() 将覆盖此行为。
- en: '**[no_tags]**'
  id: totrans-457
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: better check for ambiguous join conditions in sql.Join; propagates to a better
    error message in PropertyLoader (i.e. relation()/backref()) for when the join
    condition can’t be reasonably determined.
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 sql.Join 中更好地检查模糊的连接条件；在 PropertyLoader 中传播到更好的错误消息（即 relation()/backref()）以处理无法合理确定连接条件的情况。
- en: '**[no_tags]**'
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: sqlite creates ForeignKeyConstraint objects properly upon table reflection.
  id: totrans-460
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQLite 在表反射时正确创建 ForeignKeyConstraint 对象。
- en: '**[no_tags]**'
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: adjustments to pool stemming from changes made for. overflow counter should
    only be decremented if the connection actually succeeded. added a test script
    to attempt testing this.
  id: totrans-462
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于为所做的更改而进行的池调整。只有在连接实际成功时，溢出计数器才会递减。添加了一个测试脚本来尝试测试这一点。
- en: 'References: [#224](https://www.sqlalchemy.org/trac/ticket/224)'
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#224](https://www.sqlalchemy.org/trac/ticket/224)
- en: '**[no_tags]**'
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed mysql reflection of default values to be PassiveDefault
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 MySQL 反射默认值为 PassiveDefault 的问题
- en: '**[no_tags]**'
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added reflected ‘tinyint’, ‘mediumint’ type to MS-SQL.
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 MS-SQL 中添加了反射的 ‘tinyint’、‘mediumint’ 类型。
- en: 'References: [#263](https://www.sqlalchemy.org/trac/ticket/263), [#264](https://www.sqlalchemy.org/trac/ticket/264)'
  id: totrans-468
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#263](https://www.sqlalchemy.org/trac/ticket/263)，[#264](https://www.sqlalchemy.org/trac/ticket/264)
- en: '**[no_tags]**'
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: SingletonThreadPool has a size and does a cleanup pass, so that only a given
    number of thread-local connections stay around (needed for sqlite applications
    that dispose of threads en masse)
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SingletonThreadPool 具有大小并进行清理，因此只有给定数量的线程本地连接保留下来（对于大量丢弃线程的 SQLite 应用程序是必需的）
- en: '**[no_tags]**'
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed small pickle bug(s) with lazy loaders
  id: totrans-472
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了延迟加载器中的小 pickle bug(s)
- en: 'References: [#265](https://www.sqlalchemy.org/trac/ticket/265), [#267](https://www.sqlalchemy.org/trac/ticket/267)'
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#265](https://www.sqlalchemy.org/trac/ticket/265)，[#267](https://www.sqlalchemy.org/trac/ticket/267)
- en: '**[no_tags]**'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed possible error in mysql reflection where certain versions return an array
    instead of string for SHOW CREATE TABLE call
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 MySQL 反射中可能出现的错误，某些版本在执行 SHOW CREATE TABLE 时返回数组而不是字符串
- en: '**[no_tags]**'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to lazy loads when mapping to joins
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了映射到连接时的延迟加载问题
- en: 'References: [#1770](https://www.sqlalchemy.org/trac/ticket/1770)'
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#1770](https://www.sqlalchemy.org/trac/ticket/1770)
- en: '**[no_tags]**'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: all create()/drop() calls have a keyword argument of “connectable”. “engine”
    is deprecated.
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有 create()/drop() 调用都有一个名为“connectable”的关键字参数。“engine” 已被弃用。
- en: '**[no_tags]**'
  id: totrans-481
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed ms-sql connect() to work with adodbapi
  id: totrans-482
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 ms-sql connect() 与 adodbapi 的兼容��问题
- en: '**[no_tags]**'
  id: totrans-483
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “nowait” flag to Select()
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Select() 中添加了“nowait”标志
- en: '**[no_tags]**'
  id: totrans-485
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: inheritance check uses issubclass() instead of direct __mro__ check to make
    sure class A inherits from B, allowing mapper inheritance to more flexibly correspond
    to class inheritance
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 继承检查使用 issubclass() 而不是直接的 __mro__ 检查，以确保类 A 继承自 B，使映射继承更灵活地对应于类继承
- en: 'References: [#271](https://www.sqlalchemy.org/trac/ticket/271)'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#271](https://www.sqlalchemy.org/trac/ticket/271)
- en: '**[no_tags]**'
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: SelectResults will use a subselect, when calling an aggregate (i.e. max, min,
    etc.) on a SelectResults that has an ORDER BY clause
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当对具有 ORDER BY 子句的 SelectResults 调用聚合函数（如 max、min 等）时，SelectResults 将使用子选择
- en: 'References: [#252](https://www.sqlalchemy.org/trac/ticket/252)'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#252](https://www.sqlalchemy.org/trac/ticket/252)
- en: '**[no_tags]**'
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to types so that database-specific types more easily used; fixes to mysql
    text types to work with this methodology
  id: totrans-492
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了类型问题，以便更轻松地使用特定于数据库的类型；修复了 mysql 文本类型以使其与此方法配合使用
- en: 'References: [#269](https://www.sqlalchemy.org/trac/ticket/269)'
  id: totrans-493
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#269](https://www.sqlalchemy.org/trac/ticket/269)
- en: '**[no_tags]**'
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to sqlite date type organization
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些修复 sqlite 日期类型组织的问题
- en: '**[no_tags]**'
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added MSTinyInteger to MS-SQL
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 MSTinyInteger 到 MS-SQL
- en: 'References: [#263](https://www.sqlalchemy.org/trac/ticket/263)'
  id: totrans-498
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#263](https://www.sqlalchemy.org/trac/ticket/263)
- en: 0.2.6
  id: totrans-499
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.6
- en: 'Released: Thu Jul 20 2006'
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Thu Jul 20 2006
- en: '**[no_tags]**'
  id: totrans-501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: big overhaul to schema to allow truly composite primary and foreign key constraints,
    via new ForeignKeyConstraint and PrimaryKeyConstraint objects. Existing methods
    of primary/foreign key creation have not been changed but use these new objects
    behind the scenes. table creation and reflection is now more table oriented rather
    than column oriented.
  id: totrans-502
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对模式进行了大规模改进，以允许真正的复合主键和外键约束，通过新的 ForeignKeyConstraint 和 PrimaryKeyConstraint
    对象。现有的主键/外键创建方法没有改变，但在幕后使用这些新对象。表的创建和反射现在更加面向表而不是面向列。
- en: 'References: [#76](https://www.sqlalchemy.org/trac/ticket/76)'
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#76](https://www.sqlalchemy.org/trac/ticket/76)
- en: '**[no_tags]**'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to MapperExtension calling scheme, wasn’t working very well previously
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 MapperExtension 调用方案进行了彻底改进，之前的工作效果不是很好
- en: '**[no_tags]**'
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweaks to ActiveMapper, supports self-referential relationships
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 ActiveMapper 进行了调整，支持自引用关系
- en: '**[no_tags]**'
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: slight rearrangement to objectstore (in activemapper/threadlocal) so that the
    SessionContext is referenced by ‘.context’ instead of subclassed directly.
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 objectstore（在 activemapper/threadlocal 中）进行了轻微重新排列，以便 SessionContext 被引用为
    ‘.context’ 而不是直接子类化。
- en: '**[no_tags]**'
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: activemapper will use threadlocal’s objectstore if the mod is activated when
    activemapper is imported
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果在导入 activemapper 时激活了 mod，activemapper 将使用 threadlocal 的 objectstore
- en: '**[no_tags]**'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to URL regexp to allow filenames with ‘@’ in them
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 URL 正则表达式进行了小修复，以允许带有 ‘@’ 的文件名
- en: '**[no_tags]**'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to Session expunge/update/etc…needs more cleanup.
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 Session expunge/update 等的问题...需要更多清理。
- en: '**[no_tags]**'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: select_table mappers *still* weren’t always compiling
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: select_table mappers *仍然* 不总是编译
- en: '**[no_tags]**'
  id: totrans-518
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed up Boolean datatype
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 Boolean 数据类型
- en: '**[no_tags]**'
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added count()/count_by() to list of methods proxied by assignmapper; this also
    adds them to activemapper
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 count()/count_by() 添加到 assignmapper 代理的方法列表中；这也将它们添加到 activemapper 中
- en: '**[no_tags]**'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: connection exceptions wrapped in DBAPIError
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 连接异常包装在 DBAPIError 中
- en: '**[no_tags]**'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ActiveMapper now supports autoloading column definitions from the database if
    you supply a __autoload__ = True attribute in your mapping inner-class. Currently
    this does not support reflecting any relationships.
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ActiveMapper 现在支持从数据库自动加载列定义，如果在映射内部类中提供了 __autoload__ = True 属性。目前这不支持反射任何关系。
- en: '**[no_tags]**'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: deferred column load could screw up the connection status in a flush() under
    some circumstances, this was fixed
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 延迟列加载可能会在某些情况下破坏 flush() 中的连接状态，已修复
- en: '**[no_tags]**'
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: expunge() was not working with cascade, fixed.
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: expunge() 在级联时无法工作，已修复。
- en: '**[no_tags]**'
  id: totrans-530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: potential endless loop in cascading operations fixed.
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了级联操作中的潜在无限循环
- en: '**[no_tags]**'
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “synonym()” function, applied to properties to have a propname the same
    as another, for the purposes of overriding props and allowing the original propname
    to be accessible in select_by().
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了“synonym()”函数，应用于属性，使一个属性名与另一个属性名相同，以便覆盖属性并允许原始属性名在 select_by() 中可访问。
- en: '**[no_tags]**'
  id: totrans-534
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to typing in clause construction which specifically helps type issues with
    polymorphic_union (CAST/ColumnClause propagates its type to proxy columns)
  id: totrans-535
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在子句构造中的类型问题，特别有助于 polymorphic_union 的类型问题（CAST/ColumnClause 将其类型传播到代理列）
- en: '**[no_tags]**'
  id: totrans-536
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mapper compilation work ongoing, someday it’ll work….moved around the initialization
    of MapperProperty objects to be after all mappers are created to better handle
    circular compilations. do_init() method is called on all properties now which
    are more aware of their “inherited” status if so.
  id: totrans-537
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 映射器编译工作正在进行中，总有一天会成功……将MapperProperty对象的初始化移动到所有映射器创建后，以更好地处理循环编译。现在所有属性都调用do_init()方法，如果有的话，它们更加了解自己的“继承”状态。
- en: '**[no_tags]**'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: eager loads explicitly disallowed on self-referential relationships, or relationships
    to an inheriting mapper (which is also self-referential)
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 禁止在自引用关系或与继承映射器（也是自引用关系）的关系上急切加载。
- en: '**[no_tags]**'
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: reduced bind param size in query._get to appease the picky oracle
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 减少了查询._get中的绑定参数大小，以取悦挑剔的oracle。
- en: 'References: [#244](https://www.sqlalchemy.org/trac/ticket/244)'
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#244](https://www.sqlalchemy.org/trac/ticket/244)
- en: '**[no_tags]**'
  id: totrans-543
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘checkfirst’ argument to table.create()/table.drop(), as well as table.exists()
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在table.create()/table.drop()和table.exists()中添加了‘checkfirst’参数。
- en: 'References: [#234](https://www.sqlalchemy.org/trac/ticket/234)'
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#234](https://www.sqlalchemy.org/trac/ticket/234)
- en: '**[no_tags]**'
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some other ongoing fixes to inheritance
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些其他正在进行的继承修复。
- en: 'References: [#245](https://www.sqlalchemy.org/trac/ticket/245)'
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#245](https://www.sqlalchemy.org/trac/ticket/245)
- en: '**[no_tags]**'
  id: totrans-549
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: attribute/backref/orphan/history-tracking tweaks as usual…
  id: totrans-550
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 属性/backref/orphan/history-tracking调整如常…
- en: 0.2.5
  id: totrans-551
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.5
- en: 'Released: Sat Jul 08 2006'
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年7月8日 星期六
- en: '**[no_tags]**'
  id: totrans-553
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed endless loop bug in select_by(), if the traversal hit two mappers that
    referenced each other
  id: totrans-554
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了select_by()中的无限循环错误，如果遍历到相互引用的两个映射器。
- en: '**[no_tags]**'
  id: totrans-555
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: upgraded all unittests to insert ‘./lib/’ into sys.path, working around new
    setuptools PYTHONPATH-killing behavior
  id: totrans-556
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将所有unittests升级为将‘./lib/’插入sys.path，解决了新的setuptools PYTHONPATH破坏行为。
- en: '**[no_tags]**'
  id: totrans-557
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: further fixes with attributes/dependencies/etc….
  id: totrans-558
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进一步修复属性/依赖关系等等…
- en: '**[no_tags]**'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved error handling for when DynamicMetaData is not connected
  id: totrans-560
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于未连接DynamicMetaData时的错误处理进行了改进。
- en: '**[no_tags]**'
  id: totrans-561
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: MS-SQL support largely working (tested with pymssql)
  id: totrans-562
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MS-SQL支持基本正常（使用pymssql进行测试）。
- en: '**[no_tags]**'
  id: totrans-563
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ordering of UPDATE and DELETE statements within groups is now in order of primary
    key values, for more deterministic ordering
  id: totrans-564
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在组内的UPDATE和DELETE语句的排序现在按照主键值的顺序进行，以获得更确定的排序。
- en: '**[no_tags]**'
  id: totrans-565
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: after_insert/delete/update mapper extensions now called per object, not per-object-per-table
  id: totrans-566
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在每个对象的after_insert/delete/update映射器扩展都是按对象而不是按对象-按表调用的。
- en: '**[no_tags]**'
  id: totrans-567
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: further fixes/refactorings to mapper compilation
  id: totrans-568
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进一步修复/重构映射器编译。
- en: 0.2.4
  id: totrans-569
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.4
- en: 'Released: Tue Jun 27 2006'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年6月27日 星期二
- en: '**[no_tags]**'
  id: totrans-571
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: try/except when the mapper sets init.__name__ on a mapped class, supports python
    2.3
  id: totrans-572
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当映射器在映射类上设置init.__name__时，支持python 2.3的try/except。
- en: '**[no_tags]**'
  id: totrans-573
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where threadlocal engine would still autocommit despite a transaction
    in progress
  id: totrans-574
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了线程本地引擎仍会自动提交的错误，尽管事务正在进行中。
- en: '**[no_tags]**'
  id: totrans-575
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazy load and deferred load operations require the parent object to be in a
    Session to do the operation; whereas before the operation would just return a
    blank list or None, it now raises an exception.
  id: totrans-576
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 惰性加载和延迟加载操作需要父对象在会话中才能执行操作；而以前操作只会返回一个空列表或None，现在会引发异常。
- en: '**[no_tags]**'
  id: totrans-577
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Session.update() is slightly more lenient if the session to which the given
    object was formerly attached to was garbage collected; otherwise still requires
    you explicitly remove the instance from the previous Session.
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果给定对象曾经附加到的会话被垃圾回收，Session.update()会稍微宽松一些；否则仍然需要显式从先前的会话中删除实例。
- en: '**[no_tags]**'
  id: totrans-579
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to mapper compilation, checking for more error conditions
  id: totrans-580
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了映射器编译，检查更多错误条件。
- en: '**[no_tags]**'
  id: totrans-581
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to eager loading combined with ordering/limit/offset
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了与排序/限制/偏移量结合使用时的急切加载小问题。
- en: '**[no_tags]**'
  id: totrans-583
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'utterly remarkable: added a single space between ‘CREATE TABLE’ and ‘(<the
    rest of it>’ since *that’s how MySQL indicates a non- reserved word tablename…..*'
  id: totrans-584
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 非常引人注目：在‘CREATE TABLE’和‘(<其余部分>’之间添加了一个空格，因为*这就是MySQL指示非保留字表名的方式……*
- en: 'References: [#206](https://www.sqlalchemy.org/trac/ticket/206)'
  id: totrans-585
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#206](https://www.sqlalchemy.org/trac/ticket/206)
- en: '**[no_tags]**'
  id: totrans-586
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: more fixes to inheritance, related to many-to-many relations properly saving
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 进一步修复继承，与许多对多关系相��的正确保存。
- en: '**[no_tags]**'
  id: totrans-588
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug when specifying explicit module to mysql dialect
  id: totrans-589
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了指定mysql方言的显式模块时的错误。
- en: '**[no_tags]**'
  id: totrans-590
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: when QueuePool times out it raises a TimeoutError instead of erroneously making
    another connection
  id: totrans-591
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当QueuePool超时时，会引发TimeoutError而不是错误地建立另一个连接
- en: '**[no_tags]**'
  id: totrans-592
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Queue.Queue usage in pool has been replaced with a locally modified version
    (works in py2.3/2.4!) that uses a threading.RLock for a mutex. this is to fix
    a reported case where a ConnectionFairy’s __del__() method got called within the
    Queue’s get() method, which then returns its connection to the Queue via the put()
    method, causing a reentrant hang unless threading.RLock is used.
  id: totrans-593
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在池中使用Queue.Queue的用法已被替换为一个本地修改版本（在py2.3/2.4中有效！），它使用threading.RLock作为互斥锁。这是为了修复一个报告的情况，其中ConnectionFairy的__del__()方法在Queue的get()方法中被调用，然后通过put()方法将其连接返回给Queue，除非使用threading.RLock，否则会导致可重入挂起。
- en: '**[no_tags]**'
  id: totrans-594
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres will not place SERIAL keyword on a primary key column if it has a foreign
    key constraint
  id: totrans-595
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果主键列有外键约束，postgres不会在主键列上放置SERIAL关键字
- en: '**[no_tags]**'
  id: totrans-596
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: cursor() method on ConnectionFairy allows db-specific extension arguments to
    be propagated
  id: totrans-597
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ConnectionFairy上的cursor()方法允许传播特定于数据库的扩展参数
- en: 'References: [#221](https://www.sqlalchemy.org/trac/ticket/221)'
  id: totrans-598
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#221](https://www.sqlalchemy.org/trac/ticket/221)
- en: '**[no_tags]**'
  id: totrans-599
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazy load bind params properly propagate column type
  id: totrans-600
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 惰性加载绑定参数正确传播列类型
- en: 'References: [#225](https://www.sqlalchemy.org/trac/ticket/225)'
  id: totrans-601
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#225](https://www.sqlalchemy.org/trac/ticket/225)
- en: '**[no_tags]**'
  id: totrans-602
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'new MySQL types: MSEnum, MSTinyText, MSMediumText, MSLongText, etc. more support
    for MS-specific length/precision params in numeric types patch courtesy Mike Bernson'
  id: totrans-603
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 新的MySQL类型：MSEnum、MSTinyText、MSMediumText、MSLongText等。对于数字类型中的MS特定长度/精度参数提供更多支持，补丁由Mike
    Bernson提供
- en: '**[no_tags]**'
  id: totrans-604
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to connection pool invalidate()
  id: totrans-605
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对连接池invalidate()进行了一些修复
- en: 'References: [#224](https://www.sqlalchemy.org/trac/ticket/224)'
  id: totrans-606
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#224](https://www.sqlalchemy.org/trac/ticket/224)
- en: 0.2.3
  id: totrans-607
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.3
- en: 'Released: Sat Jun 17 2006'
  id: totrans-608
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年6月17日（星期六）
- en: '**[no_tags]**'
  id: totrans-609
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to mapper compilation to be deferred. this allows mappers to be constructed
    in any order, and their relationships to each other are compiled when the mappers
    are first used.
  id: totrans-610
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对映射器编译进行了彻底的改造。这允许映射器以任何顺序构建，并且它们之间的关系在首次使用映射器时编译。
- en: '**[no_tags]**'
  id: totrans-611
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed a pretty big speed bottleneck in cascading behavior particularly when
    backrefs were in use
  id: totrans-612
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了级联行为中的一个相当严重的速度瓶颈，特别是在使用反向引用时
- en: '**[no_tags]**'
  id: totrans-613
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: the attribute instrumentation module has been completely rewritten; its now
    a large degree simpler and clearer, slightly faster. the “history” of an attribute
    is no longer micromanaged with each change and is instead part of a “CommittedState”
    object created when the instance is first loaded. HistoryArraySet is gone, the
    behavior of list attributes is now more open ended (i.e. they’re not sets anymore).
  id: totrans-614
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 属性仪器模块已完全重写；现在更简单、更清晰，稍微更快。一个属性的“历史”不再在每次更改时进行微观管理，而是在实例首次加载时创建一个“CommittedState”对象的一部分。HistoryArraySet已经消失，列表属性的行为现在更加开放（即它们不再是集合）。
- en: '**[no_tags]**'
  id: totrans-615
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: py2.4 “set” construct used internally, falls back to sets.Set when “set” not
    available/ordering is needed.
  id: totrans-616
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 内部使用py2.4的“set”构造，当“set”不可用/需要排序时，会回退到sets.Set。
- en: '**[no_tags]**'
  id: totrans-617
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to transaction control, so that repeated rollback() calls don’t fail (was
    failing pretty badly when flush() would raise an exception in a larger try/except
    transaction block)
  id: totrans-618
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了事务控制的问题，使得重复的rollback()调用不会失败（在更大的try/except事务块中flush()引发异常时会失败得相当严重）
- en: '**[no_tags]**'
  id: totrans-619
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”foreignkey” argument to relation() can also be a list. fixed auto-foreignkey
    detection
  id: totrans-620
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ”relation()“的”foreignkey“参数也可以是一个列表。修复了自动外键检测
- en: 'References: [#151](https://www.sqlalchemy.org/trac/ticket/151)'
  id: totrans-621
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#151](https://www.sqlalchemy.org/trac/ticket/151)
- en: '**[no_tags]**'
  id: totrans-622
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where tables with schema names weren’t getting indexed in the MetaData
    object properly
  id: totrans-623
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了模式名称的表在MetaData对象中未正确索引的bug
- en: '**[no_tags]**'
  id: totrans-624
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where Column with redefined “key” property wasn’t getting type conversion
    happening in the ResultProxy
  id: totrans-625
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了重新定义“key”属性的Column未进行类型转换的bug
- en: 'References: [#207](https://www.sqlalchemy.org/trac/ticket/207)'
  id: totrans-626
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#207](https://www.sqlalchemy.org/trac/ticket/207)
- en: '**[no_tags]**'
  id: totrans-627
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed ‘port’ attribute of URL to be an integer if present
  id: totrans-628
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了URL的‘port’属性，如果存在的话，应该是一个整数
- en: '**[no_tags]**'
  id: totrans-629
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed old bug where if a many-to-many table mapped as “secondary” had extra
    columns, delete operations didn’t work
  id: totrans-630
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了一个旧bug，即如果一个映射为“secondary”的多对多表有额外列，则删除操作不起作用
- en: '**[no_tags]**'
  id: totrans-631
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: bugfixes for mapping against UNION queries
  id: totrans-632
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了针对UNION查询的映射错误
- en: '**[no_tags]**'
  id: totrans-633
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed incorrect exception class thrown when no DB driver present
  id: totrans-634
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了当没有DB驱动程序时抛出的错误异常类
- en: '**[no_tags]**'
  id: totrans-635
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added NonExistentTable exception thrown when reflecting a table that doesn’t
    exist
  id: totrans-636
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当反射一个不存在的表时，添加了NonExistentTable异常抛出
- en: 'References: [#138](https://www.sqlalchemy.org/trac/ticket/138)'
  id: totrans-637
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#138](https://www.sqlalchemy.org/trac/ticket/138)
- en: '**[no_tags]**'
  id: totrans-638
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to ActiveMapper regarding one-to-one backrefs, other refactorings
  id: totrans-639
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对ActiveMapper进行了小修复，涉及一对一反向引用，其他重构
- en: '**[no_tags]**'
  id: totrans-640
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overridden constructor in mapped classes gets __name__ and __doc__ from the
    original class
  id: totrans-641
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 映射类中重写的构造函数从原始类获取__name__和__doc__
- en: '**[no_tags]**'
  id: totrans-642
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed small bug in selectresult.py regarding mapper extension
  id: totrans-643
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了selectresult.py中关于映射扩展的小错误
- en: 'References: [#200](https://www.sqlalchemy.org/trac/ticket/200)'
  id: totrans-644
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#200](https://www.sqlalchemy.org/trac/ticket/200)
- en: '**[no_tags]**'
  id: totrans-645
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small tweak to cascade_mappers, not very strongly supported function at the
    moment
  id: totrans-646
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对cascade_mappers进行了小调整，目前支持程度不是很强
- en: '**[no_tags]**'
  id: totrans-647
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to between(), column.between() to propagate typing information better
  id: totrans-648
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对between()、column.between()进行了一些修复，更好地传播类型信息
- en: 'References: [#202](https://www.sqlalchemy.org/trac/ticket/202)'
  id: totrans-649
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#202](https://www.sqlalchemy.org/trac/ticket/202)
- en: '**[no_tags]**'
  id: totrans-650
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: if an object fails to be constructed, is not added to the session
  id: totrans-651
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果对象无法构造，则不会添加到会话中
- en: 'References: [#203](https://www.sqlalchemy.org/trac/ticket/203)'
  id: totrans-652
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#203](https://www.sqlalchemy.org/trac/ticket/203)
- en: '**[no_tags]**'
  id: totrans-653
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: CAST function has been made into its own clause object with its own compilation
    function in ansicompiler; allows MySQL to silently ignore most CAST calls since
    MySQL seems to only support the standard CAST syntax with Date types. MySQL-compatible
    CAST support for strings, ints, etc. a TODO
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CAST函数已经成为自己的子句对象，并在ansicompiler中具有自己的编译函数；允许MySQL静默忽略大多数CAST调用，因为MySQL似乎只支持具有Date类型的标准CAST语法。为字符串、整数等提供与MySQL兼容的CAST支持，一个TODO
- en: 0.2.2
  id: totrans-655
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.2
- en: 'Released: Mon Jun 05 2006'
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年6月5日星期一
- en: '**[no_tags]**'
  id: totrans-657
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: big improvements to polymorphic inheritance behavior, enabling it to work with
    adjacency list table structures
  id: totrans-658
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对多态继承行为进行了重大改进，使其能够与邻接列表表结构一起使用
- en: 'References: [#190](https://www.sqlalchemy.org/trac/ticket/190)'
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#190](https://www.sqlalchemy.org/trac/ticket/190)
- en: '**[no_tags]**'
  id: totrans-660
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: major fixes and refactorings to inheritance relationships overall, more unit
    tests
  id: totrans-661
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对继承关系进行了重大修复和重构，增加了更多单元测试
- en: '**[no_tags]**'
  id: totrans-662
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed “echo_pool” flag on create_engine()
  id: totrans-663
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了create_engine()中的“echo_pool”标志
- en: '**[no_tags]**'
  id: totrans-664
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to docs, removed incorrect info that close() is unsafe to use with threadlocal
    strategy (its totally safe !)
  id: totrans-665
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了文档中的错误信息，删除了与threadlocal策略一起使用close()不安全的不正确信息（完全安全！）
- en: '**[no_tags]**'
  id: totrans-666
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: create_engine() can take URLs as string or unicode
  id: totrans-667
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine()可以接受字符串或Unicode格式的URL
- en: 'References: [#188](https://www.sqlalchemy.org/trac/ticket/188)'
  id: totrans-668
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#188](https://www.sqlalchemy.org/trac/ticket/188)
- en: '**[no_tags]**'
  id: totrans-669
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: firebird support partially completed; thanks to James Ralston and Brad Clements
    for their efforts.
  id: totrans-670
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firebird支持部分完成；感谢James Ralston和Brad Clements的努力。
- en: '**[no_tags]**'
  id: totrans-671
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Oracle url translation was broken, fixed, will feed host/port/sid into cx_oracle
    makedsn() if ‘database’ field is present, else uses straight TNS name from the
    ‘host’ field
  id: totrans-672
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Oracle的url转换出现问题，已修复，如果‘database’字段存在，则将host/port/sid传递给cx_oracle的makedsn()，否则使用‘host’字段中的直接TNS名称
- en: '**[no_tags]**'
  id: totrans-673
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to using unicode criterion for query.get()/query.load()
  id: totrans-674
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了使用unicode条件进行query.get()/query.load()的问题
- en: '**[no_tags]**'
  id: totrans-675
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: count() function on selectables now uses table primary key or first column instead
    of “1” for criterion, also uses label “rowcount” instead of “count”.
  id: totrans-676
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: selectables上的count()函数现在使用表主键或第一列而不是“1”作为条件，还使用标签“rowcount”而不是“count”。
- en: '**[no_tags]**'
  id: totrans-677
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: got rudimental “mapping to multiple tables” functionality cleaned up, more correctly
    documented
  id: totrans-678
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对“映射到多个表”功能进行了基本清理，更正确地记录
- en: '**[no_tags]**'
  id: totrans-679
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: restored global_connect() function, attaches to a DynamicMetaData instance called
    “default_metadata”. leaving MetaData arg to Table out will use the default metadata.
  id: totrans-680
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 恢复了global_connect()函数，连接到名为“default_metadata”的DynamicMetaData实例。如果在Table中不使用MetaData参数，则将使用默认元数据。
- en: '**[no_tags]**'
  id: totrans-681
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to session cascade behavior, entity_name propagation
  id: totrans-682
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了会话级联行为、entity_name传播的问题
- en: '**[no_tags]**'
  id: totrans-683
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: reorganized unittests into subdirectories
  id: totrans-684
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将unittest重新组织到子目录中
- en: '**[no_tags]**'
  id: totrans-685
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: more fixes to threadlocal connection nesting patterns
  id: totrans-686
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对threadlocal连接嵌套模式进行了更多修复
- en: 0.2.1
  id: totrans-687
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.1
- en: 'Released: Mon May 29 2006'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Mon May 29 2006
- en: '**[no_tags]**'
  id: totrans-689
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”pool” argument to create_engine() properly propagates
  id: totrans-690
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`pool`参数传递给create_engine()方法'
- en: '**[no_tags]**'
  id: totrans-691
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to URL, raises exception if not parsed, does not pass blank fields along
    to the DB connect string (a string such as user:host@/db was breaking on postgres)
  id: totrans-692
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了URL，如果未解析则引发异常，不会将空字段传递给数据库连接字符串（例如像`user:host@/db`这样的字符串在postgres上会出错）。
- en: '**[no_tags]**'
  id: totrans-693
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fixes to Mapper when it inserts and tries to get new primary key values
    back
  id: totrans-694
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Mapper插入并尝试获取新主键值时进行了小修复
- en: '**[no_tags]**'
  id: totrans-695
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: rewrote half of TLEngine, the ComposedSQLEngine used with ‘strategy=”threadlocal”’.
    it now properly implements engine.begin()/ engine.commit(), which nest fully with
    connection.begin()/trans.commit(). added about six unittests.
  id: totrans-696
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重写了TLEngine的一半，用于“strategy=”threadlocal”的ComposedSQLEngine。现在它正确地实现了engine.begin()/engine.commit()，与connection.begin()/trans.commit()完全嵌套。添加了约六个单元测试。
- en: '**[no_tags]**'
  id: totrans-697
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: major “duh” in pool.Pool, forgot to put back the WeakValueDictionary. unittest
    which was supposed to check for this was also silently missing it. fixed unittest
    to ensure that ConnectionFairy properly falls out of scope.
  id: totrans-698
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在pool.Pool中有一个主要的“duh”，忘记将WeakValueDictionary放回。应该检查此项的单元测试也被悄悄地遗漏了。修复了单元测试以确保ConnectionFairy正确地退出作用域。
- en: '**[no_tags]**'
  id: totrans-699
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: placeholder dispose() method added to SingletonThreadPool, doesn’t do anything
    yet
  id: totrans-700
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 给SingletonThreadPool添加了占位符dispose()方法，但目前什么也没做
- en: '**[no_tags]**'
  id: totrans-701
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: rollback() is automatically called when an exception is raised, but only if
    there’s no transaction in process (i.e. works more like autocommit).
  id: totrans-702
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当引发异常时自动调用rollback()，但仅在没有正在进行的事务时（即更像是自动提交）。
- en: '**[no_tags]**'
  id: totrans-703
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed exception raise in sqlite if no sqlite module present
  id: totrans-704
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在sqlite中没有sqlite模块时引发异常的问题
- en: '**[no_tags]**'
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added extra example detail for association object doc
  id: totrans-706
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为关联对象文档添加了额外的示例细节
- en: '**[no_tags]**'
  id: totrans-707
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Connection adds checks for already being closed
  id: totrans-708
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Connection增加了对已关闭的检查
- en: 0.2.0
  id: totrans-709
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.2.0
- en: 'Released: Sat May 27 2006'
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Sat May 27 2006
- en: '**[no_tags]**'
  id: totrans-711
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to Engine system so that what was formerly the SQLEngine is now a ComposedSQLEngine
    which consists of a variety of components, including a Dialect, ConnectionProvider,
    etc. This impacted all the db modules as well as Session and Mapper.
  id: totrans-712
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对引擎系统进行了全面改造，以前是SQLEngine现在是由各种组件组成的ComposedSQLEngine，包括方言、连接提供程序等。这影响了所有的db模块以及Session和Mapper。
- en: '**[no_tags]**'
  id: totrans-713
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'create_engine now takes only RFC-1738-style strings: `driver://user:password@host:port/database`'
  id: totrans-714
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine现在只接受RFC-1738样式的字符串：`driver://user:password@host:port/database`
- en: '**update** this format is generally but not exactly RFC-1738, including that
    underscores, not dashes or periods, are accepted in the “scheme” portion.'
  id: totrans-715
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**更新** 此格式通常但并非完全符合RFC-1738，包括在“scheme”部分接受下划线，而不是短横线或点。'
- en: '**[no_tags]**'
  id: totrans-716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: total rewrite of connection-scoping methodology, Connection objects can now
    execute clause elements directly, added explicit “close” as well as support throughout
    Engine/ORM to handle closing properly, no longer relying upon __del__ internally
    to return connections to the pool.
  id: totrans-717
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对连接作用域方法进行了全面重写，Connection对象现在可以直接执行子句元素，明确添加了“close”以及引擎/ORM中的支持，以正确处理关闭，不再依赖于内部的__del__来将连接返回到池中。
- en: 'References: [#152](https://www.sqlalchemy.org/trac/ticket/152)'
  id: totrans-718
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#152](https://www.sqlalchemy.org/trac/ticket/152)
- en: '**[no_tags]**'
  id: totrans-719
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to Session interface and scoping. uses hibernate-style methods, including
    query(class), save(), save_or_update(), etc. no threadlocal scope is installed
    by default. Provides a binding interface to specific Engines and/or Connections
    so that underlying Schema objects do not need to be bound to an Engine. Added
    a basic SessionTransaction object that can simplistically aggregate transactions
    across multiple engines.
  id: totrans-720
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对Session接口和作用域进行了全面改造。使用hibernate风格的方法，包括query(class)、save()、save_or_update()等。默认情况下不安装threadlocal作用域。提供了一个绑定接口到特定Engines和/或Connections的界面，使得底层Schema对象不需要绑定到Engine。添加了一个简单地聚合多个引擎之间事务的基本SessionTransaction对象。
- en: '**[no_tags]**'
  id: totrans-721
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to mapper’s dependency and “cascade” behavior; dependency logic factored
    out of properties.py into a separate module “dependency.py”. “cascade” behavior
    is now explicitly controllable, proper implementation of “delete”, “delete-orphan”,
    etc. dependency system can now determine at flush time if a child object has a
    parent or not so that it makes better decisions on how that child should be updated
    in the DB with regards to deletes.
  id: totrans-722
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对映射器的依赖性和“级联”行为进行了全面改进；依赖逻辑从properties.py中分离出来到一个单独的模块“dependency.py”中。“级联”行为现在可以明确控制，正确实现“delete”，“delete-orphan”等。依赖系统现在可以在刷新时确定子对象是否有父对象，以便更好地决定如何更新该子对象在数据库中关于删除的情况。
- en: '**[no_tags]**'
  id: totrans-723
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to Schema to build upon MetaData object instead of an Engine. Entire
    SQL/Schema system can be used with no Engines whatsoever, executed solely by an
    explicit Connection object. the “bound” methodology exists via the BoundMetaData
    for schema objects. ProxyEngine is generally not needed anymore and is replaced
    by DynamicMetaData.
  id: totrans-724
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对Schema进行了全面改革，建立在MetaData对象的基础上而不是Engine。整个SQL/Schema系统可以在没有任何Engine的情况下使用，仅由显式Connection对象执行。通过BoundMetaData存在“bound”方法论用于模式对象。ProxyEngine通常不再需要，由DynamicMetaData替代。
- en: '**[no_tags]**'
  id: totrans-725
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: true polymorphic behavior implemented, fixes
  id: totrans-726
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实现了真正的多态行为，修复
- en: 'References: [#167](https://www.sqlalchemy.org/trac/ticket/167)'
  id: totrans-727
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#167](https://www.sqlalchemy.org/trac/ticket/167)
- en: '**[no_tags]**'
  id: totrans-728
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”oid” system has been totally moved into compile-time behavior; if they are
    used in an order_by where they are not available, the order_by doesn’t get compiled,
    fixes
  id: totrans-729
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: “oid”系统已完全移入编译时行为；如果它们在不可用的情况下用于order_by，order_by不会被编译，修复
- en: 'References: [#147](https://www.sqlalchemy.org/trac/ticket/147)'
  id: totrans-730
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#147](https://www.sqlalchemy.org/trac/ticket/147)
- en: '**[no_tags]**'
  id: totrans-731
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to packaging; “mapping” is now “orm”, “objectstore” is now “session”,
    the old “objectstore” namespace gets loaded in via the “threadlocal” mod if used
  id: totrans-732
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 包装方式进行了全面改革；“mapping”现在是“orm”，“objectstore”现在是“session”，旧的“objectstore”命名空间通过“threadlocal”模块加载（如果使用）。
- en: '**[no_tags]**'
  id: totrans-733
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mods now called in via “import <modname>”. extensions favored over mods as mods
    are globally-monkeypatching
  id: totrans-734
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在通过“import <modname>”调用mods。扩展优于mods，因为mods是全局monkeypatching
- en: '**[no_tags]**'
  id: totrans-735
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to add_property so that it propagates properties to inheriting mappers
  id: totrans-736
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复add_property以便将属性传播到继承映射器
- en: 'References: [#154](https://www.sqlalchemy.org/trac/ticket/154)'
  id: totrans-737
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#154](https://www.sqlalchemy.org/trac/ticket/154)
- en: '**[no_tags]**'
  id: totrans-738
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: backrefs create themselves against primary mapper of its originating property,
    primary/secondary join arguments can be specified to override. helps their usage
    with polymorphic mappers
  id: totrans-739
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: backrefs自动生成在其原始属性的主映射器上，可以指定主/次要连接参数以覆盖。有助于它们与多态映射器的使用
- en: '**[no_tags]**'
  id: totrans-740
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”table exists” function has been implemented
  id: totrans-741
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 实现了“table exists”函数
- en: 'References: [#31](https://www.sqlalchemy.org/trac/ticket/31)'
  id: totrans-742
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#31](https://www.sqlalchemy.org/trac/ticket/31)
- en: '**[no_tags]**'
  id: totrans-743
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”create_all/drop_all” added to MetaData object
  id: totrans-744
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ”create_all/drop_all”添加到MetaData对象
- en: 'References: [#98](https://www.sqlalchemy.org/trac/ticket/98)'
  id: totrans-745
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#98](https://www.sqlalchemy.org/trac/ticket/98)
- en: '**[no_tags]**'
  id: totrans-746
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements and fixes to topological sort algorithm, as well as more unit tests
  id: totrans-747
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对拓扑排序算法进行了改进和修复，以及更多单元测试
- en: '**[no_tags]**'
  id: totrans-748
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tutorial page added to docs which also can be run with a custom doctest runner
    to ensure its properly working. docs generally overhauled to deal with new code
    patterns
  id: totrans-749
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文档中添加了教程页面，也可以使用自定义doctest运行器运行以确保其正常工作。文档通常已进行全面改进以处理新的代码模式
- en: '**[no_tags]**'
  id: totrans-750
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: many more fixes, refactorings.
  id: totrans-751
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 许多其他修复，重构。
- en: '**[no_tags]**'
  id: totrans-752
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: migration guide is available on the Wiki at [https://www.sqlalchemy.org/trac/wiki/02Migration](https://www.sqlalchemy.org/trac/wiki/02Migration)
  id: totrans-753
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 迁移指南可在Wiki上找到：[https://www.sqlalchemy.org/trac/wiki/02Migration](https://www.sqlalchemy.org/trac/wiki/02Migration)
