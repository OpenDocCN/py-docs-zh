["```py\nimport jax.extend as jex \n```", "```py\nfrom jax.extend import core\t         # Previously: from jax import core\nfrom jax.extend.interpreters import mlir        # ... and similarly\n\nmul_add_p = core.Primitive('mul_add')\nmul_add_p.def_impl(lambda x, y, z: x * y + z)\n\n@mul_add_p.def_abstract_eval\ndef mul_add_abstract(x_sa, y_sa, z_sa):\n  return core.ShapedArray(x_sa.shape, x_sa.dtype)\n\ndef mul_add_mlir(ctx, xc, yc, zc):\n  add = mlir.hlo.AddOp\n  mul = mlir.hlo.MulOp\n  return add(mul(xc, yc), zc).results\n\nmlir.register_lowering(mul_add_p, mul_add_mlir)\n\nimport jax\nprint(mul_add_p.bind(2, 3, 4))            # -> 10\nprint(jax.jit(mul_add_p.bind)(2, 3, 4))   # -> Array(10, dtype=int32) \n```"]