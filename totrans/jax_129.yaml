- en: jax.tree module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/jax.tree.html`](https://jax.readthedocs.io/en/latest/jax.tree.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Utilities for working with tree-like container data structures.
  prefs: []
  type: TYPE_NORMAL
- en: The `jax.tree` namespace contains aliases of utilities from `jax.tree_util`.
  prefs: []
  type: TYPE_NORMAL
- en: List of Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| `all`(tree, *[, is_leaf]) | Call all() over the leaves of a tree. |'
  prefs: []
  type: TYPE_TB
- en: '| `flatten`(tree[, is_leaf]) | Flattens a pytree. |'
  prefs: []
  type: TYPE_TB
- en: '| `leaves`(tree[, is_leaf]) | Gets the leaves of a pytree. |'
  prefs: []
  type: TYPE_TB
- en: '| `map`(f, tree, *rest[, is_leaf]) | Maps a multi-input function over pytree
    args to produce a new pytree. |'
  prefs: []
  type: TYPE_TB
- en: '| `reduce`() | Call reduce() over the leaves of a tree. |'
  prefs: []
  type: TYPE_TB
- en: '| `structure`(tree[, is_leaf]) | Gets the treedef for a pytree. |'
  prefs: []
  type: TYPE_TB
- en: '| `transpose`(outer_treedef, inner_treedef, ...) | Transform a tree having
    tree structure (outer, inner) into one having structure (inner, outer). |'
  prefs: []
  type: TYPE_TB
- en: '| `unflatten`(treedef, leaves) | Reconstructs a pytree from the treedef and
    the leaves. |'
  prefs: []
  type: TYPE_TB
