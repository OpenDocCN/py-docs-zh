["```py\nfrom jax import lax\nfrom jax._src import api\n\ndef multiply_add_lax(x, y, z):\n  \"\"\"Implementation of multiply-add using the jax.lax primitives.\"\"\"\n  return lax.add(lax.mul(x, y), z)\n\ndef square_add_lax(a, b):\n  \"\"\"A square-add function using the newly defined multiply-add.\"\"\"\n  return multiply_add_lax(a, a, b)\n\nprint(\"square_add_lax = \", square_add_lax(2., 10.))\n# Differentiate w.r.t. the first argument\nprint(\"grad(square_add_lax) = \", api.grad(square_add_lax, argnums=0)(2.0, 10.)) \n```", "```py\nsquare_add_lax =  14.0\ngrad(square_add_lax) =  4.0 \n```", "```py\n#@title Helper functions (execute this cell)\nimport functools\nimport traceback\n\n_indentation = 0\ndef _trace(msg=None):\n  \"\"\"Print a message at current indentation.\"\"\"\n    if msg is not None:\n        print(\"  \" * _indentation + msg)\n\ndef _trace_indent(msg=None):\n  \"\"\"Print a message and then indent the rest.\"\"\"\n    global _indentation\n    _trace(msg)\n    _indentation = 1 + _indentation\n\ndef _trace_unindent(msg=None):\n  \"\"\"Unindent then print a message.\"\"\"\n    global _indentation\n    _indentation = _indentation - 1\n    _trace(msg)\n\ndef trace(name):\n  \"\"\"A decorator for functions to trace arguments and results.\"\"\"\n\n  def trace_func(func):  # pylint: disable=missing-docstring\n    def pp(v):\n  \"\"\"Print certain values more succinctly\"\"\"\n        vtype = str(type(v))\n        if \"jax._src.xla_bridge._JaxComputationBuilder\" in vtype:\n            return \"<JaxComputationBuilder>\"\n        elif \"jaxlib.xla_extension.XlaOp\" in vtype:\n            return \"<XlaOp at 0x{:x}>\".format(id(v))\n        elif (\"partial_eval.JaxprTracer\" in vtype or\n              \"batching.BatchTracer\" in vtype or\n              \"ad.JVPTracer\" in vtype):\n            return \"Traced<{}>\".format(v.aval)\n        elif isinstance(v, tuple):\n            return \"({})\".format(pp_values(v))\n        else:\n            return str(v)\n    def pp_values(args):\n        return \", \".join([pp(arg) for arg in args])\n\n    @functools.wraps(func)\n    def func_wrapper(*args):\n      _trace_indent(\"call {}({})\".format(name, pp_values(args)))\n      res = func(*args)\n      _trace_unindent(\"|<- {} = {}\".format(name, pp(res)))\n      return res\n\n    return func_wrapper\n\n  return trace_func\n\nclass expectNotImplementedError(object):\n  \"\"\"Context manager to check for NotImplementedError.\"\"\"\n  def __enter__(self): pass\n  def __exit__(self, type, value, tb):\n    global _indentation\n    _indentation = 0\n    if type is NotImplementedError:\n      print(\"\\nFound expected exception:\")\n      traceback.print_exc(limit=3)\n      return True\n    elif type is None:  # No exception\n      assert False, \"Expected NotImplementedError\"\n    else:\n      return False \n```", "```py\nimport jax.numpy as jnp\nimport numpy as np\n\n@trace(\"multiply_add_numpy\")\ndef multiply_add_numpy(x, y, z):\n    return jnp.add(jnp.multiply(x, y), z)\n\n@trace(\"square_add_numpy\")\ndef square_add_numpy(a, b):\n    return multiply_add_numpy(a, a, b)\n\nprint(\"\\nNormal evaluation:\")  \nprint(\"square_add_numpy = \", square_add_numpy(2., 10.))\nprint(\"\\nGradient evaluation:\")\nprint(\"grad(square_add_numpy) = \", api.grad(square_add_numpy)(2.0, 10.)) \n```", "```py\nNormal evaluation:\ncall square_add_numpy(2.0, 10.0)\n  call multiply_add_numpy(2.0, 2.0, 10.0)\n  |<- multiply_add_numpy = 14.0\n|<- square_add_numpy = 14.0\nsquare_add_numpy =  14.0\n\nGradient evaluation:\ncall square_add_numpy(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, 10.0)\n  call multiply_add_numpy(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, 10.0)\n  |<- multiply_add_numpy = Traced<ConcreteArray(14.0, dtype=float32, weak_type=True)>\n|<- square_add_numpy = Traced<ConcreteArray(14.0, dtype=float32, weak_type=True)>\ngrad(square_add_numpy) =  4.0 \n```", "```py\nfrom jax import core\nmultiply_add_p = core.Primitive(\"multiply_add\")  # Create the primitive\n\n@trace(\"multiply_add_prim\")\ndef multiply_add_prim(x, y, z):\n  \"\"\"The JAX-traceable way to use the JAX primitive.\n\n Note that the traced arguments must be passed as positional arguments\n to `bind`. \n \"\"\"\n  return multiply_add_p.bind(x, y, z)\n\n@trace(\"square_add_prim\")\ndef square_add_prim(a, b):\n  \"\"\"A square-add function implemented using the new JAX-primitive.\"\"\"\n  return multiply_add_prim(a, a, b) \n```", "```py\nwith expectNotImplementedError():\n  square_add_prim(2., 10.) \n```", "```py\ncall square_add_prim(2.0, 10.0)\n  call multiply_add_prim(2.0, 2.0, 10.0)\n\nFound expected exception: \n```", "```py\nTraceback (most recent call last):\n  File \"/tmp/ipykernel_1319/2844449444.py\", line 2, in <module>\n    square_add_prim(2., 10.)\n  File \"/tmp/ipykernel_1319/1393342955.py\", line 48, in func_wrapper\n    res = func(*args)\n  File \"/tmp/ipykernel_1319/1308506715.py\", line 16, in square_add_prim\n    return multiply_add_prim(a, a, b)\nNotImplementedError: Evaluation rule for 'multiply_add' not implemented \n```", "```py\n@trace(\"multiply_add_impl\")\ndef multiply_add_impl(x, y, z):\n  \"\"\"Concrete implementation of the primitive.\n\n This function does not need to be JAX traceable.\n Args:\n x, y, z: the concrete arguments of the primitive. Will only be called with \n concrete values.\n Returns:\n the concrete result of the primitive.\n \"\"\"\n  # Note that we can use the original numpy, which is not JAX traceable\n  return np.add(np.multiply(x, y), z)\n\n# Now we register the primal implementation with JAX\nmultiply_add_p.def_impl(multiply_add_impl) \n```", "```py\n<function __main__.multiply_add_impl(x, y, z)> \n```", "```py\nassert square_add_prim(2., 10.) == 14. \n```", "```py\ncall square_add_prim(2.0, 10.0)\n  call multiply_add_prim(2.0, 2.0, 10.0)\n    call multiply_add_impl(2.0, 2.0, 10.0)\n    |<- multiply_add_impl = 14.0\n  |<- multiply_add_prim = 14.0\n|<- square_add_prim = 14.0 \n```", "```py\nwith expectNotImplementedError():\n  api.jit(square_add_prim)(2., 10.) \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n\nFound expected exception: \n```", "```py\nTraceback (most recent call last):\n  File \"/tmp/ipykernel_1319/1813425700.py\", line 2, in <module>\n    api.jit(square_add_prim)(2., 10.)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 179, in reraise_with_filtered_traceback\n    return fun(*args, **kwargs)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py\", line 326, in cache_miss\n    outs, out_flat, out_tree, args_flat, jaxpr, attrs_tracked = _python_pjit_helper(\nNotImplementedError: Abstract evaluation for 'multiply_add' not implemented \n```", "```py\nfrom jax import core\n@trace(\"multiply_add_abstract_eval\")\ndef multiply_add_abstract_eval(xs, ys, zs):\n  \"\"\"Abstract evaluation of the primitive.\n\n This function does not need to be JAX traceable. It will be invoked with\n abstractions of the actual arguments. \n Args:\n xs, ys, zs: abstractions of the arguments.\n Result:\n a ShapedArray for the result of the primitive.\n \"\"\"\n  assert xs.shape == ys.shape\n  assert xs.shape == zs.shape\n  return core.ShapedArray(xs.shape, xs.dtype)\n\n# Now we register the abstract evaluation with JAX\nmultiply_add_p.def_abstract_eval(multiply_add_abstract_eval) \n```", "```py\n<function __main__.multiply_add_abstract_eval(xs, ys, zs)> \n```", "```py\nwith expectNotImplementedError():\n  api.jit(square_add_prim)(2., 10.) \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n    call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n    |<- multiply_add_abstract_eval = ShapedArray(float32[])\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n|<- square_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n\nFound expected exception: \n```", "```py\nTraceback (most recent call last):\n  File \"/home/docs/.asdf/installs/python/3.10.14/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n    return _run_code(code, main_globals, None,\n  File \"/home/docs/.asdf/installs/python/3.10.14/lib/python3.10/runpy.py\", line 86, in _run_code\n    exec(code, run_globals)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/ipykernel_launcher.py\", line 18, in <module>\n    app.launch_new_instance()\njax._src.source_info_util.JaxStackTraceBeforeTransformation: NotImplementedError: MLIR translation rule for primitive 'multiply_add' not found for platform cpu\n\nThe preceding stack trace is the source of the JAX operation that, once transformed by JAX, triggered the following exception.\n\n--------------------\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/tmp/ipykernel_1319/1813425700.py\", line 2, in <module>\n    api.jit(square_add_prim)(2., 10.)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 179, in reraise_with_filtered_traceback\n    return fun(*args, **kwargs)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py\", line 326, in cache_miss\n    outs, out_flat, out_tree, args_flat, jaxpr, attrs_tracked = _python_pjit_helper(\nNotImplementedError: MLIR translation rule for primitive 'multiply_add' not found for platform cpu \n```", "```py\nfrom jax._src.lib.mlir.dialects import hlo\n@trace(\"multiply_add_lowering\")\ndef multiply_add_lowering(ctx, xc, yc, zc):\n  \"\"\"The compilation to XLA of the primitive.\n\n Given an mlir.ir.Value for each argument, return the mlir.ir.Values for\n the results of the function.\n\n Does not need to be a JAX-traceable function.\n \"\"\"\n  return [hlo.AddOp(hlo.MulOp(xc, yc), zc).result]\n\n# Now we register the lowering rule with JAX\n# For GPU see the [Custom operations for GPUs](https://jax.readthedocs.io/en/latest/Custom_Operation_for_GPUs.html)\n# TODO: TPU?\nfrom jax.interpreters import mlir\nmlir.register_lowering(multiply_add_p, multiply_add_lowering, platform='cpu') \n```", "```py\n<function __main__.multiply_add_lowering(ctx, xc, yc, zc)> \n```", "```py\nassert api.jit(lambda x, y: square_add_prim(x, y))(2., 10.) == 14. \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n    call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n    |<- multiply_add_abstract_eval = ShapedArray(float32[])\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n|<- square_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc664db0>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc688cf0>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc688d70>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc682b30>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afd8fd060>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a45a0d0>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/1570919344.py\":1:0) at callsite(\"<module>\"(\"/tmp/ipykernel_1319/1570919344.py\":1:0) at callsite(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0) at callsite(\"run_ast_nodes\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3517:0) at callsite(\"run_cell_async\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3334:0) at \"_pseudo_sync_runner\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py\":129:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <lambda> at 0x7f0afd8d4ea0, file \"/tmp/ipykernel_1319/1570919344.py\", line 1>, 6): loc(\"<lambda>\"(\"/tmp/ipykernel_1319/1570919344.py\":1:0)), (<code object <module> at 0x7f0afd8d6b80, file \"/tmp/ipykernel_1319/1570919344.py\", line 1>, 16): loc(\"<module>\"(\"/tmp/ipykernel_1319/1570919344.py\":1:0)), (<code object run_code at 0x7f0b3686e550, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3541>, 76): loc(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0)), (<code object run_ast_nodes at 0x7f0b3686e3f0, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3418>, 500): loc(\"run_ast_nodes\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3517:0)), (<code object run_cell_async at 0x7f0b3686e080, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3183>, 828): loc(\"run_cell_async\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3334:0)), (<code object _pseudo_sync_runner at 0x7f0b36740c90, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 120>, 8): loc(\"_pseudo_sync_runner\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py\":129:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/1570919344.py': '/tmp/ipykernel_1319/1570919344.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/1570919344.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py': True}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(<lambda>)'), Scope(name='jit(main)'))), primitive=multiply_add, avals_in=[ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True)], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afd8fe8f0>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(<block argument> of type 'tensor<f32>' at index: 1))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afc6835b0>] \n```", "```py\nassert api.jit(lambda x, y: square_add_prim(x, y), \n               static_argnums=1)(2., 10.) == 14. \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, 10.0)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, 10.0)\n    call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n    |<- multiply_add_abstract_eval = ShapedArray(float32[])\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n|<- square_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc666480>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc690530>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc6905b0>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc690570>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afd8ffc40>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a58e100>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/4165789807.py\":1:0) at callsite(\"<module>\"(\"/tmp/ipykernel_1319/4165789807.py\":1:0) at callsite(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0) at callsite(\"run_ast_nodes\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3517:0) at callsite(\"run_cell_async\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3334:0) at \"_pseudo_sync_runner\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py\":129:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <lambda> at 0x7f0afd8d5b00, file \"/tmp/ipykernel_1319/4165789807.py\", line 1>, 6): loc(\"<lambda>\"(\"/tmp/ipykernel_1319/4165789807.py\":1:0)), (<code object <module> at 0x7f0b2cd8b3c0, file \"/tmp/ipykernel_1319/4165789807.py\", line 1>, 20): loc(\"<module>\"(\"/tmp/ipykernel_1319/4165789807.py\":1:0)), (<code object run_code at 0x7f0b3686e550, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3541>, 76): loc(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0)), (<code object run_ast_nodes at 0x7f0b3686e3f0, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3418>, 500): loc(\"run_ast_nodes\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3517:0)), (<code object run_cell_async at 0x7f0b3686e080, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3183>, 828): loc(\"run_cell_async\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3334:0)), (<code object _pseudo_sync_runner at 0x7f0b36740c90, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py\", line 120>, 8): loc(\"_pseudo_sync_runner\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py\":129:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/4165789807.py': '/tmp/ipykernel_1319/4165789807.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/4165789807.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/async_helpers.py': True}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(<lambda>)'), Scope(name='jit(main)'))), primitive=multiply_add, avals_in=[ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True)], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69c250>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(%0 = \"stablehlo.constant\"() <{value = dense<1.000000e+01> : tensor<f32>}> : () -> tensor<f32>))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afd8dcff0>] \n```", "```py\n# The second argument `(2., 10.)` are the argument values\n# where we evaluate the Jacobian, and the third `(1., 1.)`\n# are the values of the tangents for the arguments.\nwith expectNotImplementedError():\n  api.jvp(square_add_prim, (2., 10.), (1., 1.)) \n```", "```py\ncall square_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(10.0, dtype=float32, weak_type=True)>)\n  call multiply_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(10.0, dtype=float32, weak_type=True)>)\n\nFound expected exception: \n```", "```py\nTraceback (most recent call last):\n  File \"/tmp/ipykernel_1319/800067577.py\", line 5, in <module>\n    api.jvp(square_add_prim, (2., 10.), (1., 1.))\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py\", line 1901, in jvp\n    return _jvp(lu.wrap_init(fun), primals, tangents, has_aux=has_aux)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py\", line 1930, in _jvp\n    out_primals, out_tangents = ad.jvp(flat_fun).call_wrapped(ps_flat, ts_flat)\nNotImplementedError: Differentiation rule for 'multiply_add' not implemented \n```", "```py\nfrom jax.interpreters import ad\n\n@trace(\"multiply_add_value_and_jvp\")\ndef multiply_add_value_and_jvp(arg_values, arg_tangents):\n  \"\"\"Evaluates the primal output and the tangents (Jacobian-vector product).\n\n Given values of the arguments and perturbation of the arguments (tangents), \n compute the output of the primitive and the perturbation of the output.\n\n This method must be JAX-traceable. JAX may invoke it with abstract values \n for the arguments and tangents.\n\n Args:\n arg_values: a tuple of arguments\n arg_tangents: a tuple with the tangents of the arguments. The tuple has \n the same length as the arg_values. Some of the tangents may also be the \n special value ad.Zero to specify a zero tangent.\n Returns:\n a pair of the primal output and the tangent.\n \"\"\"\n  x, y, z = arg_values\n  xt, yt, zt = arg_tangents\n  _trace(\"Primal evaluation:\")\n  # Now we have a JAX-traceable computation of the output. \n  # Normally, we can use the ma primitive itself to compute the primal output. \n  primal_out = multiply_add_prim(x, y, z)\n\n  _trace(\"Tangent evaluation:\")\n  # We must use a JAX-traceable way to compute the tangent. It turns out that \n  # the output tangent can be computed as (xt * y + x * yt + zt),\n  # which we can implement in a JAX-traceable way using the same \"multiply_add_prim\" primitive.\n\n  # We do need to deal specially with Zero. Here we just turn it into a \n  # proper tensor of 0s (of the same shape as 'x'). \n  # An alternative would be to check for Zero and perform algebraic \n  # simplification of the output tangent computation.\n  def make_zero(tan):\n    return lax.zeros_like_array(x) if type(tan) is ad.Zero else tan  \n\n  output_tangent = multiply_add_prim(make_zero(xt), y, multiply_add_prim(x, make_zero(yt), make_zero(zt)))\n  return (primal_out, output_tangent)\n\n# Register the forward differentiation rule with JAX \nad.primitive_jvps[multiply_add_p] = multiply_add_value_and_jvp \n```", "```py\n# Tangent is: xt*y + x*yt + zt = 1.*2\\. + 2.*1\\. + 1\\. = 5.\nassert api.jvp(square_add_prim, (2., 10.), (1., 1.)) == (14., 5.) \n```", "```py\ncall square_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(10.0, dtype=float32, weak_type=True)>)\n  call multiply_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(10.0, dtype=float32, weak_type=True)>)\n    call multiply_add_value_and_jvp((2.0, 2.0, 10.0), (1.0, 1.0, 1.0))\n      Primal evaluation:\n      call multiply_add_prim(2.0, 2.0, 10.0)\n        call multiply_add_impl(2.0, 2.0, 10.0)\n        |<- multiply_add_impl = 14.0\n      |<- multiply_add_prim = 14.0\n      Tangent evaluation:\n      call multiply_add_prim(2.0, 1.0, 1.0)\n        call multiply_add_impl(2.0, 1.0, 1.0)\n        |<- multiply_add_impl = 3.0\n      |<- multiply_add_prim = 3.0\n      call multiply_add_prim(1.0, 2.0, 3.0)\n        call multiply_add_impl(1.0, 2.0, 3.0)\n        |<- multiply_add_impl = 5.0\n      |<- multiply_add_prim = 5.0\n    |<- multiply_add_value_and_jvp = (14.0, 5.0)\n  |<- multiply_add_prim = Traced<ConcreteArray(14.0, dtype=float32)>\n|<- square_add_prim = Traced<ConcreteArray(14.0, dtype=float32)> \n```", "```py\nassert api.jit(lambda arg_values, arg_tangents: \n                   api.jvp(square_add_prim, arg_values, arg_tangents))(\n         (2., 10.), (1., 1.)) == (14., 5.) \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>)\n    call multiply_add_value_and_jvp((Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>), (Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>))\n      Primal evaluation:\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n      Tangent evaluation:\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[]))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n    |<- multiply_add_value_and_jvp = (Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>)\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n|<- square_add_prim = Traced<ShapedArray(float32[])>\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc6e5580>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc6f4430>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc6f4470>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc6f4230>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afd8b7190>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a58e100>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":27:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0) at \"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 36): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":27:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <lambda> at 0x7f0afc66b520, file \"/tmp/ipykernel_1319/2145028508.py\", line 1>, 10): loc(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0)), (<code object <module> at 0x7f0afc66b5d0, file \"/tmp/ipykernel_1319/2145028508.py\", line 1>, 16): loc(\"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/3197095916.py': '/tmp/ipykernel_1319/3197095916.py', '/tmp/ipykernel_1319/2145028508.py': '/tmp/ipykernel_1319/2145028508.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/3197095916.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/ad.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py': False, '/tmp/ipykernel_1319/2145028508.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(<lambda>)'), Scope(name='jit(main)'), Transform(name='jvp'))), primitive=multiply_add, avals_in=[ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True)], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69cc10>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(<block argument> of type 'tensor<f32>' at index: 1))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afc68ae70>]\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc6e5580>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc6f4430>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc6f4470>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc6f4230>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afd8b7190>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a58e100>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":27:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0) at \"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0))))))))))), <jaxlib.xla_extension.Traceback object at 0x56229a598430>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0) at \"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 36): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":27:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <lambda> at 0x7f0afc66b520, file \"/tmp/ipykernel_1319/2145028508.py\", line 1>, 10): loc(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0)), (<code object <module> at 0x7f0afc66b5d0, file \"/tmp/ipykernel_1319/2145028508.py\", line 1>, 16): loc(\"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 86): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/3197095916.py': '/tmp/ipykernel_1319/3197095916.py', '/tmp/ipykernel_1319/2145028508.py': '/tmp/ipykernel_1319/2145028508.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/3197095916.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/ad.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py': False, '/tmp/ipykernel_1319/2145028508.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(<lambda>)'), Scope(name='jit(main)'), Transform(name='jvp'))), primitive=multiply_add, avals_in=[ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True)], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69cca0>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(<block argument> of type 'tensor<f32>' at index: 2), Value(<block argument> of type 'tensor<f32>' at index: 3))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afd8dc2b0>]\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc6e5580>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc6f4430>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc6f4470>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc6f4230>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afd8b7190>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a58e100>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":27:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0) at \"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0))))))))))), <jaxlib.xla_extension.Traceback object at 0x56229a598430>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0) at \"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0))))))))))), <jaxlib.xla_extension.Traceback object at 0x56229a3459c0>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0) at \"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 36): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":27:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <lambda> at 0x7f0afc66b520, file \"/tmp/ipykernel_1319/2145028508.py\", line 1>, 10): loc(\"<lambda>\"(\"/tmp/ipykernel_1319/2145028508.py\":2:0)), (<code object <module> at 0x7f0afc66b5d0, file \"/tmp/ipykernel_1319/2145028508.py\", line 1>, 16): loc(\"<module>\"(\"/tmp/ipykernel_1319/2145028508.py\":1:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 86): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 88): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/3197095916.py': '/tmp/ipykernel_1319/3197095916.py', '/tmp/ipykernel_1319/2145028508.py': '/tmp/ipykernel_1319/2145028508.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/3197095916.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/ad.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py': False, '/tmp/ipykernel_1319/2145028508.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(<lambda>)'), Scope(name='jit(main)'), Transform(name='jvp'))), primitive=multiply_add, avals_in=[ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[])], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69cc10>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<f32>' at index: 2), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(%3 = \"stablehlo.add\"(%2, %arg3) : (tensor<f32>, tensor<f32>) -> tensor<f32>))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afd8b3270>] \n```", "```py\n# This is reverse differentiation w.r.t. the first argument of square_add_prim\nwith expectNotImplementedError():\n  api.grad(square_add_prim)(2., 10.) \n```", "```py\ncall square_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, 10.0)\n  call multiply_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, 10.0)\n    call multiply_add_value_and_jvp((2.0, 2.0, 10.0), (Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>, Zero(ShapedArray(float32[], weak_type=True))))\n      Primal evaluation:\n      call multiply_add_prim(2.0, 2.0, 10.0)\n        call multiply_add_impl(2.0, 2.0, 10.0)\n        |<- multiply_add_impl = 14.0\n      |<- multiply_add_prim = 14.0\n      Tangent evaluation:\n      call multiply_add_prim(2.0, Traced<ShapedArray(float32[], weak_type=True)>, 0.0)\n        call multiply_add_abstract_eval(ConcreteArray(2.0, dtype=float32, weak_type=True), ShapedArray(float32[], weak_type=True), ConcreteArray(0.0, dtype=float32, weak_type=True))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, 2.0, Traced<ShapedArray(float32[])>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ConcreteArray(2.0, dtype=float32, weak_type=True), ShapedArray(float32[]))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n    |<- multiply_add_value_and_jvp = (14.0, Traced<ShapedArray(float32[])>)\n  |<- multiply_add_prim = Traced<ConcreteArray(14.0, dtype=float32)>\n|<- square_add_prim = Traced<ConcreteArray(14.0, dtype=float32)>\n\nFound expected exception: \n```", "```py\nTraceback (most recent call last):\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/ad.py\", line 284, in get_primitive_transpose\n    return primitive_transposes[p]\nKeyError: multiply_add\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/docs/.asdf/installs/python/3.10.14/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\n    return _run_code(code, main_globals, None,\n  File \"/home/docs/.asdf/installs/python/3.10.14/lib/python3.10/runpy.py\", line 86, in _run_code\n    exec(code, run_globals)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/ipykernel_launcher.py\", line 18, in <module>\n    app.launch_new_instance()\njax._src.source_info_util.JaxStackTraceBeforeTransformation: NotImplementedError: Transpose rule (for reverse-mode differentiation) for 'multiply_add' not implemented\n\nThe preceding stack trace is the source of the JAX operation that, once transformed by JAX, triggered the following exception.\n\n--------------------\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/tmp/ipykernel_1319/339076514.py\", line 3, in <module>\n    api.grad(square_add_prim)(2., 10.)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 179, in reraise_with_filtered_traceback\n    return fun(*args, **kwargs)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py\", line 621, in grad_f\n    _, g = value_and_grad_f(*args, **kwargs)\nNotImplementedError: Transpose rule (for reverse-mode differentiation) for 'multiply_add' not implemented \n```", "```py\n a = xt * 4.\n   b = 2. * yt\n   c = a + b\n   ft = c + yt \n```", "```py\n # Initialize cotangents of inputs and intermediate vars\n  xct = yct = act = bct = cct = 0.\n  # Initialize cotangent of the output\n  fct = 1.\n  # Process \"ft = c + yt\"\n  cct += fct\n  yct += fct\n  # Process \"c = a + b\"\n  act += cct\n  bct += cct\n  # Process \"b = 2\\. * yt\"\n  yct += 2. * bct\n  # Process \"a = xt * 4.\"\n  xct += act * 4. \n```", "```py\np_transpose(out_ct, x, _, _) = (None, out_ct*cy, out_ct*cz) \n```", "```py\n add_transpose(out_ct, _, _) = (out_ct, out_ct)\n mult_transpose(out_ct, x, _) = (None, x * out_ct)\n mult_transpose(out_ct, _, y) = (out_ct * y, None) \n```", "```py\n@trace(\"multiply_add_transpose\")\ndef multiply_add_transpose(ct, x, y, z):\n  \"\"\"Evaluates the transpose of a linear primitive.\n\n This method is only used when computing the backward gradient following \n value_and_jvp, and is only needed for primitives that are used in the JVP \n calculation for some other primitive. We need transposition for multiply_add_prim, \n because we have used multiply_add_prim in the computation of the output_tangent in \n multiply_add_value_and_jvp.\n\n In our case, multiply_add is not a linear primitive. However, it is used linearly \n w.r.t. tangents in multiply_add_value_and_jvp:\n output_tangent(xt, yt, zt) = multiply_add_prim(xt, y, multiply_add_prim(x, yt, zt))\n\n Always one of the first two multiplicative arguments is a constant.\n\n Args:\n ct: the cotangent of the output of the primitive.\n x, y, z: values of the arguments. The arguments that are used linearly\n get an ad.UndefinedPrimal value. The other arguments get a constant\n value.\n Returns:\n a tuple with the cotangent of the inputs, with the value None\n corresponding to the constant arguments.\n \"\"\"\n  if not ad.is_undefined_primal(x):\n    # This use of multiply_add is with a constant \"x\"\n    assert ad.is_undefined_primal(y)\n    ct_y = ad.Zero(y.aval) if type(ct) is ad.Zero else multiply_add_prim(x, ct, lax.zeros_like_array(x))\n    res = None, ct_y, ct\n  else:\n    # This use of multiply_add is with a constant \"y\"\n    assert ad.is_undefined_primal(x)\n    ct_x = ad.Zero(x.aval) if type(ct) is ad.Zero else multiply_add_prim(ct, y, lax.zeros_like_array(y))\n    res = ct_x, None, ct\n  return res\n\nad.primitive_transposes[multiply_add_p] = multiply_add_transpose \n```", "```py\nassert api.grad(square_add_prim)(2., 10.) == 4. \n```", "```py\ncall square_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, 10.0)\n  call multiply_add_prim(Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, Traced<ConcreteArray(2.0, dtype=float32, weak_type=True)>, 10.0)\n    call multiply_add_value_and_jvp((2.0, 2.0, 10.0), (Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>, Zero(ShapedArray(float32[], weak_type=True))))\n      Primal evaluation:\n      call multiply_add_prim(2.0, 2.0, 10.0)\n        call multiply_add_impl(2.0, 2.0, 10.0)\n        |<- multiply_add_impl = 14.0\n      |<- multiply_add_prim = 14.0\n      Tangent evaluation:\n      call multiply_add_prim(2.0, Traced<ShapedArray(float32[], weak_type=True)>, 0.0)\n        call multiply_add_abstract_eval(ConcreteArray(2.0, dtype=float32, weak_type=True), ShapedArray(float32[], weak_type=True), ConcreteArray(0.0, dtype=float32, weak_type=True))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, 2.0, Traced<ShapedArray(float32[])>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ConcreteArray(2.0, dtype=float32, weak_type=True), ShapedArray(float32[]))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n    |<- multiply_add_value_and_jvp = (14.0, Traced<ShapedArray(float32[])>)\n  |<- multiply_add_prim = Traced<ConcreteArray(14.0, dtype=float32)>\n|<- square_add_prim = Traced<ConcreteArray(14.0, dtype=float32)>\ncall multiply_add_transpose(1.0, UndefinedPrimal(ShapedArray(float32[], weak_type=True)), 2.0, UndefinedPrimal(ShapedArray(float32[])))\n  call multiply_add_prim(1.0, 2.0, 0.0)\n    call multiply_add_impl(1.0, 2.0, 0.0)\n    |<- multiply_add_impl = 2.0\n  |<- multiply_add_prim = 2.0\n|<- multiply_add_transpose = (2.0, None, 1.0)\ncall multiply_add_transpose(1.0, 2.0, UndefinedPrimal(ShapedArray(float32[], weak_type=True)), 0.0)\n  call multiply_add_prim(2.0, 1.0, 0.0)\n    call multiply_add_impl(2.0, 1.0, 0.0)\n    |<- multiply_add_impl = 2.0\n  |<- multiply_add_prim = 2.0\n|<- multiply_add_transpose = (None, 2.0, 1.0) \n```", "```py\nassert api.jit(api.grad(square_add_prim))(2., 10.) == 4. \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n    call multiply_add_value_and_jvp((Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>), (Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>, Zero(ShapedArray(float32[], weak_type=True))))\n      Primal evaluation:\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n      Tangent evaluation:\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n      call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[])>)\n        call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True), ShapedArray(float32[]))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n    |<- multiply_add_value_and_jvp = (Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[])>)\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n|<- square_add_prim = Traced<ShapedArray(float32[])>\ncall multiply_add_transpose(Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, UndefinedPrimal(ShapedArray(float32[], weak_type=True)), Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, UndefinedPrimal(ShapedArray(float32[])))\n  call multiply_add_prim(Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n    call multiply_add_abstract_eval(ShapedArray(float32[]), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True))\n    |<- multiply_add_abstract_eval = ShapedArray(float32[])\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n|<- multiply_add_transpose = (Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, None, Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>)\ncall multiply_add_transpose(Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, UndefinedPrimal(ShapedArray(float32[], weak_type=True)), Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n  call multiply_add_prim(Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[], weak_type=True)>with<DynamicJaxprTrace(level=1/0)>)\n    call multiply_add_abstract_eval(ShapedArray(float32[], weak_type=True), ShapedArray(float32[]), ShapedArray(float32[], weak_type=True))\n    |<- multiply_add_abstract_eval = ShapedArray(float32[])\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>\n|<- multiply_add_transpose = (None, Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[])>with<DynamicJaxprTrace(level=1/0)>)\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc51c360>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc50ba30>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc508d30>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc50bc30>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afc69ef20>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a56fb00>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<module>\"(\"/tmp/ipykernel_1319/3085343041.py\":1:0) at \"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 88): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <module> at 0x7f0afc6694d0, file \"/tmp/ipykernel_1319/3085343041.py\", line 1>, 18): loc(\"<module>\"(\"/tmp/ipykernel_1319/3085343041.py\":1:0)), (<code object run_code at 0x7f0b3686e550, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3541>, 76): loc(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/3197095916.py': '/tmp/ipykernel_1319/3197095916.py', '/tmp/ipykernel_1319/3085343041.py': '/tmp/ipykernel_1319/3085343041.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/3197095916.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/ad.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/tmp/ipykernel_1319/3085343041.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': True}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(square_add_prim)'), Scope(name='jit(main)'), Transform(name='transpose'), Transform(name='jvp'))), primitive=multiply_add, avals_in=[ShapedArray(float32[]), ShapedArray(float32[], weak_type=True), ShapedArray(float32[], weak_type=True)], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69d600>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(%0 = \"stablehlo.constant\"() <{value = dense<1.000000e+00> : tensor<f32>}> : () -> tensor<f32>), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(%1 = \"stablehlo.constant\"() <{value = dense<0.000000e+00> : tensor<f32>}> : () -> tensor<f32>))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afc6d1b30>]\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc51c360>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc50ba30>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc508d30>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc50bc30>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afc69ef20>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a56fb00>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<module>\"(\"/tmp/ipykernel_1319/3085343041.py\":1:0) at \"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0))))))))))), <jaxlib.xla_extension.Traceback object at 0x56229a611410>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<module>\"(\"/tmp/ipykernel_1319/3085343041.py\":1:0) at \"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 88): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <module> at 0x7f0afc6694d0, file \"/tmp/ipykernel_1319/3085343041.py\", line 1>, 18): loc(\"<module>\"(\"/tmp/ipykernel_1319/3085343041.py\":1:0)), (<code object run_code at 0x7f0b3686e550, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3541>, 76): loc(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0)), (<code object multiply_add_value_and_jvp at 0x7f0b2cd8ae40, file \"/tmp/ipykernel_1319/3197095916.py\", line 4>, 86): loc(\"multiply_add_value_and_jvp\"(\"/tmp/ipykernel_1319/3197095916.py\":41:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/3197095916.py': '/tmp/ipykernel_1319/3197095916.py', '/tmp/ipykernel_1319/3085343041.py': '/tmp/ipykernel_1319/3085343041.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/3197095916.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/ad.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/tmp/ipykernel_1319/3085343041.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': True}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(square_add_prim)'), Scope(name='jit(main)'), Transform(name='transpose'), Transform(name='jvp'))), primitive=multiply_add, avals_in=[ShapedArray(float32[], weak_type=True), ShapedArray(float32[]), ShapedArray(float32[], weak_type=True)], avals_out=[ShapedArray(float32[])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69d930>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<f32>' at index: 0), Value(%4 = \"stablehlo.constant\"() <{value = dense<1.000000e+00> : tensor<f32>}> : () -> tensor<f32>), Value(%5 = \"stablehlo.constant\"() <{value = dense<0.000000e+00> : tensor<f32>}> : () -> tensor<f32>))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afd8e6f70>] \n```", "```py\n# The arguments are two vectors instead of two scalars\nwith expectNotImplementedError():\n  api.vmap(square_add_prim, in_axes=0, out_axes=0)(np.array([2., 3.]),\n                                               np.array([10., 20.])) \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>)\n  call multiply_add_prim(Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>)\n\nFound expected exception: \n```", "```py\nTraceback (most recent call last):\n  File \"/tmp/ipykernel_1319/2641678767.py\", line 3, in <module>\n    api.vmap(square_add_prim, in_axes=0, out_axes=0)(np.array([2., 3.]),\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py\", line 179, in reraise_with_filtered_traceback\n    return fun(*args, **kwargs)\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py\", line 1214, in vmap_f\n    out_flat = batching.batch(\nNotImplementedError: Batching rule for 'multiply_add' not implemented \n```", "```py\nfrom jax.interpreters import batching\n\n@trace(\"multiply_add_batch\")\ndef multiply_add_batch(vector_arg_values, batch_axes):\n  \"\"\"Computes the batched version of the primitive.\n\n This must be a JAX-traceable function.\n\n Since the multiply_add primitive already operates pointwise on arbitrary\n dimension tensors, to batch it we can use the primitive itself. This works as\n long as both the inputs have the same dimensions and are batched along the\n same axes. The result is batched along the axis that the inputs are batched.\n\n Args:\n vector_arg_values: a tuple of two arguments, each being a tensor of matching\n shape.\n batch_axes: the axes that are being batched. See vmap documentation.\n Returns:\n a tuple of the result, and the result axis that was batched. \n \"\"\"\n  assert batch_axes[0] == batch_axes[1]\n  assert batch_axes[0] == batch_axes[2]\n  _trace(\"Using multiply_add to compute the batch:\")\n  res = multiply_add_prim(*vector_arg_values)\n  return res, batch_axes[0]\n\nbatching.primitive_batchers[multiply_add_p] = multiply_add_batch \n```", "```py\nassert np.allclose(api.vmap(square_add_prim, in_axes=0, out_axes=0)(\n  np.array([2., 3.]),\n  np.array([10., 20.])),\n  [14., 29.]) \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>)\n  call multiply_add_prim(Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>)\n    call multiply_add_batch(([2\\. 3.], [2\\. 3.], [10\\. 20.]), (0, 0, 0))\n      Using multiply_add to compute the batch:\n      call multiply_add_prim([2\\. 3.], [2\\. 3.], [10\\. 20.])\n        call multiply_add_impl([2\\. 3.], [2\\. 3.], [10\\. 20.])\n        |<- multiply_add_impl = [14\\. 29.]\n      |<- multiply_add_prim = [14\\. 29.]\n    |<- multiply_add_batch = ([14\\. 29.], 0)\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n|<- square_add_prim = Traced<ShapedArray(float32[])> \n```", "```py\nassert np.allclose(api.jit(api.vmap(square_add_prim, in_axes=0, out_axes=0))\n                    (np.array([2., 3.]),\n                     np.array([10., 20.])),\n                    [14., 29.]) \n```", "```py\ncall square_add_prim(Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>)\n  call multiply_add_prim(Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>, Traced<ShapedArray(float32[])>)\n    call multiply_add_batch((Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>), (0, 0, 0))\n      Using multiply_add to compute the batch:\n      call multiply_add_prim(Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>, Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>)\n        call multiply_add_abstract_eval(ShapedArray(float32[2]), ShapedArray(float32[2]), ShapedArray(float32[2]))\n        |<- multiply_add_abstract_eval = ShapedArray(float32[2])\n      |<- multiply_add_prim = Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>\n    |<- multiply_add_batch = (Traced<ShapedArray(float32[2])>with<DynamicJaxprTrace(level=1/0)>, 0)\n  |<- multiply_add_prim = Traced<ShapedArray(float32[])>\n|<- square_add_prim = Traced<ShapedArray(float32[])>\ncall multiply_add_lowering(LoweringRuleContext(module_context=ModuleContext(context=<jaxlib.mlir._mlir_libs._site_initialize.<locals>.Context object at 0x7f0afc51cd10>, module=<jaxlib.mlir._mlir_libs._mlir.ir.Module object at 0x7f0afc68bdb0>, ip=<jaxlib.mlir._mlir_libs._mlir.ir.InsertionPoint object at 0x7f0afc68aaf0>, symbol_table=<jaxlib.mlir._mlir_libs._mlir.ir.SymbolTable object at 0x7f0afc689eb0>, backend_or_name=<jaxlib.xla_extension.Client object at 0x7f0afd95b880>, platforms=('cpu',), axis_context=ShardingContext(num_devices=1, device_assignment=None), keepalives=[], channel_iterator=count(1), host_callbacks=[], shape_poly_state=<jax._src.interpreters.mlir.ShapePolyLoweringState object at 0x7f0afd8b7190>, cached_primitive_lowerings={}, traceback_caches=TracebackCaches(traceback_cache={<jaxlib.xla_extension.Traceback object at 0x56229a884960>: loc(callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_batch\"(\"/tmp/ipykernel_1319/184469370.py\":25:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0) at callsite(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0) at callsite(\"<module>\"(\"/tmp/ipykernel_1319/1392464762.py\":1:0) at \"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0)))))))))))}, location_cache={(<code object multiply_add_prim at 0x7f0afd853b50, file \"/tmp/ipykernel_1319/1308506715.py\", line 4>, 10): loc(\"multiply_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":11:0)), (<code object func_wrapper at 0x7f0b2cd8b260, file \"/tmp/ipykernel_1319/1393342955.py\", line 45>, 24): loc(\"func_wrapper\"(\"/tmp/ipykernel_1319/1393342955.py\":48:0)), (<code object multiply_add_batch at 0x7f0afc6687c0, file \"/tmp/ipykernel_1319/184469370.py\", line 4>, 52): loc(\"multiply_add_batch\"(\"/tmp/ipykernel_1319/184469370.py\":25:0)), (<code object square_add_prim at 0x7f0afd8d5c60, file \"/tmp/ipykernel_1319/1308506715.py\", line 13>, 8): loc(\"square_add_prim\"(\"/tmp/ipykernel_1319/1308506715.py\":16:0)), (<code object <module> at 0x7f0afc668a80, file \"/tmp/ipykernel_1319/1392464762.py\", line 1>, 48): loc(\"<module>\"(\"/tmp/ipykernel_1319/1392464762.py\":1:0)), (<code object run_code at 0x7f0b3686e550, file \"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3541>, 76): loc(\"run_code\"(\"/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py\":3577:0))}, canonical_name_cache={'/tmp/ipykernel_1319/1308506715.py': '/tmp/ipykernel_1319/1308506715.py', '/tmp/ipykernel_1319/1393342955.py': '/tmp/ipykernel_1319/1393342955.py', '/tmp/ipykernel_1319/184469370.py': '/tmp/ipykernel_1319/184469370.py', '/tmp/ipykernel_1319/1392464762.py': '/tmp/ipykernel_1319/1392464762.py', '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py'}, is_user_file_cache={'/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/source_info_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/partial_eval.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/core.py': False, '/tmp/ipykernel_1319/1308506715.py': True, '/tmp/ipykernel_1319/1393342955.py': True, '/tmp/ipykernel_1319/184469370.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/interpreters/batching.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/linear_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/api.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/traceback_util.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/profiler.py': False, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/jax/_src/pjit.py': False, '/tmp/ipykernel_1319/1392464762.py': True, '/home/docs/checkouts/readthedocs.org/user_builds/jax/envs/latest/lib/python3.10/site-packages/IPython/core/interactiveshell.py': True}), lowering_parameters=LoweringParameters(override_lowering_rules=None, global_constant_computation=False, for_export=False)), name_stack=NameStack(stack=(Scope(name='jit(square_add_prim)'), Scope(name='jit(main)'), Transform(name='vmap'))), primitive=multiply_add, avals_in=[ShapedArray(float32[2]), ShapedArray(float32[2]), ShapedArray(float32[2])], avals_out=[ShapedArray(float32[2])], tokens_in=<jax._src.interpreters.mlir.TokenSet object at 0x7f0afc69e860>, tokens_out=None, axis_size_env=None, dim_var_values=[], compute_type=None, platforms=None), Value(<block argument> of type 'tensor<2xf32>' at index: 0), Value(<block argument> of type 'tensor<2xf32>' at index: 0), Value(<block argument> of type 'tensor<2xf32>' at index: 1))\n|<- multiply_add_lowering = [<jaxlib.mlir._mlir_libs._mlir.ir.OpResult object at 0x7f0afd8920f0>] \n```"]