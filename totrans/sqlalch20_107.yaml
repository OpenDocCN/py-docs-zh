- en: Dialects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sqlalchemy.org/en/20/dialects/index.html](https://docs.sqlalchemy.org/en/20/dialects/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The **dialect** is the system SQLAlchemy uses to communicate with various types
    of [DBAPI](../glossary.html#term-DBAPI) implementations and databases. The sections
    that follow contain reference documentation and notes specific to the usage of
    each backend, as well as notes for the various DBAPIs.
  prefs: []
  type: TYPE_NORMAL
- en: All dialects require that an appropriate DBAPI driver is installed.
  prefs: []
  type: TYPE_NORMAL
- en: '## Included Dialects'
  prefs: []
  type: TYPE_NORMAL
- en: '[PostgreSQL](postgresql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MySQL and MariaDB](mysql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQLite](sqlite.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Oracle](oracle.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Microsoft SQL Server](mssql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support Levels for Included Dialects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following table summarizes the support level for each included dialect.
  prefs: []
  type: TYPE_NORMAL
- en: '**Supported database versions for included dialects**'
  prefs: []
  type: TYPE_NORMAL
- en: '| Database | [Fully tested in CI](#term-Fully-tested-in-CI) | [Normal support](#term-Normal-support)
    | [Best effort](#term-Best-effort) |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Microsoft SQL Server** | 2017 | 2012+ | 2005+ |'
  prefs: []
  type: TYPE_TB
- en: '| **MySQL / MariaDB** | 5.6, 5.7, 8.0 / 10.8, 10.9 | 5.6+ / 10+ | 5.0.2+ /
    5.0.2+ |'
  prefs: []
  type: TYPE_TB
- en: '| **Oracle** | 18c | 11+ | 9+ |'
  prefs: []
  type: TYPE_TB
- en: '| **PostgreSQL** | 12, 13, 14, 15 | 9.6+ | 9+ |'
  prefs: []
  type: TYPE_TB
- en: '| **SQLite** | 3.36.0 | 3.12+ | 3.7.16+ |'
  prefs: []
  type: TYPE_TB
- en: Support Definitions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fully tested in CI
  prefs: []
  type: TYPE_NORMAL
- en: '**Fully tested in CI** indicates a version that is tested in the sqlalchemy
    CI system and passes all the tests in the test suite.'
  prefs: []
  type: TYPE_NORMAL
- en: Normal support
  prefs: []
  type: TYPE_NORMAL
- en: '**Normal support** indicates that most features should work, but not all versions
    are tested in the ci configuration so there may be some not supported edge cases.
    We will try to fix issues that affect these versions.'
  prefs: []
  type: TYPE_NORMAL
- en: Best effort
  prefs: []
  type: TYPE_NORMAL
- en: '**Best effort** indicates that we try to support basic features on them, but
    most likely there will be unsupported features or errors in some use cases. Pull
    requests with associated issues may be accepted to continue supporting older versions,
    which are reviewed on a case-by-case basis.  ## External Dialects'
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently maintained external dialect projects for SQLAlchemy include:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Database | Dialect |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Actian Data Platform, Vector, Actian X, Ingres | [sqlalchemy-ingres](https://github.com/ActianCorp/sqlalchemy-ingres)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Amazon Athena | [pyathena](https://github.com/laughingman7743/PyAthena/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Amazon Redshift (via psycopg2) | [sqlalchemy-redshift](https://pypi.org/project/sqlalchemy-redshift)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Drill | [sqlalchemy-drill](https://github.com/JohnOmernik/sqlalchemy-drill)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Druid | [pydruid](https://github.com/druid-io/pydruid) |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Hive and Presto | [PyHive](https://github.com/dropbox/PyHive#sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Solr | [sqlalchemy-solr](https://github.com/aadel/sqlalchemy-solr)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CockroachDB | [sqlalchemy-cockroachdb](https://github.com/cockroachdb/sqlalchemy-cockroachdb)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CrateDB | [crate-python](https://github.com/crate/crate-python) |'
  prefs: []
  type: TYPE_TB
- en: '| EXASolution | [sqlalchemy_exasol](https://github.com/blue-yonder/sqlalchemy_exasol)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Elasticsearch (readonly) | [elasticsearch-dbapi](https://github.com/preset-io/elasticsearch-dbapi/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Firebird | [sqlalchemy-firebird](https://github.com/pauldex/sqlalchemy-firebird)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Firebolt | [firebolt-sqlalchemy](https://pypi.org/project/firebolt-sqlalchemy/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Google BigQuery | [pybigquery](https://github.com/mxmzdlv/pybigquery/) |'
  prefs: []
  type: TYPE_TB
- en: '| Google Sheets | [gsheets](https://github.com/betodealmeida/gsheets-db-api)
    |'
  prefs: []
  type: TYPE_TB
- en: '| IBM DB2 and Informix | [ibm-db-sa](https://pypi.org/project/ibm-db-sa/) |'
  prefs: []
  type: TYPE_TB
- en: '| IBM Netezza Performance Server [[1]](#id5) | [nzalchemy](https://pypi.org/project/nzalchemy/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Impala | [impyla](https://pypi.org/project/impyla/) |'
  prefs: []
  type: TYPE_TB
- en: '| Microsoft Access (via pyodbc) | [sqlalchemy-access](https://pypi.org/project/sqlalchemy-access/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Microsoft SQL Server (via python-tds) | [sqlalchemy-tds](https://github.com/m32/sqlalchemy-tds)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Microsoft SQL Server (via turbodbc) | [sqlalchemy-turbodbc](https://pypi.org/project/sqlalchemy-turbodbc/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| MonetDB [[1]](#id5) | [sqlalchemy-monetdb](https://github.com/gijzelaerr/sqlalchemy-monetdb)
    |'
  prefs: []
  type: TYPE_TB
- en: '| OpenGauss | [openGauss-sqlalchemy](https://gitee.com/opengauss/openGauss-sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Rockset | [rockset-sqlalchemy](https://pypi.org/project/rockset-sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SAP ASE (fork of former Sybase dialect) | [sqlalchemy-sybase](https://pypi.org/project/sqlalchemy-sybase/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SAP Hana [[1]](#id5) | [sqlalchemy-hana](https://github.com/SAP/sqlalchemy-hana)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SAP Sybase SQL Anywhere | [sqlalchemy-sqlany](https://github.com/sqlanywhere/sqlalchemy-sqlany)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Snowflake | [snowflake-sqlalchemy](https://github.com/snowflakedb/snowflake-sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Teradata Vantage | [teradatasqlalchemy](https://pypi.org/project/teradatasqlalchemy/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| YugabyteDB | [sqlalchemy-yugabytedb](https://pypi.org/project/sqlalchemy-yugabytedb/)
    |  ## Included Dialects'
  prefs: []
  type: TYPE_NORMAL
- en: '[PostgreSQL](postgresql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[MySQL and MariaDB](mysql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQLite](sqlite.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Oracle](oracle.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Microsoft SQL Server](mssql.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Support Levels for Included Dialects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following table summarizes the support level for each included dialect.
  prefs: []
  type: TYPE_NORMAL
- en: '**Supported database versions for included dialects**'
  prefs: []
  type: TYPE_NORMAL
- en: '| Database | [Fully tested in CI](#term-Fully-tested-in-CI) | [Normal support](#term-Normal-support)
    | [Best effort](#term-Best-effort) |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Microsoft SQL Server** | 2017 | 2012+ | 2005+ |'
  prefs: []
  type: TYPE_TB
- en: '| **MySQL / MariaDB** | 5.6, 5.7, 8.0 / 10.8, 10.9 | 5.6+ / 10+ | 5.0.2+ /
    5.0.2+ |'
  prefs: []
  type: TYPE_TB
- en: '| **Oracle** | 18c | 11+ | 9+ |'
  prefs: []
  type: TYPE_TB
- en: '| **PostgreSQL** | 12, 13, 14, 15 | 9.6+ | 9+ |'
  prefs: []
  type: TYPE_TB
- en: '| **SQLite** | 3.36.0 | 3.12+ | 3.7.16+ |'
  prefs: []
  type: TYPE_TB
- en: Support Definitions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fully tested in CI
  prefs: []
  type: TYPE_NORMAL
- en: '**Fully tested in CI** indicates a version that is tested in the sqlalchemy
    CI system and passes all the tests in the test suite.'
  prefs: []
  type: TYPE_NORMAL
- en: Normal support
  prefs: []
  type: TYPE_NORMAL
- en: '**Normal support** indicates that most features should work, but not all versions
    are tested in the ci configuration so there may be some not supported edge cases.
    We will try to fix issues that affect these versions.'
  prefs: []
  type: TYPE_NORMAL
- en: Best effort
  prefs: []
  type: TYPE_NORMAL
- en: '**Best effort** indicates that we try to support basic features on them, but
    most likely there will be unsupported features or errors in some use cases. Pull
    requests with associated issues may be accepted to continue supporting older versions,
    which are reviewed on a case-by-case basis.'
  prefs: []
  type: TYPE_NORMAL
- en: Support Levels for Included Dialects
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The following table summarizes the support level for each included dialect.
  prefs: []
  type: TYPE_NORMAL
- en: '**Supported database versions for included dialects**'
  prefs: []
  type: TYPE_NORMAL
- en: '| Database | [Fully tested in CI](#term-Fully-tested-in-CI) | [Normal support](#term-Normal-support)
    | [Best effort](#term-Best-effort) |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| **Microsoft SQL Server** | 2017 | 2012+ | 2005+ |'
  prefs: []
  type: TYPE_TB
- en: '| **MySQL / MariaDB** | 5.6, 5.7, 8.0 / 10.8, 10.9 | 5.6+ / 10+ | 5.0.2+ /
    5.0.2+ |'
  prefs: []
  type: TYPE_TB
- en: '| **Oracle** | 18c | 11+ | 9+ |'
  prefs: []
  type: TYPE_TB
- en: '| **PostgreSQL** | 12, 13, 14, 15 | 9.6+ | 9+ |'
  prefs: []
  type: TYPE_TB
- en: '| **SQLite** | 3.36.0 | 3.12+ | 3.7.16+ |'
  prefs: []
  type: TYPE_TB
- en: Support Definitions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Fully tested in CI
  prefs: []
  type: TYPE_NORMAL
- en: '**Fully tested in CI** indicates a version that is tested in the sqlalchemy
    CI system and passes all the tests in the test suite.'
  prefs: []
  type: TYPE_NORMAL
- en: Normal support
  prefs: []
  type: TYPE_NORMAL
- en: '**Normal support** indicates that most features should work, but not all versions
    are tested in the ci configuration so there may be some not supported edge cases.
    We will try to fix issues that affect these versions.'
  prefs: []
  type: TYPE_NORMAL
- en: Best effort
  prefs: []
  type: TYPE_NORMAL
- en: '**Best effort** indicates that we try to support basic features on them, but
    most likely there will be unsupported features or errors in some use cases. Pull
    requests with associated issues may be accepted to continue supporting older versions,
    which are reviewed on a case-by-case basis.'
  prefs: []
  type: TYPE_NORMAL
- en: '## External Dialects'
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently maintained external dialect projects for SQLAlchemy include:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Database | Dialect |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Actian Data Platform, Vector, Actian X, Ingres | [sqlalchemy-ingres](https://github.com/ActianCorp/sqlalchemy-ingres)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Amazon Athena | [pyathena](https://github.com/laughingman7743/PyAthena/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Amazon Redshift (via psycopg2) | [sqlalchemy-redshift](https://pypi.org/project/sqlalchemy-redshift)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Drill | [sqlalchemy-drill](https://github.com/JohnOmernik/sqlalchemy-drill)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Druid | [pydruid](https://github.com/druid-io/pydruid) |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Hive and Presto | [PyHive](https://github.com/dropbox/PyHive#sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Solr | [sqlalchemy-solr](https://github.com/aadel/sqlalchemy-solr)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CockroachDB | [sqlalchemy-cockroachdb](https://github.com/cockroachdb/sqlalchemy-cockroachdb)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CrateDB | [crate-python](https://github.com/crate/crate-python) |'
  prefs: []
  type: TYPE_TB
- en: '| EXASolution | [sqlalchemy_exasol](https://github.com/blue-yonder/sqlalchemy_exasol)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Elasticsearch (readonly) | [elasticsearch-dbapi](https://github.com/preset-io/elasticsearch-dbapi/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Firebird | [sqlalchemy-firebird](https://github.com/pauldex/sqlalchemy-firebird)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Firebolt | [firebolt-sqlalchemy](https://pypi.org/project/firebolt-sqlalchemy/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Google BigQuery | [pybigquery](https://github.com/mxmzdlv/pybigquery/) |'
  prefs: []
  type: TYPE_TB
- en: '| Google Sheets | [gsheets](https://github.com/betodealmeida/gsheets-db-api)
    |'
  prefs: []
  type: TYPE_TB
- en: '| IBM DB2 and Informix | [ibm-db-sa](https://pypi.org/project/ibm-db-sa/) |'
  prefs: []
  type: TYPE_TB
- en: '| IBM Netezza Performance Server [[1]](#id5) | [nzalchemy](https://pypi.org/project/nzalchemy/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Impala | [impyla](https://pypi.org/project/impyla/) |'
  prefs: []
  type: TYPE_TB
- en: '| Microsoft Access (via pyodbc) | [sqlalchemy-access](https://pypi.org/project/sqlalchemy-access/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Microsoft SQL Server (via python-tds) | [sqlalchemy-tds](https://github.com/m32/sqlalchemy-tds)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Microsoft SQL Server (via turbodbc) | [sqlalchemy-turbodbc](https://pypi.org/project/sqlalchemy-turbodbc/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| MonetDB [[1]](#id5) | [sqlalchemy-monetdb](https://github.com/gijzelaerr/sqlalchemy-monetdb)
    |'
  prefs: []
  type: TYPE_TB
- en: '| OpenGauss | [openGauss-sqlalchemy](https://gitee.com/opengauss/openGauss-sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Rockset | [rockset-sqlalchemy](https://pypi.org/project/rockset-sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SAP ASE (fork of former Sybase dialect) | [sqlalchemy-sybase](https://pypi.org/project/sqlalchemy-sybase/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SAP Hana [[1]](#id5) | [sqlalchemy-hana](https://github.com/SAP/sqlalchemy-hana)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SAP Sybase SQL Anywhere | [sqlalchemy-sqlany](https://github.com/sqlanywhere/sqlalchemy-sqlany)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Snowflake | [snowflake-sqlalchemy](https://github.com/snowflakedb/snowflake-sqlalchemy)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Teradata Vantage | [teradatasqlalchemy](https://pypi.org/project/teradatasqlalchemy/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| YugabyteDB | [sqlalchemy-yugabytedb](https://pypi.org/project/sqlalchemy-yugabytedb/)
    |'
  prefs: []
  type: TYPE_TB
