- en: Matrix
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/matrix.html](https://pymupdf.readthedocs.io/en/latest/matrix.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Matrix is a row-major 3x3 matrix used by image transformations in MuPDF (which
    complies with the respective concepts laid down in the [Adobe PDF References](app3.html#adobemanual)).
    With matrices you can manipulate the rendered image of a page in a variety of
    ways: (parts of) the page can be rotated, zoomed, flipped, sheared and shifted
    by setting some or all of just six float values.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Since all points or pixels live in a two-dimensional space, one column vector
    of that matrix is a constant unit vector, and only the remaining six elements
    are used for manipulations. These six elements are usually represented by *[a,
    b, c, d, e, f]*. Here is how they are positioned in the matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '![_images/img-matrix.png](../Images/9927e8afe8de0fd9c74cdda5c1b6edd4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Please note:'
  prefs: []
  type: TYPE_NORMAL
- en: the below methods are just convenience functions – everything they do, can also
    be achieved by directly manipulating the six numerical values
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: all manipulations can be combined – you can construct a matrix that rotates
    **and** shears **and** scales **and** shifts, etc. in one go. If you however choose
    to do this, do have a look at the **remarks** further down or at the [Adobe PDF
    References](app3.html#adobemanual).
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Method / Attribute** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.prerotate()`](#Matrix.prerotate "Matrix.prerotate") | perform a
    rotation |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.prescale()`](#Matrix.prescale "Matrix.prescale") | perform a scaling
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.preshear()`](#Matrix.preshear "Matrix.preshear") | perform a shearing
    (skewing) |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.pretranslate()`](#Matrix.pretranslate "Matrix.pretranslate") | perform
    a translation (shifting) |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.concat()`](#Matrix.concat "Matrix.concat") | perform a matrix multiplication
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.invert()`](#Matrix.invert "Matrix.invert") | calculate the inverted
    matrix |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.norm()`](#Matrix.norm "Matrix.norm") | the Euclidean norm |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.a`](#Matrix.a "Matrix.a") | zoom factor X direction |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.b`](#Matrix.b "Matrix.b") | shearing effect Y direction |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.c`](#Matrix.c "Matrix.c") | shearing effect X direction |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.d`](#Matrix.d "Matrix.d") | zoom factor Y direction |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.e`](#Matrix.e "Matrix.e") | horizontal shift |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.f`](#Matrix.f "Matrix.f") | vertical shift |'
  prefs: []
  type: TYPE_TB
- en: '| [`Matrix.is_rectilinear`](#Matrix.is_rectilinear "Matrix.is_rectilinear")
    | true if rect corners will remain rect corners |'
  prefs: []
  type: TYPE_TB
- en: '**Class API**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Overloaded constructors.
  prefs: []
  type: TYPE_NORMAL
- en: Without parameters, the zero matrix *Matrix(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)* will
    be created.
  prefs: []
  type: TYPE_NORMAL
- en: '*zoom-** and *shear-** specify zoom or shear values (float) and create a zoom
    or shear matrix, respectively.'
  prefs: []
  type: TYPE_NORMAL
- en: For “matrix” a **new copy** of another matrix will be made.
  prefs: []
  type: TYPE_NORMAL
- en: Float value “degree” specifies the creation of a rotation matrix which rotates
    anti-clockwise.
  prefs: []
  type: TYPE_NORMAL
- en: A “sequence” must be any Python sequence object with exactly 6 float entries
    (see [Using Python Sequences as Arguments in PyMuPDF](app3.html#sequencetypes)).
  prefs: []
  type: TYPE_NORMAL
- en: '*pymupdf.Matrix(1, 1)* and *pymupdf.Matrix(pymupdf.Identity)* create modifiable
    versions of the [Identity](identity.html#identity) matrix, which looks like *[1,
    0, 0, 1, 0, 0]*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return the Euclidean norm of the matrix as a vector.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Modify the matrix to perform a counter-clockwise rotation for positive *deg*
    degrees, else clockwise. The matrix elements of an identity matrix will change
    in the following way:'
  prefs: []
  type: TYPE_NORMAL
- en: '*[1, 0, 0, 1, 0, 0] -> [cos(deg), sin(deg), -sin(deg), cos(deg), 0, 0]*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**deg** (*float*) – The rotation angle in degrees (use conventional notation
    based on Pi = 180 degrees).'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Modify the matrix to scale by the zoom factors sx and sy. Has effects on attributes
    *a* thru *d* only: *[a, b, c, d, e, f] -> [a*sx, b*sx, c*sy, d*sy, e, f]*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sx** (*float*) – Zoom factor in X direction. For the effect see description
    of attribute *a*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sy** (*float*) – Zoom factor in Y direction. For the effect see description
    of attribute *d*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Modify the matrix to perform a shearing, i.e. transformation of rectangles
    into parallelograms (rhomboids). Has effects on attributes *a* thru *d* only:
    *[a, b, c, d, e, f] -> [c*sy, d*sy, a*sx, b*sx, e, f]*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**sx** (*float*) – Shearing effect in X direction. See attribute *c*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**sy** (*float*) – Shearing effect in Y direction. See attribute *b*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Modify the matrix to perform a shifting / translation operation along the x
    and / or y axis. Has effects on attributes *e* and *f* only: *[a, b, c, d, e,
    f] -> [a, b, c, d, tx*a + ty*c, tx*b + ty*d]*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**tx** (*float*) – Translation effect in X direction. See attribute *e*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ty** (*float*) – Translation effect in Y direction. See attribute *f*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the matrix product *m1 * m2* and store the result in the current matrix.
    Any of *m1* or *m2* may be the current matrix. Be aware that matrix multiplication
    is not commutative. So the sequence of *m1*, *m2* is important.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**m1** ([Matrix](#matrix)) – First (left) matrix.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**m2** ([Matrix](#matrix)) – Second (right) matrix.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Calculate the matrix inverse of *m* and store the result in the current matrix.
    Returns *1* if *m* is not invertible (“degenerate”). In this case the current
    matrix **will not change**. Returns *0* if *m* is invertible, and the current
    matrix is replaced with the inverted *m*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**m** ([Matrix](#matrix)) – Matrix to be inverted. If not provided, the current
    matrix will be used.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: int
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Scaling in X-direction **(width)**. For example, a value of 0.5 performs a shrink
    of the **width** by a factor of 2\. If a < 0, a left-right flip will (additionally)
    occur.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: float
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Causes a shearing effect: each `Point(x, y)` will become `Point(x, y - b*x)`.
    Therefore, horizontal lines will be “tilt”.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: float
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Causes a shearing effect: each `Point(x, y)` will become `Point(x - c*y, y)`.
    Therefore, vertical lines will be “tilt”.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: float
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Scaling in Y-direction **(height)**. For example, a value of 1.5 performs a
    stretch of the **height** by 50%. If d < 0, an up-down flip will (additionally)
    occur.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: float
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Causes a horizontal shift effect: Each *Point(x, y)* will become *Point(x +
    e, y)*. Positive (negative) values of *e* will shift right (left).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: float
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Causes a vertical shift effect: Each *Point(x, y)* will become *Point(x, y
    - f)*. Positive (negative) values of *f* will shift down (up).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: float
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Rectilinear means that no shearing is present and that any rotations are integer
    multiples of 90 degrees. Usually this is used to confirm that (axis-aligned) rectangles
    before the transformation are still axis-aligned rectangles afterwards.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type:'
  prefs: []
  type: TYPE_NORMAL
- en: bool
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This class adheres to the Python sequence protocol, so components can be accessed
    via their index, too. Also refer to [Using Python Sequences as Arguments in PyMuPDF](app3.html#sequencetypes).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Matrices can be used with arithmetic operators almost like ordinary numbers:
    they can be added, subtracted, multiplied or divided – see chapter [Operator Algebra
    for Geometry Objects](algebra.html#algebra).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matrix multiplication is **not commutative** – changing the sequence of the
    multiplicands will change the result in general. So it can quickly become unclear
    which result a transformation will yield.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are examples that illustrate some of the achievable effects. All pictures
    show some text, inserted under control of some matrix and relative to a fixed
    reference point (the red dot).
  prefs: []
  type: TYPE_NORMAL
- en: The [Identity](identity.html#identity) matrix performs no operation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-0.png](../Images/253d476988935972be104cb56528c0e0.png)](_images/img-matrix-0.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The scaling matrix `Matrix(2, 0.5)` stretches by a factor of 2 in horizontal,
    and shrinks by factor 0.5 in vertical direction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-1.png](../Images/32d70d8a89e51afb112488f0f50a572e.png)](_images/img-matrix-1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Attributes [`Matrix.e`](#Matrix.e "Matrix.e") and [`Matrix.f`](#Matrix.f "Matrix.f")
    shift horizontally and, respectively vertically. In the following 10 to the right
    and 20 down.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-2.png](../Images/4ec4b7d50e00537eb064fce9458b7ffd.png)](_images/img-matrix-2.png)'
  prefs: []
  type: TYPE_NORMAL
- en: A negative [`Matrix.a`](#Matrix.a "Matrix.a") causes a left-right flip.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-3.png](../Images/bbbfd62b2b0b4986d092b82c5f24d041.png)](_images/img-matrix-3.png)'
  prefs: []
  type: TYPE_NORMAL
- en: A negative [`Matrix.d`](#Matrix.d "Matrix.d") causes an up-down flip.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-4.png](../Images/3dd76578fc69bd371d0443b4b656e6ef.png)](_images/img-matrix-4.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Attribute [`Matrix.b`](#Matrix.b "Matrix.b") tilts upwards / downwards along
    the x-axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-5.png](../Images/a0924510c3942516603003f8728078e9.png)](_images/img-matrix-5.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Attribute [`Matrix.c`](#Matrix.c "Matrix.c") tilts left / right along the y-axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-6.png](../Images/eaa22b4ee4603847e8b9bd80d154f95f.png)](_images/img-matrix-6.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix `Matrix(beta)` performs counterclockwise rotations for positive angles
    `beta`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-7.png](../Images/230e607b1bc7c98f00d8ebe390295e80.png)](_images/img-matrix-7.png)Do
    you have any feedback on this page?'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are examples that illustrate some of the achievable effects. All pictures
    show some text, inserted under control of some matrix and relative to a fixed
    reference point (the red dot).
  prefs: []
  type: TYPE_NORMAL
- en: The [Identity](identity.html#identity) matrix performs no operation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-0.png](../Images/253d476988935972be104cb56528c0e0.png)](_images/img-matrix-0.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The scaling matrix `Matrix(2, 0.5)` stretches by a factor of 2 in horizontal,
    and shrinks by factor 0.5 in vertical direction.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-1.png](../Images/32d70d8a89e51afb112488f0f50a572e.png)](_images/img-matrix-1.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Attributes [`Matrix.e`](#Matrix.e "Matrix.e") and [`Matrix.f`](#Matrix.f "Matrix.f")
    shift horizontally and, respectively vertically. In the following 10 to the right
    and 20 down.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-2.png](../Images/4ec4b7d50e00537eb064fce9458b7ffd.png)](_images/img-matrix-2.png)'
  prefs: []
  type: TYPE_NORMAL
- en: A negative [`Matrix.a`](#Matrix.a "Matrix.a") causes a left-right flip.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-3.png](../Images/bbbfd62b2b0b4986d092b82c5f24d041.png)](_images/img-matrix-3.png)'
  prefs: []
  type: TYPE_NORMAL
- en: A negative [`Matrix.d`](#Matrix.d "Matrix.d") causes an up-down flip.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-4.png](../Images/3dd76578fc69bd371d0443b4b656e6ef.png)](_images/img-matrix-4.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Attribute [`Matrix.b`](#Matrix.b "Matrix.b") tilts upwards / downwards along
    the x-axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-5.png](../Images/a0924510c3942516603003f8728078e9.png)](_images/img-matrix-5.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Attribute [`Matrix.c`](#Matrix.c "Matrix.c") tilts left / right along the y-axis.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-6.png](../Images/eaa22b4ee4603847e8b9bd80d154f95f.png)](_images/img-matrix-6.png)'
  prefs: []
  type: TYPE_NORMAL
- en: Matrix `Matrix(beta)` performs counterclockwise rotations for positive angles
    `beta`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![_images/img-matrix-7.png](../Images/230e607b1bc7c98f00d8ebe390295e80.png)](_images/img-matrix-7.png)Do
    you have any feedback on this page?'
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
