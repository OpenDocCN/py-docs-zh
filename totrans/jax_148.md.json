["```py\nclass jax.experimental.sparse.BCOO(args, *, shape, indices_sorted=False, unique_indices=False)\n```", "```py\ndata\n```", "```py\nindices\n```", "```py\n>>> M = jnp.array([[0., 2., 0.], [1., 0., 4.]])\n>>> M_sp = BCOO.fromdense(M)\n>>> M_sp\nBCOO(float32[2, 3], nse=3) \n```", "```py\n>>> M_sp.data\nArray([2., 1., 4.], dtype=float32)\n>>> M_sp.indices\nArray([[0, 1],\n [1, 0],\n [1, 2]], dtype=int32) \n```", "```py\n>>> M_sp.todense()\nArray([[0., 2., 0.],\n [1., 0., 4.]], dtype=float32) \n```", "```py\n>>> data = jnp.array([1., 3., 5.])\n>>> indices = jnp.array([[0, 0],\n...                      [1, 1],\n...                      [2, 2]])\n>>> mat = BCOO((data, indices), shape=(3, 3))\n>>> mat\nBCOO(float32[3, 3], nse=3)\n>>> mat.todense()\nArray([[1., 0., 0.],\n [0., 3., 0.],\n [0., 0., 5.]], dtype=float32) \n```", "```py\n__init__(args, *, shape, indices_sorted=False, unique_indices=False)\n```"]