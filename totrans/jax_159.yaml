- en: jax.experimental.sparse.bcoo_update_layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_update_layout.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_update_layout.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Update the storage layout (i.e. n_batch & n_dense) of a BCOO matrix.
  prefs: []
  type: TYPE_NORMAL
- en: In many cases this can be done without introducing undue storage overhead. However,
    increasing `mat.n_batch` or `mat.n_dense` will lead to very inefficient storage,
    with many explicitly-stored zeros, unless the new batch or dense dimensions have
    size 0 or 1\. In such cases, `bcoo_update_layout` will raise a `SparseEfficiencyError`.
    This can be silenced by specifying the `on_inefficient` argument.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mat** (*BCOO*) – BCOO array'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**n_batch** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)") *|* *None*) – optional(int) the number of batch dimensions in
    the output matrix. If None, then n_batch = mat.n_batch.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**n_dense** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)") *|* *None*) – optional(int) the number of dense dimensions in
    the output matrix. If None, then n_dense = mat.n_dense.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**on_inefficient** ([*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") *|* *None*) – optional(string), one of `[''error'', ''warn'',
    None]`. Specify the behavior in case of an inefficient reconfiguration. This is
    defined as a reconfiguration where the size of the resulting representation is
    much larger than the size of the input representation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: BCOO array
  prefs: []
  type: TYPE_NORMAL
- en: A BCOO array representing the same sparse array as the input, with the specified
    layout. `mat_out.todense()` will match `mat.todense()` up to appropriate precision.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: mat_out
  prefs: []
  type: TYPE_NORMAL
