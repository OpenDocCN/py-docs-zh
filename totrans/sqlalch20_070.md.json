["```py\nBase = declarative_base()\n\nclass Slide(Base):\n    __tablename__ = 'slide'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n\n    bullets = relationship(\"Bullet\", order_by=\"Bullet.position\")\n\nclass Bullet(Base):\n    __tablename__ = 'bullet'\n    id = Column(Integer, primary_key=True)\n    slide_id = Column(Integer, ForeignKey('slide.id'))\n    position = Column(Integer)\n    text = Column(String)\n```", "```py\nfrom sqlalchemy.ext.orderinglist import ordering_list\n\nBase = declarative_base()\n\nclass Slide(Base):\n    __tablename__ = 'slide'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n\n    bullets = relationship(\"Bullet\", order_by=\"Bullet.position\",\n                            collection_class=ordering_list('position'))\n\nclass Bullet(Base):\n    __tablename__ = 'bullet'\n    id = Column(Integer, primary_key=True)\n    slide_id = Column(Integer, ForeignKey('slide.id'))\n    position = Column(Integer)\n    text = Column(String)\n```", "```py\ns = Slide()\ns.bullets.append(Bullet())\ns.bullets.append(Bullet())\ns.bullets[1].position\n>>> 1\ns.bullets.insert(1, Bullet())\ns.bullets[2].position\n>>> 2\n```", "```py\nfunction sqlalchemy.ext.orderinglist.ordering_list(attr: str, count_from: int | None = None, ordering_func: Callable[[int, Sequence[_T]], int] | None = None, reorder_on_append: bool = False) \u2192 Callable[[], OrderingList]\n```", "```py\nfrom sqlalchemy.ext.orderinglist import ordering_list\n\nclass Slide(Base):\n    __tablename__ = 'slide'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n\n    bullets = relationship(\"Bullet\", order_by=\"Bullet.position\",\n                            collection_class=ordering_list('position'))\n```", "```py\nfunction sqlalchemy.ext.orderinglist.count_from_0(index, collection)\n```", "```py\nfunction sqlalchemy.ext.orderinglist.count_from_1(index, collection)\n```", "```py\nfunction sqlalchemy.ext.orderinglist.count_from_n_factory(start)\n```", "```py\nclass sqlalchemy.ext.orderinglist.OrderingList\n```", "```py\nmethod __init__(ordering_attr: str | None = None, ordering_func: Callable[[int, Sequence[_T]], int] | None = None, reorder_on_append: bool = False)\n```", "```py\nmethod append(entity)\n```", "```py\nmethod insert(index, entity)\n```", "```py\nmethod pop(index=-1)\n```", "```py\nmethod remove(entity)\n```", "```py\nmethod reorder() \u2192 None\n```", "```py\nfunction sqlalchemy.ext.orderinglist.ordering_list(attr: str, count_from: int | None = None, ordering_func: Callable[[int, Sequence[_T]], int] | None = None, reorder_on_append: bool = False) \u2192 Callable[[], OrderingList]\n```", "```py\nfrom sqlalchemy.ext.orderinglist import ordering_list\n\nclass Slide(Base):\n    __tablename__ = 'slide'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n\n    bullets = relationship(\"Bullet\", order_by=\"Bullet.position\",\n                            collection_class=ordering_list('position'))\n```", "```py\nfunction sqlalchemy.ext.orderinglist.count_from_0(index, collection)\n```", "```py\nfunction sqlalchemy.ext.orderinglist.count_from_1(index, collection)\n```", "```py\nfunction sqlalchemy.ext.orderinglist.count_from_n_factory(start)\n```", "```py\nclass sqlalchemy.ext.orderinglist.OrderingList\n```", "```py\nmethod __init__(ordering_attr: str | None = None, ordering_func: Callable[[int, Sequence[_T]], int] | None = None, reorder_on_append: bool = False)\n```", "```py\nmethod append(entity)\n```", "```py\nmethod insert(index, entity)\n```", "```py\nmethod pop(index=-1)\n```", "```py\nmethod remove(entity)\n```", "```py\nmethod reorder() \u2192 None\n```"]