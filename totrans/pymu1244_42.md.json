["```py\nclass Rect\n```", "```py\n__init__(self)\n```", "```py\n__init__(self, x0, y0, x1, y1)\n```", "```py\n__init__(self, top_left, bottom_right)\n```", "```py\n__init__(self, top_left, x1, y1)\n```", "```py\n__init__(self, x0, y0, bottom_right)\n```", "```py\n__init__(self, rect)\n```", "```py\n__init__(self, sequence)\n```", "```py\nround()\n```", "```py\n>>> pymupdf.Rect(0.5, -0.01, 123.88, 455.123456).round()\nIRect(0, -1, 124, 456) \n```", "```py\n>>> r = pymupdf.Rect(100, 100, 200, 100.001)\n>>> r.is_empty  # rect is NOT empty\nFalse\n>>> r.round()  # but its irect IS empty!\npymupdf.IRect(100, 100, 200, 100)\n>>> r.round().is_empty\nTrue \n```", "```py\ntransform(m)\n```", "```py\nintersect(r)\n```", "```py\ninclude_rect(r)\n```", "```py\ninclude_point(p)\n```", "```py\nget_area([unit])\n```", "```py\ncontains(x)\n```", "```py\nintersects(r)\n```", "```py\ntorect(rect)\n```", "```py\nmorph(fixpoint, matrix)\n```", "```py\nnorm()\n```", "```py\nnormalize()\n```", "```py\nirect\n```", "```py\ntop_left\n```", "```py\ntl\n```", "```py\ntop_right\n```", "```py\ntr\n```", "```py\nbottom_left\n```", "```py\nbl\n```", "```py\nbottom_right\n```", "```py\nbr\n```", "```py\nquad\n```", "```py\nwidth\n```", "```py\nheight\n```", "```py\nx0\n```", "```py\ny0\n```", "```py\nx1\n```", "```py\ny1\n```", "```py\nis_infinite\n```", "```py\nis_empty\n```", "```py\nis_valid\n```"]