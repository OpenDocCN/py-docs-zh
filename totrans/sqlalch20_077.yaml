- en: SQL Statements and Expressions API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sqlalchemy.org/en/20/core/expression_api.html](https://docs.sqlalchemy.org/en/20/core/expression_api.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This section presents the API reference for the SQL Expression Language. For
    an introduction, start with [Working with Data](../tutorial/data.html#tutorial-working-with-data)
    in the [SQLAlchemy Unified Tutorial](../tutorial/index.html#unified-tutorial).
  prefs: []
  type: TYPE_NORMAL
- en: '[Column Elements and Expressions](sqlelement.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Element Foundational Constructors](sqlelement.html#column-element-foundational-constructors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`and_()`](sqlelement.html#sqlalchemy.sql.expression.and_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`bindparam()`](sqlelement.html#sqlalchemy.sql.expression.bindparam)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`bitwise_not()`](sqlelement.html#sqlalchemy.sql.expression.bitwise_not)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`case()`](sqlelement.html#sqlalchemy.sql.expression.case)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cast()`](sqlelement.html#sqlalchemy.sql.expression.cast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`column()`](sqlelement.html#sqlalchemy.sql.expression.column)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`custom_op`](sqlelement.html#sqlalchemy.sql.expression.custom_op)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`distinct()`](sqlelement.html#sqlalchemy.sql.expression.distinct)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`extract()`](sqlelement.html#sqlalchemy.sql.expression.extract)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`false()`](sqlelement.html#sqlalchemy.sql.expression.false)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`func`](sqlelement.html#sqlalchemy.sql.expression.func)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`lambda_stmt()`](sqlelement.html#sqlalchemy.sql.expression.lambda_stmt)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`literal()`](sqlelement.html#sqlalchemy.sql.expression.literal)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`literal_column()`](sqlelement.html#sqlalchemy.sql.expression.literal_column)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`not_()`](sqlelement.html#sqlalchemy.sql.expression.not_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`null()`](sqlelement.html#sqlalchemy.sql.expression.null)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`or_()`](sqlelement.html#sqlalchemy.sql.expression.or_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`outparam()`](sqlelement.html#sqlalchemy.sql.expression.outparam)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`text()`](sqlelement.html#sqlalchemy.sql.expression.text)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`true()`](sqlelement.html#sqlalchemy.sql.expression.true)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`try_cast()`](sqlelement.html#sqlalchemy.sql.expression.try_cast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`tuple_()`](sqlelement.html#sqlalchemy.sql.expression.tuple_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`type_coerce()`](sqlelement.html#sqlalchemy.sql.expression.type_coerce)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`quoted_name`](sqlelement.html#sqlalchemy.sql.expression.quoted_name)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Element Modifier Constructors](sqlelement.html#column-element-modifier-constructors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`all_()`](sqlelement.html#sqlalchemy.sql.expression.all_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`any_()`](sqlelement.html#sqlalchemy.sql.expression.any_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`asc()`](sqlelement.html#sqlalchemy.sql.expression.asc)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`between()`](sqlelement.html#sqlalchemy.sql.expression.between)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`collate()`](sqlelement.html#sqlalchemy.sql.expression.collate)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`desc()`](sqlelement.html#sqlalchemy.sql.expression.desc)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`funcfilter()`](sqlelement.html#sqlalchemy.sql.expression.funcfilter)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`label()`](sqlelement.html#sqlalchemy.sql.expression.label)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`nulls_first()`](sqlelement.html#sqlalchemy.sql.expression.nulls_first)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`nullsfirst()`](sqlelement.html#sqlalchemy.sql.expression.nullsfirst)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`nulls_last()`](sqlelement.html#sqlalchemy.sql.expression.nulls_last)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`nullslast()`](sqlelement.html#sqlalchemy.sql.expression.nullslast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`over()`](sqlelement.html#sqlalchemy.sql.expression.over)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`within_group()`](sqlelement.html#sqlalchemy.sql.expression.within_group)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Element Class Documentation](sqlelement.html#column-element-class-documentation)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BinaryExpression`](sqlelement.html#sqlalchemy.sql.expression.BinaryExpression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BindParameter`](sqlelement.html#sqlalchemy.sql.expression.BindParameter)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Case`](sqlelement.html#sqlalchemy.sql.expression.Case)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Cast`](sqlelement.html#sqlalchemy.sql.expression.Cast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseList`](sqlelement.html#sqlalchemy.sql.expression.ClauseList)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ColumnClause`](sqlelement.html#sqlalchemy.sql.expression.ColumnClause)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ColumnCollection`](sqlelement.html#sqlalchemy.sql.expression.ColumnCollection)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ColumnElement`](sqlelement.html#sqlalchemy.sql.expression.ColumnElement)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ColumnExpressionArgument`](sqlelement.html#sqlalchemy.sql.expression.ColumnExpressionArgument)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ColumnOperators`](sqlelement.html#sqlalchemy.sql.expression.ColumnOperators)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Extract`](sqlelement.html#sqlalchemy.sql.expression.Extract)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`False_`](sqlelement.html#sqlalchemy.sql.expression.False_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`FunctionFilter`](sqlelement.html#sqlalchemy.sql.expression.FunctionFilter)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Label`](sqlelement.html#sqlalchemy.sql.expression.Label)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Null`](sqlelement.html#sqlalchemy.sql.expression.Null)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Operators`](sqlelement.html#sqlalchemy.sql.expression.Operators)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Over`](sqlelement.html#sqlalchemy.sql.expression.Over)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SQLColumnExpression`](sqlelement.html#sqlalchemy.sql.expression.SQLColumnExpression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TextClause`](sqlelement.html#sqlalchemy.sql.expression.TextClause)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TryCast`](sqlelement.html#sqlalchemy.sql.expression.TryCast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Tuple`](sqlelement.html#sqlalchemy.sql.expression.Tuple)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`WithinGroup`](sqlelement.html#sqlalchemy.sql.expression.WithinGroup)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`WrapsColumnExpression`](sqlelement.html#sqlalchemy.sql.elements.WrapsColumnExpression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`True_`](sqlelement.html#sqlalchemy.sql.expression.True_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeCoerce`](sqlelement.html#sqlalchemy.sql.expression.TypeCoerce)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`UnaryExpression`](sqlelement.html#sqlalchemy.sql.expression.UnaryExpression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Element Typing Utilities](sqlelement.html#column-element-typing-utilities)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`NotNullable()`](sqlelement.html#sqlalchemy.NotNullable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Nullable()`](sqlelement.html#sqlalchemy.Nullable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Operator Reference](operators.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Comparison Operators](operators.html#comparison-operators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[IN Comparisons](operators.html#in-comparisons)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[IN against a list of values](operators.html#in-against-a-list-of-values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Empty IN Expressions](operators.html#empty-in-expressions)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[NOT IN](operators.html#not-in)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tuple IN Expressions](operators.html#tuple-in-expressions)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Subquery IN](operators.html#subquery-in)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Identity Comparisons](operators.html#identity-comparisons)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[String Comparisons](operators.html#string-comparisons)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[String Containment](operators.html#string-containment)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[String matching](operators.html#string-matching)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[String Alteration](operators.html#string-alteration)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Arithmetic Operators](operators.html#arithmetic-operators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bitwise Operators](operators.html#bitwise-operators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Conjunctions and Negations](operators.html#using-conjunctions-and-negations)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Conjunction Operators](operators.html#conjunction-operators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SELECT and Related Constructs](selectable.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selectable Foundational Constructors](selectable.html#selectable-foundational-constructors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`except_()`](selectable.html#sqlalchemy.sql.expression.except_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`except_all()`](selectable.html#sqlalchemy.sql.expression.except_all)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`exists()`](selectable.html#sqlalchemy.sql.expression.exists)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`intersect()`](selectable.html#sqlalchemy.sql.expression.intersect)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`intersect_all()`](selectable.html#sqlalchemy.sql.expression.intersect_all)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`select()`](selectable.html#sqlalchemy.sql.expression.select)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`table()`](selectable.html#sqlalchemy.sql.expression.table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`union()`](selectable.html#sqlalchemy.sql.expression.union)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`union_all()`](selectable.html#sqlalchemy.sql.expression.union_all)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`values()`](selectable.html#sqlalchemy.sql.expression.values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selectable Modifier Constructors](selectable.html#selectable-modifier-constructors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`alias()`](selectable.html#sqlalchemy.sql.expression.alias)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cte()`](selectable.html#sqlalchemy.sql.expression.cte)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`join()`](selectable.html#sqlalchemy.sql.expression.join)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`lateral()`](selectable.html#sqlalchemy.sql.expression.lateral)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`outerjoin()`](selectable.html#sqlalchemy.sql.expression.outerjoin)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`tablesample()`](selectable.html#sqlalchemy.sql.expression.tablesample)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selectable Class Documentation](selectable.html#selectable-class-documentation)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Alias`](selectable.html#sqlalchemy.sql.expression.Alias)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`AliasedReturnsRows`](selectable.html#sqlalchemy.sql.expression.AliasedReturnsRows)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CompoundSelect`](selectable.html#sqlalchemy.sql.expression.CompoundSelect)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CTE`](selectable.html#sqlalchemy.sql.expression.CTE)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Executable`](selectable.html#sqlalchemy.sql.expression.Executable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Exists`](selectable.html#sqlalchemy.sql.expression.Exists)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`FromClause`](selectable.html#sqlalchemy.sql.expression.FromClause)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`GenerativeSelect`](selectable.html#sqlalchemy.sql.expression.GenerativeSelect)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HasCTE`](selectable.html#sqlalchemy.sql.expression.HasCTE)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HasPrefixes`](selectable.html#sqlalchemy.sql.expression.HasPrefixes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HasSuffixes`](selectable.html#sqlalchemy.sql.expression.HasSuffixes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Join`](selectable.html#sqlalchemy.sql.expression.Join)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Lateral`](selectable.html#sqlalchemy.sql.expression.Lateral)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ReturnsRows`](selectable.html#sqlalchemy.sql.expression.ReturnsRows)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ScalarSelect`](selectable.html#sqlalchemy.sql.expression.ScalarSelect)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Select`](selectable.html#sqlalchemy.sql.expression.Select)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Selectable`](selectable.html#sqlalchemy.sql.expression.Selectable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SelectBase`](selectable.html#sqlalchemy.sql.expression.SelectBase)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Subquery`](selectable.html#sqlalchemy.sql.expression.Subquery)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TableClause`](selectable.html#sqlalchemy.sql.expression.TableClause)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TableSample`](selectable.html#sqlalchemy.sql.expression.TableSample)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TableValuedAlias`](selectable.html#sqlalchemy.sql.expression.TableValuedAlias)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TextualSelect`](selectable.html#sqlalchemy.sql.expression.TextualSelect)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Values`](selectable.html#sqlalchemy.sql.expression.Values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ScalarValues`](selectable.html#sqlalchemy.sql.expression.ScalarValues)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Label Style Constants](selectable.html#label-style-constants)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SelectLabelStyle`](selectable.html#sqlalchemy.sql.expression.SelectLabelStyle)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Insert, Updates, Deletes](dml.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DML Foundational Constructors](dml.html#dml-foundational-constructors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`delete()`](dml.html#sqlalchemy.sql.expression.delete)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`insert()`](dml.html#sqlalchemy.sql.expression.insert)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`update()`](dml.html#sqlalchemy.sql.expression.update)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[DML Class Documentation Constructors](dml.html#dml-class-documentation-constructors)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Delete`](dml.html#sqlalchemy.sql.expression.Delete)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Insert`](dml.html#sqlalchemy.sql.expression.Insert)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Update`](dml.html#sqlalchemy.sql.expression.Update)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`UpdateBase`](dml.html#sqlalchemy.sql.expression.UpdateBase)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ValuesBase`](dml.html#sqlalchemy.sql.expression.ValuesBase)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL and Generic Functions](functions.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Function API](functions.html#function-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`AnsiFunction`](functions.html#sqlalchemy.sql.functions.AnsiFunction)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Function`](functions.html#sqlalchemy.sql.functions.Function)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`FunctionElement`](functions.html#sqlalchemy.sql.functions.FunctionElement)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`GenericFunction`](functions.html#sqlalchemy.sql.functions.GenericFunction)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`register_function()`](functions.html#sqlalchemy.sql.functions.register_function)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selected “Known” Functions](functions.html#selected-known-functions)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`aggregate_strings`](functions.html#sqlalchemy.sql.functions.aggregate_strings)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`array_agg`](functions.html#sqlalchemy.sql.functions.array_agg)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`char_length`](functions.html#sqlalchemy.sql.functions.char_length)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`coalesce`](functions.html#sqlalchemy.sql.functions.coalesce)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`concat`](functions.html#sqlalchemy.sql.functions.concat)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`count`](functions.html#sqlalchemy.sql.functions.count)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cube`](functions.html#sqlalchemy.sql.functions.cube)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cume_dist`](functions.html#sqlalchemy.sql.functions.cume_dist)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`current_date`](functions.html#sqlalchemy.sql.functions.current_date)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`current_time`](functions.html#sqlalchemy.sql.functions.current_time)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`current_timestamp`](functions.html#sqlalchemy.sql.functions.current_timestamp)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`current_user`](functions.html#sqlalchemy.sql.functions.current_user)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`dense_rank`](functions.html#sqlalchemy.sql.functions.dense_rank)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`grouping_sets`](functions.html#sqlalchemy.sql.functions.grouping_sets)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`localtime`](functions.html#sqlalchemy.sql.functions.localtime)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`localtimestamp`](functions.html#sqlalchemy.sql.functions.localtimestamp)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`max`](functions.html#sqlalchemy.sql.functions.max)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`min`](functions.html#sqlalchemy.sql.functions.min)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`mode`](functions.html#sqlalchemy.sql.functions.mode)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`next_value`](functions.html#sqlalchemy.sql.functions.next_value)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`now`](functions.html#sqlalchemy.sql.functions.now)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`percent_rank`](functions.html#sqlalchemy.sql.functions.percent_rank)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`percentile_cont`](functions.html#sqlalchemy.sql.functions.percentile_cont)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`percentile_disc`](functions.html#sqlalchemy.sql.functions.percentile_disc)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`random`](functions.html#sqlalchemy.sql.functions.random)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`rank`](functions.html#sqlalchemy.sql.functions.rank)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`rollup`](functions.html#sqlalchemy.sql.functions.rollup)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`session_user`](functions.html#sqlalchemy.sql.functions.session_user)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`sum`](functions.html#sqlalchemy.sql.functions.sum)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`sysdate`](functions.html#sqlalchemy.sql.functions.sysdate)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`user`](functions.html#sqlalchemy.sql.functions.user)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Custom SQL Constructs and Compilation Extension](compiler.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Synopsis](compiler.html#synopsis)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Dialect-specific compilation rules](compiler.html#dialect-specific-compilation-rules)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Compiling sub-elements of a custom expression construct](compiler.html#compiling-sub-elements-of-a-custom-expression-construct)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Cross Compiling between SQL and DDL compilers](compiler.html#cross-compiling-between-sql-and-ddl-compilers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changing the default compilation of existing constructs](compiler.html#changing-the-default-compilation-of-existing-constructs)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changing Compilation of Types](compiler.html#changing-compilation-of-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Subclassing Guidelines](compiler.html#subclassing-guidelines)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Enabling Caching Support for Custom Constructs](compiler.html#enabling-caching-support-for-custom-constructs)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Further Examples](compiler.html#further-examples)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“UTC timestamp” function](compiler.html#utc-timestamp-function)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“GREATEST” function](compiler.html#greatest-function)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[“false” expression](compiler.html#false-expression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`compiles()`](compiler.html#sqlalchemy.ext.compiler.compiles)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`deregister()`](compiler.html#sqlalchemy.ext.compiler.deregister)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Expression Serializer Extension](serializer.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Deserializer()`](serializer.html#sqlalchemy.ext.serializer.Deserializer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Serializer()`](serializer.html#sqlalchemy.ext.serializer.Serializer)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`dumps()`](serializer.html#sqlalchemy.ext.serializer.dumps)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`loads()`](serializer.html#sqlalchemy.ext.serializer.loads)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL Expression Language Foundational Constructs](foundation.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CacheKey`](foundation.html#sqlalchemy.sql.expression.CacheKey)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CacheKey.bindparams`](foundation.html#sqlalchemy.sql.expression.CacheKey.bindparams)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CacheKey.key`](foundation.html#sqlalchemy.sql.expression.CacheKey.key)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CacheKey.to_offline_string()`](foundation.html#sqlalchemy.sql.expression.CacheKey.to_offline_string)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement`](foundation.html#sqlalchemy.sql.expression.ClauseElement)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.compare()`](foundation.html#sqlalchemy.sql.expression.ClauseElement.compare)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.compile()`](foundation.html#sqlalchemy.sql.expression.ClauseElement.compile)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.get_children()`](foundation.html#sqlalchemy.sql.expression.ClauseElement.get_children)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.inherit_cache`](foundation.html#sqlalchemy.sql.expression.ClauseElement.inherit_cache)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.params()`](foundation.html#sqlalchemy.sql.expression.ClauseElement.params)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.self_group()`](foundation.html#sqlalchemy.sql.expression.ClauseElement.self_group)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ClauseElement.unique_params()`](foundation.html#sqlalchemy.sql.expression.ClauseElement.unique_params)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DialectKWArgs`](foundation.html#sqlalchemy.sql.base.DialectKWArgs)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DialectKWArgs.argument_for()`](foundation.html#sqlalchemy.sql.base.DialectKWArgs.argument_for)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DialectKWArgs.dialect_kwargs`](foundation.html#sqlalchemy.sql.base.DialectKWArgs.dialect_kwargs)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DialectKWArgs.dialect_options`](foundation.html#sqlalchemy.sql.base.DialectKWArgs.dialect_options)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DialectKWArgs.kwargs`](foundation.html#sqlalchemy.sql.base.DialectKWArgs.kwargs)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HasCacheKey`](foundation.html#sqlalchemy.sql.traversals.HasCacheKey)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`HasCacheKey.inherit_cache`](foundation.html#sqlalchemy.sql.traversals.HasCacheKey.inherit_cache)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`LambdaElement`](foundation.html#sqlalchemy.sql.expression.LambdaElement)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.add_criteria()`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.add_criteria)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.is_delete`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.is_delete)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.is_dml`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.is_dml)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.is_insert`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.is_insert)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.is_select`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.is_select)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.is_text`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.is_text)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.is_update`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.is_update)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`StatementLambdaElement.spoil()`](foundation.html#sqlalchemy.sql.expression.StatementLambdaElement.spoil)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Visitor and Traversal Utilities](visitors.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalTraversal`](visitors.html#sqlalchemy.sql.visitors.ExternalTraversal)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalTraversal.chain()`](visitors.html#sqlalchemy.sql.visitors.ExternalTraversal.chain)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalTraversal.iterate()`](visitors.html#sqlalchemy.sql.visitors.ExternalTraversal.iterate)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalTraversal.traverse()`](visitors.html#sqlalchemy.sql.visitors.ExternalTraversal.traverse)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalTraversal.visitor_iterator`](visitors.html#sqlalchemy.sql.visitors.ExternalTraversal.visitor_iterator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_annotations_key`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_annotations_key)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_anon_name`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_anon_name)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_boolean`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_boolean)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_clauseelement`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_clauseelement_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_clauseelement_tuple`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement_tuple)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_clauseelement_tuples`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_clauseelement_tuples)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_dialect_options`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_dialect_options)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_dml_multi_values`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_dml_multi_values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_dml_ordered_values`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_dml_ordered_values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_dml_values`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_dml_values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_fromclause_canonical_column_collection`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_fromclause_canonical_column_collection)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_fromclause_ordered_set`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_fromclause_ordered_set)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_has_cache_key`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_has_cache_key)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_has_cache_key_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_has_cache_key_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_has_cache_key_tuples`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_has_cache_key_tuples)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_ignore`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_ignore)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_inspectable`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_inspectable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_inspectable_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_inspectable_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_multi`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_multi)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_multi_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_multi_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_named_ddl_element`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_named_ddl_element)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_operator`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_operator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_plain_dict`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_plain_dict)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_plain_obj`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_plain_obj)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_prefix_sequence`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_prefix_sequence)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_propagate_attrs`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_propagate_attrs)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_statement_hint_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_statement_hint_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_string`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_string)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_string_clauseelement_dict`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_string_clauseelement_dict)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_string_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_string_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_string_multi_dict`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_string_multi_dict)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_table_hint_list`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_table_hint_list)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_type`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_type)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`InternalTraversal.dp_unknown_structure`](visitors.html#sqlalchemy.sql.visitors.InternalTraversal.dp_unknown_structure)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Visitable`](visitors.html#sqlalchemy.sql.visitors.Visitable)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`anon_map`](visitors.html#sqlalchemy.sql.visitors.anon_map)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`cloned_traverse()`](visitors.html#sqlalchemy.sql.visitors.cloned_traverse)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`iterate()`](visitors.html#sqlalchemy.sql.visitors.iterate)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`replacement_traverse()`](visitors.html#sqlalchemy.sql.visitors.replacement_traverse)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`traverse()`](visitors.html#sqlalchemy.sql.visitors.traverse)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`traverse_using()`](visitors.html#sqlalchemy.sql.visitors.traverse_using)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
