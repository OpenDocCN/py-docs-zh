- en: jax.export module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/jax.export.html`](https://jax.readthedocs.io/en/latest/jax.export.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Classes'
  prefs: []
  type: TYPE_NORMAL
- en: '| `Exported`(fun_name, in_tree, in_avals, ...) | A JAX function lowered to
    StableHLO. |'
  prefs: []
  type: TYPE_TB
- en: '| `DisabledSafetyCheck`(_impl) | A safety check that should be skipped on (de)serialization.
    |'
  prefs: []
  type: TYPE_TB
- en: Functions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| `export`(fun_jit, *[, platforms, ...]) | Exports a JAX function for persistent
    serialization. |'
  prefs: []
  type: TYPE_TB
- en: '| `deserialize`(blob) | Deserializes an Exported. |'
  prefs: []
  type: TYPE_TB
- en: '| `minimum_supported_calling_convention_version` | int([x]) -> integer int(x,
    base=10) -> integer |'
  prefs: []
  type: TYPE_TB
- en: '| `maximum_supported_calling_convention_version` | int([x]) -> integer int(x,
    base=10) -> integer |'
  prefs: []
  type: TYPE_TB
- en: '| `default_export_platform`() | Retrieves the default export platform. |'
  prefs: []
  type: TYPE_TB
- en: Functions related to shape polymorphism
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '| `symbolic_shape`(shape_spec, *[, constraints, ...]) | Constructs a symbolic
    shape from a string representation. |'
  prefs: []
  type: TYPE_TB
- en: '| `symbolic_args_specs`(args, shapes_specs[, ...]) | Constructs a pytree of
    jax.ShapeDtypeSpec arguments specs for export. |'
  prefs: []
  type: TYPE_TB
- en: '| `is_symbolic_dim`(p) | Checks if a dimension is symbolic. |'
  prefs: []
  type: TYPE_TB
- en: '| `SymbolicScope`([constraints_str]) | Indentifies a scope for symbolic expressions.
    |'
  prefs: []
  type: TYPE_TB
- en: Constants
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The minimum supported serialization version; see Calling convention versions.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The maximum supported serialization version; see Calling convention versions.
  prefs: []
  type: TYPE_NORMAL
