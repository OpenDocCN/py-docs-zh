- en: SQL Datatype Objects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sqlalchemy.org/en/20/core/types.html](https://docs.sqlalchemy.org/en/20/core/types.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*   [The Type Hierarchy](type_basics.html)'
  prefs: []
  type: TYPE_NORMAL
- en: '[The “CamelCase” datatypes](type_basics.html#the-camelcase-datatypes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The “UPPERCASE” datatypes](type_basics.html#the-uppercase-datatypes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Backend-specific “UPPERCASE” datatypes](type_basics.html#backend-specific-uppercase-datatypes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using “UPPERCASE” and Backend-specific types for multiple backends](type_basics.html#using-uppercase-and-backend-specific-types-for-multiple-backends)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Generic “CamelCase” Types](type_basics.html#generic-camelcase-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BigInteger`](type_basics.html#sqlalchemy.types.BigInteger)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Boolean`](type_basics.html#sqlalchemy.types.Boolean)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Date`](type_basics.html#sqlalchemy.types.Date)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DateTime`](type_basics.html#sqlalchemy.types.DateTime)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Enum`](type_basics.html#sqlalchemy.types.Enum)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Double`](type_basics.html#sqlalchemy.types.Double)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Float`](type_basics.html#sqlalchemy.types.Float)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Integer`](type_basics.html#sqlalchemy.types.Integer)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Interval`](type_basics.html#sqlalchemy.types.Interval)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`LargeBinary`](type_basics.html#sqlalchemy.types.LargeBinary)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MatchType`](type_basics.html#sqlalchemy.types.MatchType)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Numeric`](type_basics.html#sqlalchemy.types.Numeric)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`PickleType`](type_basics.html#sqlalchemy.types.PickleType)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SchemaType`](type_basics.html#sqlalchemy.types.SchemaType)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SmallInteger`](type_basics.html#sqlalchemy.types.SmallInteger)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`String`](type_basics.html#sqlalchemy.types.String)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Text`](type_basics.html#sqlalchemy.types.Text)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Time`](type_basics.html#sqlalchemy.types.Time)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Unicode`](type_basics.html#sqlalchemy.types.Unicode)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`UnicodeText`](type_basics.html#sqlalchemy.types.UnicodeText)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Uuid`](type_basics.html#sqlalchemy.types.Uuid)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL Standard and Multiple Vendor “UPPERCASE” Types](type_basics.html#sql-standard-and-multiple-vendor-uppercase-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ARRAY`](type_basics.html#sqlalchemy.types.ARRAY)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BIGINT`](type_basics.html#sqlalchemy.types.BIGINT)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BINARY`](type_basics.html#sqlalchemy.types.BINARY)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BLOB`](type_basics.html#sqlalchemy.types.BLOB)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`BOOLEAN`](type_basics.html#sqlalchemy.types.BOOLEAN)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CHAR`](type_basics.html#sqlalchemy.types.CHAR)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`CLOB`](type_basics.html#sqlalchemy.types.CLOB)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DATE`](type_basics.html#sqlalchemy.types.DATE)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DATETIME`](type_basics.html#sqlalchemy.types.DATETIME)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DECIMAL`](type_basics.html#sqlalchemy.types.DECIMAL)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DOUBLE`](type_basics.html#sqlalchemy.types.DOUBLE)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DOUBLE_PRECISION`](type_basics.html#sqlalchemy.types.DOUBLE_PRECISION)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`FLOAT`](type_basics.html#sqlalchemy.types.FLOAT)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`INT`](type_basics.html#sqlalchemy.types.INT)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`JSON`](type_basics.html#sqlalchemy.types.JSON)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`INTEGER`](type_basics.html#sqlalchemy.types.INTEGER)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`NCHAR`](type_basics.html#sqlalchemy.types.NCHAR)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`NVARCHAR`](type_basics.html#sqlalchemy.types.NVARCHAR)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`NUMERIC`](type_basics.html#sqlalchemy.types.NUMERIC)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`REAL`](type_basics.html#sqlalchemy.types.REAL)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`SMALLINT`](type_basics.html#sqlalchemy.types.SMALLINT)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TEXT`](type_basics.html#sqlalchemy.types.TEXT)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TIME`](type_basics.html#sqlalchemy.types.TIME)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TIMESTAMP`](type_basics.html#sqlalchemy.types.TIMESTAMP)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`UUID`](type_basics.html#sqlalchemy.types.UUID)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`VARBINARY`](type_basics.html#sqlalchemy.types.VARBINARY)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`VARCHAR`](type_basics.html#sqlalchemy.types.VARCHAR)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Custom Types](custom_types.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Overriding Type Compilation](custom_types.html#overriding-type-compilation)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Augmenting Existing Types](custom_types.html#augmenting-existing-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeDecorator`](custom_types.html#sqlalchemy.types.TypeDecorator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[TypeDecorator Recipes](custom_types.html#typedecorator-recipes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Coercing Encoded Strings to Unicode](custom_types.html#coercing-encoded-strings-to-unicode)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Rounding Numerics](custom_types.html#rounding-numerics)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Store Timezone Aware Timestamps as Timezone Naive UTC](custom_types.html#store-timezone-aware-timestamps-as-timezone-naive-utc)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Backend-agnostic GUID Type](custom_types.html#backend-agnostic-guid-type)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Marshal JSON Strings](custom_types.html#marshal-json-strings)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Applying SQL-level Bind/Result Processing](custom_types.html#applying-sql-level-bind-result-processing)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Redefining and Creating New Operators](custom_types.html#redefining-and-creating-new-operators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating New Types](custom_types.html#creating-new-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`UserDefinedType`](custom_types.html#sqlalchemy.types.UserDefinedType)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Working with Custom Types and Reflection](custom_types.html#working-with-custom-types-and-reflection)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Base Type API](type_api.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine`](type_api.html#sqlalchemy.types.TypeEngine)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.Comparator`](type_api.html#sqlalchemy.types.TypeEngine.Comparator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.adapt()`](type_api.html#sqlalchemy.types.TypeEngine.adapt)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.as_generic()`](type_api.html#sqlalchemy.types.TypeEngine.as_generic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.bind_expression()`](type_api.html#sqlalchemy.types.TypeEngine.bind_expression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.bind_processor()`](type_api.html#sqlalchemy.types.TypeEngine.bind_processor)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.coerce_compared_value()`](type_api.html#sqlalchemy.types.TypeEngine.coerce_compared_value)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.column_expression()`](type_api.html#sqlalchemy.types.TypeEngine.column_expression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.comparator_factory`](type_api.html#sqlalchemy.types.TypeEngine.comparator_factory)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.compare_values()`](type_api.html#sqlalchemy.types.TypeEngine.compare_values)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.compile()`](type_api.html#sqlalchemy.types.TypeEngine.compile)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.dialect_impl()`](type_api.html#sqlalchemy.types.TypeEngine.dialect_impl)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.evaluates_none()`](type_api.html#sqlalchemy.types.TypeEngine.evaluates_none)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.get_dbapi_type()`](type_api.html#sqlalchemy.types.TypeEngine.get_dbapi_type)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.hashable`](type_api.html#sqlalchemy.types.TypeEngine.hashable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.literal_processor()`](type_api.html#sqlalchemy.types.TypeEngine.literal_processor)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.python_type`](type_api.html#sqlalchemy.types.TypeEngine.python_type)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.render_bind_cast`](type_api.html#sqlalchemy.types.TypeEngine.render_bind_cast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.render_literal_cast`](type_api.html#sqlalchemy.types.TypeEngine.render_literal_cast)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.result_processor()`](type_api.html#sqlalchemy.types.TypeEngine.result_processor)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.should_evaluate_none`](type_api.html#sqlalchemy.types.TypeEngine.should_evaluate_none)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.sort_key_function`](type_api.html#sqlalchemy.types.TypeEngine.sort_key_function)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`TypeEngine.with_variant()`](type_api.html#sqlalchemy.types.TypeEngine.with_variant)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Concatenable`](type_api.html#sqlalchemy.types.Concatenable)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Concatenable.Comparator`](type_api.html#sqlalchemy.types.Concatenable.Comparator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Concatenable.comparator_factory`](type_api.html#sqlalchemy.types.Concatenable.comparator_factory)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Indexable`](type_api.html#sqlalchemy.types.Indexable)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Indexable.Comparator`](type_api.html#sqlalchemy.types.Indexable.Comparator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Indexable.comparator_factory`](type_api.html#sqlalchemy.types.Indexable.comparator_factory)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`NullType`](type_api.html#sqlalchemy.types.NullType)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalType`](type_api.html#sqlalchemy.types.ExternalType)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`ExternalType.cache_ok`](type_api.html#sqlalchemy.types.ExternalType.cache_ok)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Variant`](type_api.html#sqlalchemy.types.Variant)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Variant.with_variant()`](type_api.html#sqlalchemy.types.Variant.with_variant)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
