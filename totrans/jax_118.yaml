- en: jax.debug module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jax.debug 模块
- en: 原文：[`jax.readthedocs.io/en/latest/jax.debug.html`](https://jax.readthedocs.io/en/latest/jax.debug.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/jax.debug.html`](https://jax.readthedocs.io/en/latest/jax.debug.html)
- en: '## Runtime value debugging utilities'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 运行时值调试实用工具'
- en: jax.debug.print and jax.debug.breakpoint describes how to make use of JAX’s
    runtime value debugging features.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: jax.debug.print 和 jax.debug.breakpoint 描述了如何利用 JAX 的运行时值调试功能。
- en: '| `callback`(callback, *args[, ordered]) | Calls a stageable Python callback.
    |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| `callback`(callback, *args[, ordered]) | 调用可分阶段的 Python 回调函数。 |'
- en: '| `print`(fmt, *args[, ordered]) | Prints values and works in staged out JAX
    functions. |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| `print`(fmt, *args[, ordered]) | 打印值，并在 JAX 函数中工作。 |'
- en: '| `breakpoint`(*[, backend, filter_frames, ...]) | Enters a breakpoint at a
    point in a program. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `breakpoint`(*[, backend, filter_frames, ...]) | 在程序中某一点设置断点。 |'
- en: Sharding debugging utilities
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调试分片实用工具
- en: Functions that enable inspecting and visualizing array shardings inside (and
    outside) staged functions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 能够在分段函数内（和外部）检查和可视化数组分片的函数。
- en: '| `inspect_array_sharding`(value, *, callback) | Enables inspecting array sharding
    inside JIT-ted functions. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `inspect_array_sharding`(value, *, callback) | 在 JIT 编译函数内部启用检查数组分片。 |'
- en: '| `visualize_array_sharding`(arr, **kwargs) | Visualizes an array''s sharding.
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `visualize_array_sharding`(arr, **kwargs) | 可视化数组的分片。 |'
- en: '| `visualize_sharding`(shape, sharding, *[, ...]) | Visualizes a `Sharding`
    using `rich`. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `visualize_sharding`(shape, sharding, *[, ...]) | 使用 `rich` 可视化 `Sharding`。
    |'
