- en: Tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/tools.html](https://pymupdf.readthedocs.io/en/latest/tools.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This class is a collection of utility methods and attributes, mainly around
    memory management. To simplify and speed up its use, it is automatically instantiated
    under the name *TOOLS* when PyMuPDF is imported.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Method / Attribute** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.gen_id()`](#Tools.gen_id "Tools.gen_id") | generate a unique identifier
    |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.store_shrink()`](#Tools.store_shrink "Tools.store_shrink") | shrink
    the storables cache [[1]](#f1) |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.mupdf_warnings()`](#Tools.mupdf_warnings "Tools.mupdf_warnings")
    | return the accumulated MuPDF warnings |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.mupdf_display_errors()`](#Tools.mupdf_display_errors "Tools.mupdf_display_errors")
    | return the accumulated MuPDF warnings |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.reset_mupdf_warnings()`](#Tools.reset_mupdf_warnings "Tools.reset_mupdf_warnings")
    | empty MuPDF messages on STDOUT |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.set_aa_level()`](#Tools.set_aa_level "Tools.set_aa_level") | set
    the anti-aliasing values |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.set_annot_stem()`](#Tools.set_annot_stem "Tools.set_annot_stem")
    | set the prefix of new annotation / link ids |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.set_small_glyph_heights()`](#Tools.set_small_glyph_heights "Tools.set_small_glyph_heights")
    | search and extract using small bbox heights |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.set_subset_fontnames()`](#Tools.set_subset_fontnames "Tools.set_subset_fontnames")
    | control suppression of subset fontname tags |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.show_aa_level()`](#Tools.show_aa_level "Tools.show_aa_level") | return
    the anti-aliasing values |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.unset_quad_corrections()`](#Tools.unset_quad_corrections "Tools.unset_quad_corrections")
    | disable PyMuPDF-specific code |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.fitz_config`](#Tools.fitz_config "Tools.fitz_config") | configuration
    settings of PyMuPDF |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.store_maxsize`](#Tools.store_maxsize "Tools.store_maxsize") | maximum
    storables cache size |'
  prefs: []
  type: TYPE_TB
- en: '| [`Tools.store_size`](#Tools.store_size "Tools.store_size") | current storables
    cache size |'
  prefs: []
  type: TYPE_TB
- en: '**Class API**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: A convenience method returning a unique positive integer which will increase
    by 1 on every invocation. Example usages include creating unique keys in databases
    - its creation should be faster than using timestamps by an order of magnitude.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'MuPDF has dropped support for this in v1.14.0, so we have re-implemented a
    similar function with the following differences:'
  prefs: []
  type: TYPE_NORMAL
- en: It is not part of MuPDF’s global context and not threadsafe (not an issue because
    we do not support threads in PyMuPDF anyway).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is implemented as *int*. This means that the maximum number is *sys.maxsize*.
    Should this number ever be exceeded, the counter starts over again at 1.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: int
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: a unique positive integer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: New in v1.18.6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set or inquire the prefix for the id of new annotations, fields or links.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**stem** (*str*) – if omitted, the current value is returned, default is “fitz”.
    Annotations, fields / widgets and links technically are subtypes of the same type
    of object (`/Annot`) in PDF documents. An `/Annot` object may be given a unique
    identifier within a page. For each of the applicable subtypes, PyMuPDF generates
    identifiers “stem-Annn”, “stem-Wnnn” or “stem-Lnnn” respectively. The number “nnn”
    is used to enforce the required uniqueness.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: str
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: the current value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: New in v1.18.5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set or inquire reduced bbox heights in text extract and text search methods.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**on** (*bool*) – if omitted or `None`, the current setting is returned. For
    other values the *bool()* function is applied to set a global variable. If `True`,
    [`Page.search_for()`](page.html#Page.search_for "Page.search_for") and [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text") methods return character, span, line or block bboxes that have
    a height of *font size*. If `False` (standard setting when PyMuPDF is imported),
    bbox height will be based on font properties and normally equal *line height*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: bool
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '*True* or *False*.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Text extraction options “xml”, “xhtml” and “html”, which directly wrap MuPDF
    code, are not influenced by this.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: New in v1.18.9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Control suppression of subset fontname tags in text extractions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**on** (*bool*) – if omitted / `None`, the current setting is returned. Arguments
    evaluating to `True` or `False` set a global variable. If `True`, options “dict”,
    “json”, “rawdict” and “rawjson” will return e.g. `"NOHSJV+Calibri-Light"`, otherwise
    only `"Calibri-Light"` (the default). The setting remains in effect until changed
    again.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: bool
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '*True* or *False*.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Except mentioned above, no other text extraction variants are influenced by
    this. This is especially true for the options “xml”, “xhtml” and “html”, which
    are based on MuPDF code. They extract the font name `"Calibri-Light"`, or even
    just the **family** name – `Calibri` in this example.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: New in v1.18.10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enable / disable PyMuPDF-specific code, that tries to rebuild valid character
    quads when encountering nonsense in [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text") text extractions. This code depends on certain font properties
    (ascender and descender), which do not exist in rare situations and cause segmentation
    faults when trying to access them. This method sets a global parameter in PyMuPDF,
    which suppresses execution of this code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**on** (*bool*) – if omitted or `None`, the current setting is returned. For
    other values the *bool()* function is applied to set a global variable. If `True`,
    PyMuPDF will not try to access the resp. font properties and use values `ascender=0.8`
    and `descender=-0.2` instead.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: bool
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '*True* or *False*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Reduce the storables cache by a percentage of its current size.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**percent** (*int*) – the percentage of current size to free. If 100+ the store
    will be emptied, if zero, nothing will happen. MuPDF’s caching strategy is “least
    recently used”, so low-usage elements get deleted first.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: int
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: the new current store size. Depending on the situation, the size reduction may
    be larger than the requested percentage.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return the current anti-aliasing values. These values control the rendering
    quality of graphics and text elements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: dict
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'A dictionary with the following initial content: `{''graphics'': 8, ''text'':
    8, ''graphics_min_line_width'': 0.0}`.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set the new number of bits to use for anti-aliasing. The same value is taken
    currently for graphics and text rendering. This might change in a future MuPDF
    release.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**level** (*int*) – an integer ranging between 0 and 8\. Value outside this
    range will be silently changed to valid values. The value will remain in effect
    throughout the current session or until changed again.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Empty MuPDF warnings message buffer.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Show or set whether MuPDF errors should be displayed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**value** (*bool*) – if not a bool, the current setting is returned. If true,
    MuPDF errors will be shown on *sys.stderr*, otherwise suppressed. In any case,
    messages continue to be stored in the warnings store. Upon import of PyMuPDF this
    value is *True*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '*True* or *False*'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.0
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return all stored MuPDF messages as a string with interspersed line-breaks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**reset** (*bool*) – *(new in version 1.16.7)* whether to automatically empty
    the store.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: A dictionary containing the actual values used for configuring PyMuPDF and MuPDF.
    Also refer to the installation chapter. This is an overview of the keys, each
    of which describes the status of a support aspect.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Key** | **Support included for …** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| plotter-g | Gray colorspace rendering |'
  prefs: []
  type: TYPE_TB
- en: '| plotter-rgb | RGB colorspace rendering |'
  prefs: []
  type: TYPE_TB
- en: '| plotter-cmyk | CMYK colorspcae rendering |'
  prefs: []
  type: TYPE_TB
- en: '| plotter-n | overprint rendering |'
  prefs: []
  type: TYPE_TB
- en: '| pdf | PDF documents |'
  prefs: []
  type: TYPE_TB
- en: '| xps | XPS documents |'
  prefs: []
  type: TYPE_TB
- en: '| svg | SVG documents |'
  prefs: []
  type: TYPE_TB
- en: '| cbz | CBZ documents |'
  prefs: []
  type: TYPE_TB
- en: '| img | IMG documents |'
  prefs: []
  type: TYPE_TB
- en: '| html | HTML documents |'
  prefs: []
  type: TYPE_TB
- en: '| epub | EPUB documents |'
  prefs: []
  type: TYPE_TB
- en: '| jpx | JPEG2000 images |'
  prefs: []
  type: TYPE_TB
- en: '| js | JavaScript |'
  prefs: []
  type: TYPE_TB
- en: '| tofu | all TOFU fonts |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-cjk | CJK font subset (China, Japan, Korea) |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-cjk-ext | CJK font extensions |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-cjk-lang | CJK font language extensions |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-emoji | TOFU emoji fonts |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-historic | TOFU historic fonts |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-symbol | TOFU symbol fonts |'
  prefs: []
  type: TYPE_TB
- en: '| tofu-sil | TOFU SIL fonts |'
  prefs: []
  type: TYPE_TB
- en: '| icc | ICC profiles |'
  prefs: []
  type: TYPE_TB
- en: '| py-memory | using Python memory management [[2]](#f2) |'
  prefs: []
  type: TYPE_TB
- en: '| base14 | Base-14 fonts (should always be true) |'
  prefs: []
  type: TYPE_TB
- en: 'For an explanation of the term “TOFU” see [this Wikipedia article](https://en.wikipedia.org/wiki/Noto_fonts):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: dict
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Maximum storables cache size in bytes. **PyMuPDF** is generated with a value
    of 268’435’456 (256 MB, the default value), which you should therefore always
    see here. If this value is zero, then an “unlimited” growth is permitted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: int
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'Current storables cache size in bytes. This value may change (and will usually
    increase) with every use of a **PyMuPDF** function. It will (automatically) decrease
    only when [`Tools.store_maxsize`](#Tools.store_maxsize "Tools.store_maxsize")
    is going to be exceeded: in this case, **MuPDF** will evict low-usage objects
    until the value is again in range.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: int
  prefs: []
  type: TYPE_NORMAL
- en: Example Session
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: Example Session
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
