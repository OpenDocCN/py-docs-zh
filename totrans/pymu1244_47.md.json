["```py\nclass Tools\n```", "```py\ngen_id()\n```", "```py\nset_annot_stem(stem=None)\n```", "```py\nset_small_glyph_heights(on=None)\n```", "```py\nset_subset_fontnames(on=None)\n```", "```py\nunset_quad_corrections(on=None)\n```", "```py\nstore_shrink(percent)\n```", "```py\nshow_aa_level()\n```", "```py\nset_aa_level(level)\n```", "```py\nreset_mupdf_warnings()\n```", "```py\nmupdf_display_errors(value=None)\n```", "```py\nmupdf_warnings(reset=True)\n```", "```py\nfitz_config\n```", "```py\nIn [1]: import pymupdf\nIn [2]: TOOLS.fitz_config\nOut[2]:\n{'plotter-g': True,\n 'plotter-rgb': True,\n 'plotter-cmyk': True,\n 'plotter-n': True,\n 'pdf': True,\n 'xps': True,\n 'svg': True,\n 'cbz': True,\n 'img': True,\n 'html': True,\n 'epub': True,\n 'jpx': True,\n 'js': True,\n 'tofu': False,\n 'tofu-cjk': True,\n 'tofu-cjk-ext': False,\n 'tofu-cjk-lang': False,\n 'tofu-emoji': False,\n 'tofu-historic': False,\n 'tofu-symbol': False,\n 'tofu-sil': False,\n 'icc': True,\n 'py-memory': False,\n 'base14': True} \n```", "```py\nstore_maxsize\n```", "```py\nstore_size\n```", "```py\n>>> import pymupdf\n# print the maximum and current cache sizes\n>>> pymupdf.TOOLS.store_maxsize\n268435456\n>>> pymupdf.TOOLS.store_size\n0\n>>> doc = pymupdf.open(\"demo1.pdf\")\n# pixmap creation puts lots of object in cache (text, images, fonts),\n# apart from the pixmap itself\n>>> pix = doc[0].get_pixmap(alpha=False)\n>>> pymupdf.TOOLS.store_size\n454519\n# release (at least) 50% of the storage\n>>> pymupdf.TOOLS.store_shrink(50)\n13471\n>>> pymupdf.TOOLS.store_size\n13471\n# get a few unique numbers\n>>> pymupdf.TOOLS.gen_id()\n1\n>>> pymupdf.TOOLS.gen_id()\n2\n>>> pymupdf.TOOLS.gen_id()\n3\n# close document and see how much cache is still in use\n>>> doc.close()\n>>> pymupdf.TOOLS.store_size\n0\n>>> \n```", "```py\n>>> import pymupdf\n# print the maximum and current cache sizes\n>>> pymupdf.TOOLS.store_maxsize\n268435456\n>>> pymupdf.TOOLS.store_size\n0\n>>> doc = pymupdf.open(\"demo1.pdf\")\n# pixmap creation puts lots of object in cache (text, images, fonts),\n# apart from the pixmap itself\n>>> pix = doc[0].get_pixmap(alpha=False)\n>>> pymupdf.TOOLS.store_size\n454519\n# release (at least) 50% of the storage\n>>> pymupdf.TOOLS.store_shrink(50)\n13471\n>>> pymupdf.TOOLS.store_size\n13471\n# get a few unique numbers\n>>> pymupdf.TOOLS.gen_id()\n1\n>>> pymupdf.TOOLS.gen_id()\n2\n>>> pymupdf.TOOLS.gen_id()\n3\n# close document and see how much cache is still in use\n>>> doc.close()\n>>> pymupdf.TOOLS.store_size\n0\n>>> \n```"]