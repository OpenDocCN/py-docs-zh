["```py\nimport numpy as np\nimport jax.numpy as jnp\nfrom jax import Array\nfrom jax.typing import ArrayLike\n\ndef my_function(x: ArrayLike) -> Array:\n  # Runtime type validation, Python 3.10 or newer:\n  if not isinstance(x, ArrayLike):\n    raise TypeError(f\"Expected arraylike input; got {x}\")\n  # Runtime type validation, any Python version:\n  if not (isinstance(x, (np.ndarray, Array)) or np.isscalar(x)):\n    raise TypeError(f\"Expected arraylike input; got {x}\")\n\n  # Convert input to jax.Array:\n  x_arr = jnp.asarray(x)\n\n  # ... do some computation; JAX functions will return Array types:\n  result = x_arr.sum(0) / x_arr.shape[0]\n\n  # return an Array\n  return result \n```"]