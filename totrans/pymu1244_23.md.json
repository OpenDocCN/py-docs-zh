["```py\n    pymupdf <command and parameters> \n    ```", "```py\n    python -m fitz <command and parameters> \n    ```", "```py\n    >>> import pymupdf.__main__\n    >>> cmd = \"clean input.pdf output.pdf -pages 1,N\".split()  # prepare command line\n    >>> saved_parms = sys.argv[1:]  # save original command line\n    >>> sys.argv[1:] = cmd  # store new command line\n    >>> pymupdf.__main__.()  # execute module\n    >>> sys.argv[1:] = saved_parms  # restore original command line \n    ```", "```py\nfrom pymupdf.__main__ import main\nmain() \n```", "```py\npymupdf clean -h\nusage: fitz clean [-h] [-password PASSWORD]\n                [-encryption {keep,none,rc4-40,rc4-128,aes-128,aes-256}]\n                [-owner OWNER] [-user USER] [-garbage {0,1,2,3,4}]\n                [-compress] [-ascii] [-linear] [-permission PERMISSION]\n                [-sanitize] [-pretty] [-pages PAGES]\n                input output\n\n-------------- optimize PDF or create sub-PDF if pages given --------------\n\npositional arguments:\ninput                 PDF filename\noutput                output PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-encryption {keep,none,rc4-40,rc4-128,aes-128,aes-256}\n                      encryption method\n-owner OWNER          owner password\n-user USER            user password\n-garbage {0,1,2,3,4}  garbage collection level\n-compress             compress (deflate) output\n-ascii                ASCII encode binary data\n-linear               format for fast web display\n-permission PERMISSION\n                      integer with permission levels\n-sanitize             sanitize / clean contents\n-pretty               prettify PDF structure\n-pages PAGES          output selected pages, format: 1,5-7,50-N \n```", "```py\npymupdf extract -h\nusage: fitz extract [-h] [-images] [-fonts] [-output OUTPUT] [-password PASSWORD]\n                    [-pages PAGES]\n                    input\n\n--------------------- extract images and fonts to disk --------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-images               extract images\n-fonts                extract fonts\n-output OUTPUT        output directory, defaults to current\n-password PASSWORD    password\n-pages PAGES          only consider these pages, format: 1,5-7,50-N \n```", "```py\npymupdf join -h\nusage: fitz join [-h] -output OUTPUT [input [input ...]]\n\n---------------------------- join PDF documents ---------------------------\n\npositional arguments:\ninput           input filenames\n\noptional arguments:\n-h, --help      show this help message and exit\n-output OUTPUT  output filename\n\nspecify each input as 'filename[,password[,pages]]' \n```", "```py\npymupdf show -h\nusage: fitz show [-h] [-password PASSWORD] [-catalog] [-trailer] [-metadata]\n                [-xrefs XREFS] [-pages PAGES]\n                input\n\n------------------------- display PDF information -------------------------\n\npositional arguments:\ninput               PDF filename\n\noptional arguments:\n-h, --help          show this help message and exit\n-password PASSWORD  password\n-catalog            show PDF catalog\n-trailer            show PDF trailer\n-metadata           show PDF metadata\n-xrefs XREFS        show selected objects, format: 1,5-7,N\n-pages PAGES        show selected pages, format: 1,5-7,50-N \n```", "```py\npymupdf show x.pdf\nPDF is password protected\n\npymupdf show x.pdf -pass hugo\nauthentication unsuccessful\n\npymupdf show x.pdf -pass jorjmckie\nauthenticated as owner\nfile 'x.pdf', pages: 1, objects: 19, 58 MB, PDF 1.4, encryption: Standard V5 R6 256-bit AES\nDocument contains 15 embedded files.\n\npymupdf show FDA-1572_508_R6_FINAL.pdf -tr -m\n'FDA-1572_508_R6_FINAL.pdf', pages: 2, objects: 1645, 1.4 MB, PDF 1.6, encryption: Standard V4 R4 128-bit AES\ndocument contains 740 root form fields and is signed\n\n------------------------------- PDF metadata ------------------------------\n       format: PDF 1.6\n        title: FORM FDA 1572\n       author: PSC Publishing Services\n      subject: Statement of Investigator\n     keywords: None\n      creator: PScript5.dll Version 5.2.2\n     producer: Acrobat Distiller 9.0.0 (Windows)\n creationDate: D:20130522104413-04'00'\n      modDate: D:20190718154905-07'00'\n   encryption: Standard V4 R4 128-bit AES\n\n------------------------------- PDF trailer -------------------------------\n<<\n/DecodeParms <<\n    /Columns 5\n    /Predictor 12\n>>\n/Encrypt 1389 0 R\n/Filter /FlateDecode\n/ID [ <9252E9E39183F2A0B0C51BE557B8A8FC> <85227BE9B84B724E8F678E1529BA8351> ]\n/Index [ 1388 258 ]\n/Info 1387 0 R\n/Length 253\n/Prev 1510559\n/Root 1390 0 R\n/Size 1646\n/Type /XRef\n/W [ 1 3 1 ]\n>> \n```", "```py\npymupdf embed-info -h\nusage: fitz embed-info [-h] [-name NAME] [-detail] [-password PASSWORD] input\n\n--------------------------- list embedded files ---------------------------\n\npositional arguments:\ninput               PDF filename\n\noptional arguments:\n-h, --help          show this help message and exit\n-name NAME          if given, report only this one\n-detail             show detail information\n-password PASSWORD  password \n```", "```py\npymupdf embed-info some.pdf\n'some.pdf' contains the following 15 embedded files.\n\n20110813_180956_0002.jpg\n20110813_181009_0003.jpg\n20110813_181012_0004.jpg\n20110813_181131_0005.jpg\n20110813_181144_0006.jpg\n20110813_181306_0007.jpg\n20110813_181307_0008.jpg\n20110813_181314_0009.jpg\n20110813_181315_0010.jpg\n20110813_181324_0011.jpg\n20110813_181339_0012.jpg\n20110813_181913_0013.jpg\ninsta-20110813_180944_0001.jpg\nmarkiert-20110813_180944_0001.jpg\nneue.datei \n```", "```py\n name: neue.datei\n filename: text-tester.pdf\nufilename: text-tester.pdf\n     desc: nur zum Testen!\n     size: 4639\n   length: 1566 \n```", "```py\npymupdf embed-extract -h\nusage: fitz embed-extract [-h] -name NAME [-password PASSWORD] [-output OUTPUT]\n                        input\n\n---------------------- extract embedded file to disk ----------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-name NAME            name of entry\n-password PASSWORD    password\n-output OUTPUT        output filename, default is stored name \n```", "```py\npymupdf embed-extract some.pdf -name neue.datei\nSaved entry 'neue.datei' as 'text-tester.pdf' \n```", "```py\npymupdf embed-del -h\nusage: fitz embed-del [-h] [-password PASSWORD] [-output OUTPUT] -name NAME input\n\n--------------------------- delete embedded file --------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-output OUTPUT        output PDF filename, incremental save if none\n-name NAME            name of entry to delete \n```", "```py\npymupdf embed-add -h\nusage: fitz embed-add [-h] [-password PASSWORD] [-output OUTPUT] -name NAME -path\n                    PATH [-desc DESC]\n                    input\n\n---------------------------- add embedded file ----------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-output OUTPUT        output PDF filename, incremental save if none\n-name NAME            name of new entry\n-path PATH            path to data for new entry\n-desc DESC            description of new entry \n```", "```py\npymupdf embed-upd -h\nusage: fitz embed-upd [-h] -name NAME [-password PASSWORD] [-output OUTPUT]\n                    [-path PATH] [-filename FILENAME] [-ufilename UFILENAME]\n                    [-desc DESC]\n                    input\n\n--------------------------- update embedded file --------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-name NAME            name of entry\n-password PASSWORD    password\n-output OUTPUT        Output PDF filename, incremental save if none\n-path PATH            path to new data for entry\n-filename FILENAME    new filename to store in entry\n-ufilename UFILENAME  new unicode filename to store in entry\n-desc DESC            new description to store in entry\n\nexcept '-name' all parameters are optional \n```", "```py\npymupdf embed-copy -h\nusage: fitz embed-copy [-h] [-password PASSWORD] [-output OUTPUT] -source\n                    SOURCE [-pwdsource PWDSOURCE]\n                    [-name [NAME [NAME ...]]]\n                    input\n\n--------------------- copy embedded files between PDFs --------------------\n\npositional arguments:\ninput                 PDF to receive embedded files\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password of input\n-output OUTPUT        output PDF, incremental save to 'input' if omitted\n-source SOURCE        copy embedded files from here\n-pwdsource PWDSOURCE  password of 'source' PDF\n-name [NAME [NAME ...]]\n                      restrict copy to these entries \n```", "```py\npymupdf gettext -h\nusage: fitz gettext [-h] [-password PASSWORD] [-mode {simple,blocks,layout}] [-pages PAGES] [-noligatures]\n                    [-convert-white] [-extra-spaces] [-noformfeed] [-skip-empty] [-output OUTPUT] [-grid GRID]\n                    [-fontsize FONTSIZE]\n                    input\n\n----------------- extract text in various formatting modes ----------------\n\npositional arguments:\ninput                 input document filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password for input document\n-mode {simple,blocks,layout}\n                        mode: simple, block sort, or layout (default)\n-pages PAGES          select pages, format: 1,5-7,50-N\n-noligatures          expand ligature characters (default False)\n-convert-white        convert whitespace characters to space (default False)\n-extra-spaces         fill gaps with spaces (default False)\n-noformfeed           write linefeeds, no formfeeds (default False)\n-skip-empty           suppress pages with no text (default False)\n-output OUTPUT        store text in this file (default inputfilename.txt)\n-grid GRID            merge lines if closer than this (default 2)\n-fontsize FONTSIZE    only include text with a larger :data:`fontsize` (default 3) \n```", "```py\n    pymupdf <command and parameters> \n    ```", "```py\n    python -m fitz <command and parameters> \n    ```", "```py\n    >>> import pymupdf.__main__\n    >>> cmd = \"clean input.pdf output.pdf -pages 1,N\".split()  # prepare command line\n    >>> saved_parms = sys.argv[1:]  # save original command line\n    >>> sys.argv[1:] = cmd  # store new command line\n    >>> pymupdf.__main__.()  # execute module\n    >>> sys.argv[1:] = saved_parms  # restore original command line \n    ```", "```py\nfrom pymupdf.__main__ import main\nmain() \n```", "```py\npymupdf clean -h\nusage: fitz clean [-h] [-password PASSWORD]\n                [-encryption {keep,none,rc4-40,rc4-128,aes-128,aes-256}]\n                [-owner OWNER] [-user USER] [-garbage {0,1,2,3,4}]\n                [-compress] [-ascii] [-linear] [-permission PERMISSION]\n                [-sanitize] [-pretty] [-pages PAGES]\n                input output\n\n-------------- optimize PDF or create sub-PDF if pages given --------------\n\npositional arguments:\ninput                 PDF filename\noutput                output PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-encryption {keep,none,rc4-40,rc4-128,aes-128,aes-256}\n                      encryption method\n-owner OWNER          owner password\n-user USER            user password\n-garbage {0,1,2,3,4}  garbage collection level\n-compress             compress (deflate) output\n-ascii                ASCII encode binary data\n-linear               format for fast web display\n-permission PERMISSION\n                      integer with permission levels\n-sanitize             sanitize / clean contents\n-pretty               prettify PDF structure\n-pages PAGES          output selected pages, format: 1,5-7,50-N \n```", "```py\npymupdf extract -h\nusage: fitz extract [-h] [-images] [-fonts] [-output OUTPUT] [-password PASSWORD]\n                    [-pages PAGES]\n                    input\n\n--------------------- extract images and fonts to disk --------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-images               extract images\n-fonts                extract fonts\n-output OUTPUT        output directory, defaults to current\n-password PASSWORD    password\n-pages PAGES          only consider these pages, format: 1,5-7,50-N \n```", "```py\npymupdf join -h\nusage: fitz join [-h] -output OUTPUT [input [input ...]]\n\n---------------------------- join PDF documents ---------------------------\n\npositional arguments:\ninput           input filenames\n\noptional arguments:\n-h, --help      show this help message and exit\n-output OUTPUT  output filename\n\nspecify each input as 'filename[,password[,pages]]' \n```", "```py\npymupdf show -h\nusage: fitz show [-h] [-password PASSWORD] [-catalog] [-trailer] [-metadata]\n                [-xrefs XREFS] [-pages PAGES]\n                input\n\n------------------------- display PDF information -------------------------\n\npositional arguments:\ninput               PDF filename\n\noptional arguments:\n-h, --help          show this help message and exit\n-password PASSWORD  password\n-catalog            show PDF catalog\n-trailer            show PDF trailer\n-metadata           show PDF metadata\n-xrefs XREFS        show selected objects, format: 1,5-7,N\n-pages PAGES        show selected pages, format: 1,5-7,50-N \n```", "```py\npymupdf show x.pdf\nPDF is password protected\n\npymupdf show x.pdf -pass hugo\nauthentication unsuccessful\n\npymupdf show x.pdf -pass jorjmckie\nauthenticated as owner\nfile 'x.pdf', pages: 1, objects: 19, 58 MB, PDF 1.4, encryption: Standard V5 R6 256-bit AES\nDocument contains 15 embedded files.\n\npymupdf show FDA-1572_508_R6_FINAL.pdf -tr -m\n'FDA-1572_508_R6_FINAL.pdf', pages: 2, objects: 1645, 1.4 MB, PDF 1.6, encryption: Standard V4 R4 128-bit AES\ndocument contains 740 root form fields and is signed\n\n------------------------------- PDF metadata ------------------------------\n       format: PDF 1.6\n        title: FORM FDA 1572\n       author: PSC Publishing Services\n      subject: Statement of Investigator\n     keywords: None\n      creator: PScript5.dll Version 5.2.2\n     producer: Acrobat Distiller 9.0.0 (Windows)\n creationDate: D:20130522104413-04'00'\n      modDate: D:20190718154905-07'00'\n   encryption: Standard V4 R4 128-bit AES\n\n------------------------------- PDF trailer -------------------------------\n<<\n/DecodeParms <<\n    /Columns 5\n    /Predictor 12\n>>\n/Encrypt 1389 0 R\n/Filter /FlateDecode\n/ID [ <9252E9E39183F2A0B0C51BE557B8A8FC> <85227BE9B84B724E8F678E1529BA8351> ]\n/Index [ 1388 258 ]\n/Info 1387 0 R\n/Length 253\n/Prev 1510559\n/Root 1390 0 R\n/Size 1646\n/Type /XRef\n/W [ 1 3 1 ]\n>> \n```", "```py\npymupdf embed-info -h\nusage: fitz embed-info [-h] [-name NAME] [-detail] [-password PASSWORD] input\n\n--------------------------- list embedded files ---------------------------\n\npositional arguments:\ninput               PDF filename\n\noptional arguments:\n-h, --help          show this help message and exit\n-name NAME          if given, report only this one\n-detail             show detail information\n-password PASSWORD  password \n```", "```py\npymupdf embed-info some.pdf\n'some.pdf' contains the following 15 embedded files.\n\n20110813_180956_0002.jpg\n20110813_181009_0003.jpg\n20110813_181012_0004.jpg\n20110813_181131_0005.jpg\n20110813_181144_0006.jpg\n20110813_181306_0007.jpg\n20110813_181307_0008.jpg\n20110813_181314_0009.jpg\n20110813_181315_0010.jpg\n20110813_181324_0011.jpg\n20110813_181339_0012.jpg\n20110813_181913_0013.jpg\ninsta-20110813_180944_0001.jpg\nmarkiert-20110813_180944_0001.jpg\nneue.datei \n```", "```py\n name: neue.datei\n filename: text-tester.pdf\nufilename: text-tester.pdf\n     desc: nur zum Testen!\n     size: 4639\n   length: 1566 \n```", "```py\npymupdf embed-extract -h\nusage: fitz embed-extract [-h] -name NAME [-password PASSWORD] [-output OUTPUT]\n                        input\n\n---------------------- extract embedded file to disk ----------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-name NAME            name of entry\n-password PASSWORD    password\n-output OUTPUT        output filename, default is stored name \n```", "```py\npymupdf embed-extract some.pdf -name neue.datei\nSaved entry 'neue.datei' as 'text-tester.pdf' \n```", "```py\npymupdf embed-del -h\nusage: fitz embed-del [-h] [-password PASSWORD] [-output OUTPUT] -name NAME input\n\n--------------------------- delete embedded file --------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-output OUTPUT        output PDF filename, incremental save if none\n-name NAME            name of entry to delete \n```", "```py\npymupdf embed-add -h\nusage: fitz embed-add [-h] [-password PASSWORD] [-output OUTPUT] -name NAME -path\n                    PATH [-desc DESC]\n                    input\n\n---------------------------- add embedded file ----------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-output OUTPUT        output PDF filename, incremental save if none\n-name NAME            name of new entry\n-path PATH            path to data for new entry\n-desc DESC            description of new entry \n```", "```py\npymupdf embed-upd -h\nusage: fitz embed-upd [-h] -name NAME [-password PASSWORD] [-output OUTPUT]\n                    [-path PATH] [-filename FILENAME] [-ufilename UFILENAME]\n                    [-desc DESC]\n                    input\n\n--------------------------- update embedded file --------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-name NAME            name of entry\n-password PASSWORD    password\n-output OUTPUT        Output PDF filename, incremental save if none\n-path PATH            path to new data for entry\n-filename FILENAME    new filename to store in entry\n-ufilename UFILENAME  new unicode filename to store in entry\n-desc DESC            new description to store in entry\n\nexcept '-name' all parameters are optional \n```", "```py\npymupdf embed-copy -h\nusage: fitz embed-copy [-h] [-password PASSWORD] [-output OUTPUT] -source\n                    SOURCE [-pwdsource PWDSOURCE]\n                    [-name [NAME [NAME ...]]]\n                    input\n\n--------------------- copy embedded files between PDFs --------------------\n\npositional arguments:\ninput                 PDF to receive embedded files\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password of input\n-output OUTPUT        output PDF, incremental save to 'input' if omitted\n-source SOURCE        copy embedded files from here\n-pwdsource PWDSOURCE  password of 'source' PDF\n-name [NAME [NAME ...]]\n                      restrict copy to these entries \n```", "```py\npymupdf embed-info -h\nusage: fitz embed-info [-h] [-name NAME] [-detail] [-password PASSWORD] input\n\n--------------------------- list embedded files ---------------------------\n\npositional arguments:\ninput               PDF filename\n\noptional arguments:\n-h, --help          show this help message and exit\n-name NAME          if given, report only this one\n-detail             show detail information\n-password PASSWORD  password \n```", "```py\npymupdf embed-info some.pdf\n'some.pdf' contains the following 15 embedded files.\n\n20110813_180956_0002.jpg\n20110813_181009_0003.jpg\n20110813_181012_0004.jpg\n20110813_181131_0005.jpg\n20110813_181144_0006.jpg\n20110813_181306_0007.jpg\n20110813_181307_0008.jpg\n20110813_181314_0009.jpg\n20110813_181315_0010.jpg\n20110813_181324_0011.jpg\n20110813_181339_0012.jpg\n20110813_181913_0013.jpg\ninsta-20110813_180944_0001.jpg\nmarkiert-20110813_180944_0001.jpg\nneue.datei \n```", "```py\n name: neue.datei\n filename: text-tester.pdf\nufilename: text-tester.pdf\n     desc: nur zum Testen!\n     size: 4639\n   length: 1566 \n```", "```py\npymupdf embed-extract -h\nusage: fitz embed-extract [-h] -name NAME [-password PASSWORD] [-output OUTPUT]\n                        input\n\n---------------------- extract embedded file to disk ----------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-name NAME            name of entry\n-password PASSWORD    password\n-output OUTPUT        output filename, default is stored name \n```", "```py\npymupdf embed-extract some.pdf -name neue.datei\nSaved entry 'neue.datei' as 'text-tester.pdf' \n```", "```py\npymupdf embed-del -h\nusage: fitz embed-del [-h] [-password PASSWORD] [-output OUTPUT] -name NAME input\n\n--------------------------- delete embedded file --------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-output OUTPUT        output PDF filename, incremental save if none\n-name NAME            name of entry to delete \n```", "```py\npymupdf embed-add -h\nusage: fitz embed-add [-h] [-password PASSWORD] [-output OUTPUT] -name NAME -path\n                    PATH [-desc DESC]\n                    input\n\n---------------------------- add embedded file ----------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password\n-output OUTPUT        output PDF filename, incremental save if none\n-name NAME            name of new entry\n-path PATH            path to data for new entry\n-desc DESC            description of new entry \n```", "```py\npymupdf embed-upd -h\nusage: fitz embed-upd [-h] -name NAME [-password PASSWORD] [-output OUTPUT]\n                    [-path PATH] [-filename FILENAME] [-ufilename UFILENAME]\n                    [-desc DESC]\n                    input\n\n--------------------------- update embedded file --------------------------\n\npositional arguments:\ninput                 PDF filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-name NAME            name of entry\n-password PASSWORD    password\n-output OUTPUT        Output PDF filename, incremental save if none\n-path PATH            path to new data for entry\n-filename FILENAME    new filename to store in entry\n-ufilename UFILENAME  new unicode filename to store in entry\n-desc DESC            new description to store in entry\n\nexcept '-name' all parameters are optional \n```", "```py\npymupdf embed-copy -h\nusage: fitz embed-copy [-h] [-password PASSWORD] [-output OUTPUT] -source\n                    SOURCE [-pwdsource PWDSOURCE]\n                    [-name [NAME [NAME ...]]]\n                    input\n\n--------------------- copy embedded files between PDFs --------------------\n\npositional arguments:\ninput                 PDF to receive embedded files\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password of input\n-output OUTPUT        output PDF, incremental save to 'input' if omitted\n-source SOURCE        copy embedded files from here\n-pwdsource PWDSOURCE  password of 'source' PDF\n-name [NAME [NAME ...]]\n                      restrict copy to these entries \n```", "```py\npymupdf gettext -h\nusage: fitz gettext [-h] [-password PASSWORD] [-mode {simple,blocks,layout}] [-pages PAGES] [-noligatures]\n                    [-convert-white] [-extra-spaces] [-noformfeed] [-skip-empty] [-output OUTPUT] [-grid GRID]\n                    [-fontsize FONTSIZE]\n                    input\n\n----------------- extract text in various formatting modes ----------------\n\npositional arguments:\ninput                 input document filename\n\noptional arguments:\n-h, --help            show this help message and exit\n-password PASSWORD    password for input document\n-mode {simple,blocks,layout}\n                        mode: simple, block sort, or layout (default)\n-pages PAGES          select pages, format: 1,5-7,50-N\n-noligatures          expand ligature characters (default False)\n-convert-white        convert whitespace characters to space (default False)\n-extra-spaces         fill gaps with spaces (default False)\n-noformfeed           write linefeeds, no formfeeds (default False)\n-skip-empty           suppress pages with no text (default False)\n-output OUTPUT        store text in this file (default inputfilename.txt)\n-grid GRID            merge lines if closer than this (default 2)\n-fontsize FONTSIZE    only include text with a larger :data:`fontsize` (default 3) \n```"]