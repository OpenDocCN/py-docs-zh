- en: Alternate Class Instrumentation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替代类仪器化
- en: 原文：[https://docs.sqlalchemy.org/en/20/orm/extensions/instrumentation.html](https://docs.sqlalchemy.org/en/20/orm/extensions/instrumentation.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sqlalchemy.org/en/20/orm/extensions/instrumentation.html](https://docs.sqlalchemy.org/en/20/orm/extensions/instrumentation.html)
- en: Extensible class instrumentation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 可扩展的类仪器化。
- en: The [`sqlalchemy.ext.instrumentation`](#module-sqlalchemy.ext.instrumentation
    "sqlalchemy.ext.instrumentation") package provides for alternate systems of class
    instrumentation within the ORM. Class instrumentation refers to how the ORM places
    attributes on the class which maintain data and track changes to that data, as
    well as event hooks installed on the class.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[`sqlalchemy.ext.instrumentation`](#module-sqlalchemy.ext.instrumentation "sqlalchemy.ext.instrumentation")包提供了ORM内的类仪器化的替代系统。类仪器化是指ORM如何将属性放在类上，以维护数据并跟踪对该数据的更改，以及安装在类上的事件钩子。'
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The extension package is provided for the benefit of integration with other
    object management packages, which already perform their own instrumentation. It
    is not intended for general use.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 该扩展包是为了与其他已经执行自己仪器化的对象管理包集成而提供的。它不适用于一般用途。
- en: For examples of how the instrumentation extension is used, see the example [Attribute
    Instrumentation](../examples.html#examples-instrumentation).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 查看仪器扩展如何使用的示例，请参见示例[属性仪器化](../examples.html#examples-instrumentation)。
- en: API Reference
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API参考
- en: '| Object Name | Description |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 对象名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [ExtendedInstrumentationRegistry](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry)
    | Extends [`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") with additional bookkeeping,
    to accommodate multiple types of class managers. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [ExtendedInstrumentationRegistry](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry)
    | 使用额外的簿记扩展[`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory")，以适应多种类型的类管理器。 |'
- en: '| [instrumentation_finders](#sqlalchemy.ext.instrumentation.instrumentation_finders)
    | An extensible sequence of callables which return instrumentation implementations
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [instrumentation_finders](#sqlalchemy.ext.instrumentation.instrumentation_finders)
    | 一个可扩展的返回仪器化实现的可调用序列 |'
- en: '| [INSTRUMENTATION_MANAGER](#sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER)
    | Attribute, elects custom instrumentation when present on a mapped class. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [INSTRUMENTATION_MANAGER](#sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER)
    | 属性，当存在于映射类上时，选择自定义仪器化。 |'
- en: '| [InstrumentationFactory](#sqlalchemy.orm.instrumentation.InstrumentationFactory)
    | Factory for new ClassManager instances. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [InstrumentationFactory](#sqlalchemy.orm.instrumentation.InstrumentationFactory)
    | 用于新的ClassManager实例的工厂。 |'
- en: '| [InstrumentationManager](#sqlalchemy.ext.instrumentation.InstrumentationManager)
    | User-defined class instrumentation extension. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [InstrumentationManager](#sqlalchemy.ext.instrumentation.InstrumentationManager)
    | 用户定义的类仪器化扩展。 |'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Attribute, elects custom instrumentation when present on a mapped class.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 属性，当存在于映射类上时，选择自定义仪器化。
- en: Allows a class to specify a slightly or wildly different technique for tracking
    changes made to mapped attributes and collections.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 允许类指定稍微或完全不同的技术来跟踪对映射属性和集合所做的更改。
- en: Only one instrumentation implementation is allowed in a given object inheritance
    hierarchy.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定对象继承层次结构中只允许一个仪器化实现。
- en: 'The value of this attribute must be a callable and will be passed a class object.
    The callable must return one of:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性的值必须是可调用的，并将传递一个类对象。可调用对象必须返回以下之一：
- en: An instance of an [`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") or subclass
  id: totrans-20
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个[`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager")的实例或子类
- en: ''
  id: totrans-21
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-22
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: An object implementing all or some of InstrumentationManager (TODO)
  id: totrans-23
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现所有或部分InstrumentationManager的对象（待办事项）
- en: ''
  id: totrans-24
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-25
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: A dictionary of callables, implementing all or some of the above (TODO)
  id: totrans-26
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现上述所有或部分的可调用对象字典（待办事项）
- en: ''
  id: totrans-27
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-28
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: An instance of a [`ClassManager`](../internals.html#sqlalchemy.orm.ClassManager
    "sqlalchemy.orm.ClassManager") or subclass
  id: totrans-29
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个[`ClassManager`](../internals.html#sqlalchemy.orm.ClassManager "sqlalchemy.orm.ClassManager")的实例或子类
- en: This attribute is consulted by SQLAlchemy instrumentation resolution, once the
    [`sqlalchemy.ext.instrumentation`](#module-sqlalchemy.ext.instrumentation "sqlalchemy.ext.instrumentation")
    module has been imported. If custom finders are installed in the global instrumentation_finders
    list, they may or may not choose to honor this attribute.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦导入了[`sqlalchemy.ext.instrumentation`](#module-sqlalchemy.ext.instrumentation
    "sqlalchemy.ext.instrumentation")模块，此属性将被 SQLAlchemy 仪器解析所使用。 如果在全局仪器查找器列表中安装了自定义查找器，则它们可能会选择是否尊重此属性。
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Factory for new ClassManager instances.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 用于新的 ClassManager 实例的工厂。
- en: '**Class signature**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**类签名**'
- en: class [`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") (`sqlalchemy.event.registry.EventTarget`)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 类[`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") (`sqlalchemy.event.registry.EventTarget`)
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: User-defined class instrumentation extension.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 用户定义的类仪器扩展。
- en: '[`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") can be subclassed in
    order to change how class instrumentation proceeds. This class exists for the
    purposes of integration with other object management frameworks which would like
    to entirely modify the instrumentation methodology of the ORM, and is not intended
    for regular usage. For interception of class instrumentation events, see [`InstrumentationEvents`](../events.html#sqlalchemy.orm.InstrumentationEvents
    "sqlalchemy.orm.InstrumentationEvents").'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") 可以被子类化以改变类仪器化的进行方式。 此类存在的目的是与其他对象管理框架集成，这些框架希望完全修改
    ORM 的仪器方法，并且不适用于常规使用。 有关截取类仪器化事件，请参阅[`InstrumentationEvents`](../events.html#sqlalchemy.orm.InstrumentationEvents
    "sqlalchemy.orm.InstrumentationEvents")。'
- en: '**Members**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**成员**'
- en: '[dict_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.dict_getter),
    [get_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.get_instance_dict),
    [initialize_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.initialize_instance_dict),
    [install_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_descriptor),
    [install_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_member),
    [install_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_state),
    [instrument_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_attribute),
    [instrument_collection_class()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_collection_class),
    [manage()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manage), [manager_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manager_getter),
    [post_configure_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.post_configure_attribute),
    [remove_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.remove_state),
    [state_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.state_getter),
    [uninstall_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_descriptor),
    [uninstall_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_member),
    [unregister()](#sqlalchemy.ext.instrumentation.InstrumentationManager.unregister)'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '[dict_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.dict_getter),
    [get_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.get_instance_dict),
    [initialize_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.initialize_instance_dict),
    [install_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_descriptor),
    [install_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_member),
    [install_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_state),
    [instrument_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_attribute),
    [instrument_collection_class()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_collection_class),
    [manage()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manage), [manager_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manager_getter),
    [post_configure_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.post_configure_attribute),
    [remove_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.remove_state),
    [state_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.state_getter),
    [uninstall_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_descriptor),
    [uninstall_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_member),
    [unregister()](#sqlalchemy.ext.instrumentation.InstrumentationManager.unregister)'
- en: The API for this class should be considered as semi-stable, and may change slightly
    with new releases.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 此类的 API 应被视为半稳定的，并且可能会随着新版本略微更改。
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: An extensible sequence of callables which return instrumentation implementations
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可扩展的返回仪器实现的可调用序列
- en: When a class is registered, each callable will be passed a class object. If
    None is returned, the next finder in the sequence is consulted. Otherwise the
    return must be an instrumentation factory that follows the same guidelines as
    sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个类被注册时，每个可调用对象都将传递一个类对象。如果返回 None，则会查阅序列中的下一个查找器。否则，返回值必须是一个遵循与 sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER
    相同指南的仪器工厂。
- en: By default, the only finder is find_native_user_instrumentation_hook, which
    searches for INSTRUMENTATION_MANAGER. If all finders return None, standard ClassManager
    instrumentation is used.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，唯一的查找器是 find_native_user_instrumentation_hook，它搜索 INSTRUMENTATION_MANAGER。如果所有查找器都返回
    None，则使用标准的 ClassManager 仪器。
- en: '[PRE20]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Extends [`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") with additional bookkeeping,
    to accommodate multiple types of class managers.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 用额外的记录扩展了 [`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory")，以适应多种类型的类管理器。
- en: '**Class signature**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**类签名**'
- en: class [`sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry`](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry
    "sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry") ([`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory"))
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 类 [`sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry`](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry
    "sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry") ([`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory"))
- en: API Reference
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API 参考
- en: '| Object Name | Description |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 对象名称 | 描述 |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [ExtendedInstrumentationRegistry](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry)
    | Extends [`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") with additional bookkeeping,
    to accommodate multiple types of class managers. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| [扩展仪器注册表](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry)
    | 用额外的记录扩展了 [`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory")，以适应多种类型的类管理器。 |'
- en: '| [instrumentation_finders](#sqlalchemy.ext.instrumentation.instrumentation_finders)
    | An extensible sequence of callables which return instrumentation implementations
    |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| [instrumentation_finders](#sqlalchemy.ext.instrumentation.instrumentation_finders)
    | 一个可扩展的序列，其中包含返回仪器实现的可调用对象。 |'
- en: '| [INSTRUMENTATION_MANAGER](#sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER)
    | Attribute, elects custom instrumentation when present on a mapped class. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| [INSTRUMENTATION_MANAGER](#sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER)
    | 属性，在映射类上出现时选择自定义仪器。 |'
- en: '| [InstrumentationFactory](#sqlalchemy.orm.instrumentation.InstrumentationFactory)
    | Factory for new ClassManager instances. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| [仪器工厂](#sqlalchemy.orm.instrumentation.InstrumentationFactory) | 用于创建新的 ClassManager
    实例的工厂。 |'
- en: '| [InstrumentationManager](#sqlalchemy.ext.instrumentation.InstrumentationManager)
    | User-defined class instrumentation extension. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| [仪器管理器](#sqlalchemy.ext.instrumentation.InstrumentationManager) | 用户定义的类仪器扩展。
    |'
- en: '[PRE21]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Attribute, elects custom instrumentation when present on a mapped class.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 属性，在映射类上出现时选择自定义仪器。
- en: Allows a class to specify a slightly or wildly different technique for tracking
    changes made to mapped attributes and collections.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 允许一个类指定一种稍微或完全不同的技术来跟踪对映射属性和集合所做的更改。
- en: Only one instrumentation implementation is allowed in a given object inheritance
    hierarchy.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定对象继承层次结构中只允许有一个仪器实现。
- en: 'The value of this attribute must be a callable and will be passed a class object.
    The callable must return one of:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性的值必须是一个可调用对象，并将传递一个类对象。可调用对象必须返回以下之一：
- en: An instance of an [`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") or subclass
  id: totrans-78
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") 或其子类的实例'
- en: ''
  id: totrans-79
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-80
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: An object implementing all or some of InstrumentationManager (TODO)
  id: totrans-81
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现了所有或部分 InstrumentationManager 的对象（待办）
- en: ''
  id: totrans-82
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: A dictionary of callables, implementing all or some of the above (TODO)
  id: totrans-84
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个可调用对象的字典，实现了上述所有或部分功能（待办）
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-86
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: An instance of a [`ClassManager`](../internals.html#sqlalchemy.orm.ClassManager
    "sqlalchemy.orm.ClassManager") or subclass
  id: totrans-87
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`ClassManager`](../internals.html#sqlalchemy.orm.ClassManager "sqlalchemy.orm.ClassManager")
    或其子类的实例'
- en: This attribute is consulted by SQLAlchemy instrumentation resolution, once the
    [`sqlalchemy.ext.instrumentation`](#module-sqlalchemy.ext.instrumentation "sqlalchemy.ext.instrumentation")
    module has been imported. If custom finders are installed in the global instrumentation_finders
    list, they may or may not choose to honor this attribute.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦导入 [`sqlalchemy.ext.instrumentation`](#module-sqlalchemy.ext.instrumentation
    "sqlalchemy.ext.instrumentation") 模块，此属性将由 SQLAlchemy 仪器化解析所使用。如果在全局 `instrumentation_finders`
    列表中安装了自定义查找器，则它们可能会选择是否尊重此属性。
- en: '[PRE22]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Factory for new ClassManager instances.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 生成新的 `ClassManager` 实例的工厂。
- en: '**Class signature**'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**类签名**'
- en: class [`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") (`sqlalchemy.event.registry.EventTarget`)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 类 [`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") (`sqlalchemy.event.registry.EventTarget`)
- en: '[PRE23]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: User-defined class instrumentation extension.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 用户自定义类仪器化扩展。
- en: '[`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") can be subclassed in
    order to change how class instrumentation proceeds. This class exists for the
    purposes of integration with other object management frameworks which would like
    to entirely modify the instrumentation methodology of the ORM, and is not intended
    for regular usage. For interception of class instrumentation events, see [`InstrumentationEvents`](../events.html#sqlalchemy.orm.InstrumentationEvents
    "sqlalchemy.orm.InstrumentationEvents").'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过子类化 [`InstrumentationManager`](#sqlalchemy.ext.instrumentation.InstrumentationManager
    "sqlalchemy.ext.instrumentation.InstrumentationManager") 来更改类仪器化的方式。此类存在的目的是为了与其他希望完全修改
    ORM 的仪器化方法的对象管理框架集成，并不适用于常规使用。要拦截类仪器化事件，请参阅 [`InstrumentationEvents`](../events.html#sqlalchemy.orm.InstrumentationEvents
    "sqlalchemy.orm.InstrumentationEvents")。
- en: '**Members**'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**成员**'
- en: '[dict_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.dict_getter),
    [get_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.get_instance_dict),
    [initialize_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.initialize_instance_dict),
    [install_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_descriptor),
    [install_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_member),
    [install_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_state),
    [instrument_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_attribute),
    [instrument_collection_class()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_collection_class),
    [manage()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manage), [manager_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manager_getter),
    [post_configure_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.post_configure_attribute),
    [remove_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.remove_state),
    [state_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.state_getter),
    [uninstall_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_descriptor),
    [uninstall_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_member),
    [unregister()](#sqlalchemy.ext.instrumentation.InstrumentationManager.unregister)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[dict_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.dict_getter),
    [get_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.get_instance_dict),
    [initialize_instance_dict()](#sqlalchemy.ext.instrumentation.InstrumentationManager.initialize_instance_dict),
    [install_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_descriptor),
    [install_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_member),
    [install_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.install_state),
    [instrument_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_attribute),
    [instrument_collection_class()](#sqlalchemy.ext.instrumentation.InstrumentationManager.instrument_collection_class),
    [manage()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manage), [manager_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.manager_getter),
    [post_configure_attribute()](#sqlalchemy.ext.instrumentation.InstrumentationManager.post_configure_attribute),
    [remove_state()](#sqlalchemy.ext.instrumentation.InstrumentationManager.remove_state),
    [state_getter()](#sqlalchemy.ext.instrumentation.InstrumentationManager.state_getter),
    [uninstall_descriptor()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_descriptor),
    [uninstall_member()](#sqlalchemy.ext.instrumentation.InstrumentationManager.uninstall_member),
    [unregister()](#sqlalchemy.ext.instrumentation.InstrumentationManager.unregister)'
- en: The API for this class should be considered as semi-stable, and may change slightly
    with new releases.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 该类的 API 应被视为半稳定，可能会在新版本中略微更改。
- en: '[PRE24]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: An extensible sequence of callables which return instrumentation implementations
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可扩展的可调用序列，返回仪器化实现。
- en: When a class is registered, each callable will be passed a class object. If
    None is returned, the next finder in the sequence is consulted. Otherwise the
    return must be an instrumentation factory that follows the same guidelines as
    sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个类被注册时，每个可调用对象都将传递一个类对象。如果返回 None，则会查阅序列中的下一个查找器。否则，返回值必须是一个遵循与 sqlalchemy.ext.instrumentation.INSTRUMENTATION_MANAGER
    相同指南的检测工厂。
- en: By default, the only finder is find_native_user_instrumentation_hook, which
    searches for INSTRUMENTATION_MANAGER. If all finders return None, standard ClassManager
    instrumentation is used.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，唯一的查找器是 find_native_user_instrumentation_hook，它搜索 INSTRUMENTATION_MANAGER。如果所有查找器都返回
    None，则使用标准的 ClassManager 仪器化。
- en: '[PRE41]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Extends [`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory") with additional bookkeeping,
    to accommodate multiple types of class managers.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 通过额外的簿记扩展[`InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory")，以适应多种类型的类管理器。
- en: '**Class signature**'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**类签名**'
- en: class [`sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry`](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry
    "sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry") ([`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory"))
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 类[`sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry`](#sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry
    "sqlalchemy.ext.instrumentation.ExtendedInstrumentationRegistry")（[`sqlalchemy.orm.instrumentation.InstrumentationFactory`](#sqlalchemy.orm.instrumentation.InstrumentationFactory
    "sqlalchemy.orm.instrumentation.InstrumentationFactory")）
