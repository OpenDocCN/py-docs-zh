- en: 'Appendix 2: Considerations on Embedded Files'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/app2.html](https://pymupdf.readthedocs.io/en/latest/app2.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This chapter provides some background on embedded files support in PyMuPDF.
  prefs: []
  type: TYPE_NORMAL
- en: General
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting with version 1.4, PDF supports embedding arbitrary files as part (“Embedded
    File Streams”) of a PDF document file (see chapter “7.11.4 Embedded File Streams”,
    pp. 103 of the [Adobe PDF References](app3.html#adobemanual)).
  prefs: []
  type: TYPE_NORMAL
- en: In many aspects, this is comparable to concepts also found in ZIP files or the
    OLE technique in MS Windows. PDF embedded files do, however, *not* support directory
    structures as does the ZIP format. An embedded file can in turn contain embedded
    files itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages of this concept are that embedded files are under the PDF umbrella,
    benefitting from its permissions / password protection and integrity aspects:
    all data, which a PDF may reference or even may be dependent on, can be bundled
    into it and so form a single, consistent unit of information.'
  prefs: []
  type: TYPE_NORMAL
- en: In addition to embedded files, PDF 1.7 adds *collections* to its support range.
    This is an advanced way of storing and presenting meta information (i.e. arbitrary
    and extensible properties) of embedded files.
  prefs: []
  type: TYPE_NORMAL
- en: MuPDF Support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After adding initial support for collections (portfolios) and */EmbeddedFiles*
    in MuPDF version 1.11, this support was dropped again in version 1.15.
  prefs: []
  type: TYPE_NORMAL
- en: As a consequence, the cli utility *mutool* no longer offers access to embedded
    files.
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF – having implemented an */EmbeddedFiles* API in response in its version
    1.11.0 – was therefore forced to change gears starting with its version 1.16.0
    (we never published a MuPDF v1.15.x compatible PyMuPDF).
  prefs: []
  type: TYPE_NORMAL
- en: We are now maintaining our own code basis supporting embedded files. This code
    makes use of basic MuPDF dictionary and array functions only.
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF Support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We continue to support the full old API with respect to embedded files – with
    only minor, cosmetic changes.
  prefs: []
  type: TYPE_NORMAL
- en: There even also is a new function, which delivers a list of all names under
    which embedded data are registered in a PDF, [`Document.embfile_names()`](document.html#Document.embfile_names
    "Document.embfile_names").
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: General
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Starting with version 1.4, PDF supports embedding arbitrary files as part (“Embedded
    File Streams”) of a PDF document file (see chapter “7.11.4 Embedded File Streams”,
    pp. 103 of the [Adobe PDF References](app3.html#adobemanual)).
  prefs: []
  type: TYPE_NORMAL
- en: In many aspects, this is comparable to concepts also found in ZIP files or the
    OLE technique in MS Windows. PDF embedded files do, however, *not* support directory
    structures as does the ZIP format. An embedded file can in turn contain embedded
    files itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'Advantages of this concept are that embedded files are under the PDF umbrella,
    benefitting from its permissions / password protection and integrity aspects:
    all data, which a PDF may reference or even may be dependent on, can be bundled
    into it and so form a single, consistent unit of information.'
  prefs: []
  type: TYPE_NORMAL
- en: In addition to embedded files, PDF 1.7 adds *collections* to its support range.
    This is an advanced way of storing and presenting meta information (i.e. arbitrary
    and extensible properties) of embedded files.
  prefs: []
  type: TYPE_NORMAL
- en: MuPDF Support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After adding initial support for collections (portfolios) and */EmbeddedFiles*
    in MuPDF version 1.11, this support was dropped again in version 1.15.
  prefs: []
  type: TYPE_NORMAL
- en: As a consequence, the cli utility *mutool* no longer offers access to embedded
    files.
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF – having implemented an */EmbeddedFiles* API in response in its version
    1.11.0 – was therefore forced to change gears starting with its version 1.16.0
    (we never published a MuPDF v1.15.x compatible PyMuPDF).
  prefs: []
  type: TYPE_NORMAL
- en: We are now maintaining our own code basis supporting embedded files. This code
    makes use of basic MuPDF dictionary and array functions only.
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF Support
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We continue to support the full old API with respect to embedded files – with
    only minor, cosmetic changes.
  prefs: []
  type: TYPE_NORMAL
- en: There even also is a new function, which delivers a list of all names under
    which embedded data are registered in a PDF, [`Document.embfile_names()`](document.html#Document.embfile_names
    "Document.embfile_names").
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
