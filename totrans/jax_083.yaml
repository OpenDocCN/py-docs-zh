- en: API compatibility
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/api_compatibility.html`](https://jax.readthedocs.io/en/latest/api_compatibility.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: JAX is constantly evolving, and we want to be able to make improvements to its
    APIs. That said, we want to minimize churn for the JAX user community, and we
    try to make breaking changes rarely.
  prefs: []
  type: TYPE_NORMAL
- en: 'JAX follows a 3 month deprecation policy. When an incompatible change is made
    to an API, we will make our best effort to obey the following procedure:'
  prefs: []
  type: TYPE_NORMAL
- en: the change will be announced in `CHANGELOG.md` and in the doc string for the
    deprecated API, and the old API will issue a `DeprecationWarning`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: three months after the `jax` release that deprecated an API, we may remove the
    deprecated API at any time. Note that three months is a *lower* bound, and is
    intentionally chosen to be faster than that of many more mature projects. In practice,
    deprecations may take considerably longer, particularly if there are many users
    of a feature. If a three month deprecation period becomes problematic, please
    raise this with us.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We reserve the right to change this policy at any time.
  prefs: []
  type: TYPE_NORMAL
- en: What is covered?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Only public JAX APIs are covered, which includes the following modules:'
  prefs: []
  type: TYPE_NORMAL
- en: '`jax`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.dlpack`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.image`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.lax`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.nn`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.numpy`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.ops`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.profiler`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.random` (see details below)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.scipy`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.tree_util`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.test_util`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not everything in these modules is public. Over time, we are working to separate
    public and private APIs. Public APIs are documented in the JAX documentation.
    Additionally, our goal is that all non-public APIs should have names prefixed
    with underscores, although we do not entirely comply with this yet.
  prefs: []
  type: TYPE_NORMAL
- en: What is not covered?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: anything prefixed with an underscore.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax._src`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.core`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.linear_util`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.lib`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.prng`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.interpreters`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.experimental`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.example_libraries`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`jax.extend` (see [details](https://jax.readthedocs.io/en/latest/jax.extend.html))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This list is not exhaustive.
  prefs: []
  type: TYPE_NORMAL
- en: Numerics and randomness
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The *exact* values of numerical operations are not guaranteed to be stable across
    JAX releases. In fact, exact numerics are not necessarily stable at a given JAX
    version, across accelerator platforms, within or without `jax.jit`, and more.
  prefs: []
  type: TYPE_NORMAL
- en: For a fixed PRNG key input, the outputs of pseudorandom functions in `jax.random`
    may vary across JAX versions. The compatibility policy applies only to the output
    *distribution*. For example, the expression `jax.random.gumbel(jax.random.key(72))`
    may return a different value across JAX releases, but `jax.random.gumbel` will
    remain a pseudorandom generator for the Gumbel distribution.
  prefs: []
  type: TYPE_NORMAL
- en: We try to make such changes to pseudorandom values infrequently. When they happen,
    the changes are announced in the changelog, but do not follow a deprecation cycle.
    In some situations, JAX might expose a transient configuration flag that reverts
    the new behavior, to help users diagnose and update affected code. Such flags
    will last a deprecation window’s amount of time.
  prefs: []
  type: TYPE_NORMAL
