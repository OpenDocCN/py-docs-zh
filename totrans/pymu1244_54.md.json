["```py\n>>> dl = page.get_displaylist()              # create the display list \n```", "```py\n>>> pix = dl.get_pixmap()                    # create the page's pixmap \n```", "```py\n>>> tp = dl.get_textpage()                    # display list from above\n>>> rlist = tp.search(\"needle\")              # look up \"needle\" locations\n>>> for r in rlist:                          # work with the found locations, e.g.\n pix.invert_irect(r.irect)             # invert colors in the rectangles \n```", "```py\n>>> txt  = tp.extractText()                  # plain text format\n>>> json = tp.extractJSON()                  # json format\n>>> html = tp.extractHTML()                  # HTML format\n>>> xml  = tp.extractXML()                   # XML format\n>>> xml  = tp.extractXHTML()                 # XHTML format \n```", "```py\n>>> flags = pymupdf.TEXT_PRESERVE_LIGATURES | pymupdf.TEXT_PRESERVE_WHITESPACE\n>>> tp = dl.get_textpage(flags) \n```", "```py\n>>> flags = pymupdf.TEXT_PRESERVE_LIGATURES | pymupdf.TEXT_PRESERVE_WHITESPACE | pymupdf.TEXT_PRESERVE_IMAGES \n```", "```py\n>>> dl = page.get_displaylist()              # create the display list \n```", "```py\n>>> pix = dl.get_pixmap()                    # create the page's pixmap \n```", "```py\n>>> tp = dl.get_textpage()                    # display list from above\n>>> rlist = tp.search(\"needle\")              # look up \"needle\" locations\n>>> for r in rlist:                          # work with the found locations, e.g.\n pix.invert_irect(r.irect)             # invert colors in the rectangles \n```", "```py\n>>> txt  = tp.extractText()                  # plain text format\n>>> json = tp.extractJSON()                  # json format\n>>> html = tp.extractHTML()                  # HTML format\n>>> xml  = tp.extractXML()                   # XML format\n>>> xml  = tp.extractXHTML()                 # XHTML format \n```", "```py\n>>> flags = pymupdf.TEXT_PRESERVE_LIGATURES | pymupdf.TEXT_PRESERVE_WHITESPACE\n>>> tp = dl.get_textpage(flags) \n```", "```py\n>>> flags = pymupdf.TEXT_PRESERVE_LIGATURES | pymupdf.TEXT_PRESERVE_WHITESPACE | pymupdf.TEXT_PRESERVE_IMAGES \n```", "```py\n>>> flags = pymupdf.TEXT_PRESERVE_LIGATURES | pymupdf.TEXT_PRESERVE_WHITESPACE\n>>> tp = dl.get_textpage(flags) \n```", "```py\n>>> flags = pymupdf.TEXT_PRESERVE_LIGATURES | pymupdf.TEXT_PRESERVE_WHITESPACE | pymupdf.TEXT_PRESERVE_IMAGES \n```"]