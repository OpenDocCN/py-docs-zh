["```py\n>>> from sqlalchemy import select\n>>> stmt = select(User).where(User.name == \"spongebob\")\n```", "```py\n>>> result = session.execute(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.name  =  ?\n[...]  ('spongebob',)\n>>> for user_obj in result.scalars():\n...     print(f\"{user_obj.name} {user_obj.fullname}\")\nspongebob Spongebob Squarepants\n```", "```py\n>>> result = session.execute(select(User).order_by(User.id))\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  ORDER  BY  user_account.id\n[...]  () \n```", "```py\n>>> result.all()\n[(User(id=1, name='spongebob', fullname='Spongebob Squarepants'),),\n (User(id=2, name='sandy', fullname='Sandy Cheeks'),),\n (User(id=3, name='patrick', fullname='Patrick Star'),),\n (User(id=4, name='squidward', fullname='Squidward Tentacles'),),\n (User(id=5, name='ehkrabs', fullname='Eugene H. Krabs'),)]\n```", "```py\n>>> session.scalars(select(User).order_by(User.id)).all()\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  ORDER  BY  user_account.id\n[...]  ()\n[User(id=1, name='spongebob', fullname='Spongebob Squarepants'),\n User(id=2, name='sandy', fullname='Sandy Cheeks'),\n User(id=3, name='patrick', fullname='Patrick Star'),\n User(id=4, name='squidward', fullname='Squidward Tentacles'),\n User(id=5, name='ehkrabs', fullname='Eugene H. Krabs')]\n```", "```py\n>>> stmt = select(User, Address).join(User.addresses).order_by(User.id, Address.id)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User.name} {row.Address.email_address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\naddress.id  AS  id_1,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id\n[...]  ()\nspongebob spongebob@sqlalchemy.org\nsandy sandy@sqlalchemy.org\nsandy squirrel@squirrelpower.org\npatrick pat999@aol.com\nsquidward stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> user_cls = aliased(User, name=\"user_cls\")\n>>> email_cls = aliased(Address, name=\"email\")\n>>> stmt = (\n...     select(user_cls, email_cls)\n...     .join(user_cls.addresses.of_type(email_cls))\n...     .order_by(user_cls.id, email_cls.id)\n... )\n>>> row = session.execute(stmt).first()\nSELECT  user_cls.id,  user_cls.name,  user_cls.fullname,\nemail.id  AS  id_1,  email.user_id,  email.email_address\nFROM  user_account  AS  user_cls  JOIN  address  AS  email\nON  user_cls.id  =  email.user_id  ORDER  BY  user_cls.id,  email.id\n[...]  ()\n>>> print(f\"{row.user_cls.name}  {row.email.email_address}\")\nspongebob spongebob@sqlalchemy.org\n```", "```py\n>>> stmt = (\n...     select(User).join(User.addresses).add_columns(Address).order_by(User.id, Address.id)\n... )\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\naddress.id  AS  id_1,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id \n```", "```py\n>>> result = session.execute(\n...     select(User.name, Address.email_address)\n...     .join(User.addresses)\n...     .order_by(User.id, Address.id)\n... )\nSELECT  user_account.name,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id\n[...]  () \n```", "```py\n>>> for row in result:\n...     print(f\"{row.name}  {row.email_address}\")\nspongebob  spongebob@sqlalchemy.org\nsandy  sandy@sqlalchemy.org\nsandy  squirrel@squirrelpower.org\npatrick  pat999@aol.com\nsquidward  stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import Bundle\n>>> stmt = select(\n...     Bundle(\"user\", User.name, User.fullname),\n...     Bundle(\"email\", Address.email_address),\n... ).join_from(User, Address)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.user.name} {row.user.fullname} {row.email.email_address}\")\nSELECT  user_account.name,  user_account.fullname,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\n[...]  ()\nspongebob Spongebob Squarepants spongebob@sqlalchemy.org\nsandy Sandy Cheeks sandy@sqlalchemy.org\nsandy Sandy Cheeks squirrel@squirrelpower.org\npatrick Patrick Star pat999@aol.com\nsquidward Squidward Tentacles stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> u1 = aliased(User)\n>>> print(select(u1).order_by(u1.id))\nSELECT  user_account_1.id,  user_account_1.name,  user_account_1.fullname\nFROM  user_account  AS  user_account_1  ORDER  BY  user_account_1.id \n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> u1 = aliased(User, name=\"u1\")\n>>> stmt = select(u1).order_by(u1.id)\n>>> row = session.execute(stmt).first()\nSELECT  u1.id,  u1.name,  u1.fullname\nFROM  user_account  AS  u1  ORDER  BY  u1.id\n[...]  ()\n>>> print(f\"{row.u1.name}\")\nspongebob\n```", "```py\n>>> from sqlalchemy import text\n>>> textual_sql = text(\"SELECT id, name, fullname FROM user_account ORDER BY id\")\n```", "```py\n>>> textual_sql = textual_sql.columns(User.id, User.name, User.fullname)\n```", "```py\n>>> orm_sql = select(User).from_statement(textual_sql)\n>>> for user_obj in session.execute(orm_sql).scalars():\n...     print(user_obj)\nSELECT  id,  name,  fullname  FROM  user_account  ORDER  BY  id\n[...]  ()\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> orm_subquery = aliased(User, textual_sql.subquery())\n>>> stmt = select(orm_subquery)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  id,  name,  fullname  FROM  user_account  ORDER  BY  id)  AS  anon_1\n[...]  ()\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> inner_stmt = select(User).where(User.id < 7).order_by(User.id)\n>>> subq = inner_stmt.subquery()\n>>> aliased_user = aliased(User, subq)\n>>> stmt = select(aliased_user)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\n  SELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  ORDER  BY  user_account.id)  AS  anon_1\n[generated  in  ...]  (7,)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> from sqlalchemy import union_all\n>>> u = union_all(\n...     select(User).where(User.id < 2), select(User).where(User.id == 3)\n... ).order_by(User.id)\n>>> stmt = select(User).from_statement(u)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  UNION  ALL  SELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.id  =  ?  ORDER  BY  id\n[generated  in  ...]  (2,  3)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=3, name='patrick', fullname='Patrick Star')\n```", "```py\n>>> subq = union_all(\n...     select(User).where(User.id < 2), select(User).where(User.id == 3)\n... ).subquery()\n>>> user_alias = aliased(User, subq)\n>>> stmt = select(user_alias).order_by(user_alias.id)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  UNION  ALL  SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  =  ?)  AS  anon_1  ORDER  BY  anon_1.id\n[generated  in  ...]  (2,  3)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=3, name='patrick', fullname='Patrick Star')\n```", "```py\n>>> stmt = select(User).join(User.addresses)\n```", "```py\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(User.orders).join(Order.items)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  user_order  ON  user_account.id  =  user_order.user_id\nJOIN  order_items  AS  order_items_1  ON  user_order.id  =  order_items_1.order_id\nJOIN  item  ON  item.id  =  order_items_1.item_id \n```", "```py\n>>> stmt = select(User).join(User.orders).join(Order.items).join(User.addresses)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  user_order  ON  user_account.id  =  user_order.user_id\nJOIN  order_items  AS  order_items_1  ON  user_order.id  =  order_items_1.order_id\nJOIN  item  ON  item.id  =  order_items_1.item_id\nJOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address, User.id == Address.user_id)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address, User.addresses)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User.fullname).join(\n...     User.addresses.and_(Address.email_address == \"squirrel@squirrelpower.org\")\n... )\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nJOIN  address  ON  user_account.id  =  address.user_id  AND  address.email_address  =  ?\n[...]  ('squirrel@squirrelpower.org',)\n[('Sandy Cheeks',)]\n```", "```py\n>>> address_alias_1 = aliased(Address)\n>>> address_alias_2 = aliased(Address)\n>>> stmt = (\n...     select(User)\n...     .join(address_alias_1, User.addresses)\n...     .where(address_alias_1.email_address == \"patrick@aol.com\")\n...     .join(address_alias_2, User.addresses)\n...     .where(address_alias_2.email_address == \"patrick@gmail.com\")\n... )\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  address  AS  address_1  ON  user_account.id  =  address_1.user_id\nJOIN  address  AS  address_2  ON  user_account.id  =  address_2.user_id\nWHERE  address_1.email_address  =  :email_address_1\nAND  address_2.email_address  =  :email_address_2 \n```", "```py\n>>> print(\n...     select(User)\n...     .join(User.addresses.of_type(address_alias_1))\n...     .where(address_alias_1.email_address == \"patrick@aol.com\")\n...     .join(User.addresses.of_type(address_alias_2))\n...     .where(address_alias_2.email_address == \"patrick@gmail.com\")\n... )\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  address  AS  address_1  ON  user_account.id  =  address_1.user_id\nJOIN  address  AS  address_2  ON  user_account.id  =  address_2.user_id\nWHERE  address_1.email_address  =  :email_address_1\nAND  address_2.email_address  =  :email_address_2 \n```", "```py\n>>> user_alias_1 = aliased(User)\n>>> print(select(user_alias_1.name).join(user_alias_1.addresses))\nSELECT  user_account_1.name\nFROM  user_account  AS  user_account_1\nJOIN  address  ON  user_account_1.id  =  address.user_id \n```", "```py\n>>> subq = select(Address).where(Address.email_address == \"pat999@aol.com\").subquery()\n>>> stmt = select(User).join(subq, User.id == subq.c.user_id)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  :email_address_1)  AS  anon_1\nON  user_account.id  =  anon_1.user_id \n```", "```py\n>>> address_subq = aliased(Address, subq, name=\"address\")\n>>> stmt = select(User, address_subq).join(address_subq)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User} {row.address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\nanon_1.id  AS  id_1,  anon_1.user_id,  anon_1.email_address\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  ?)  AS  anon_1  ON  user_account.id  =  anon_1.user_id\n[...]  ('pat999@aol.com',)\nUser(id=3, name='patrick', fullname='Patrick Star') Address(id=4, email_address='pat999@aol.com')\n```", "```py\n>>> address_subq = aliased(Address, subq, name=\"address\")\n>>> stmt = select(User, address_subq).join(User.addresses.of_type(address_subq))\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User} {row.address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\nanon_1.id  AS  id_1,  anon_1.user_id,  anon_1.email_address\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  ?)  AS  anon_1  ON  user_account.id  =  anon_1.user_id\n[...]  ('pat999@aol.com',)\nUser(id=3, name='patrick', fullname='Patrick Star') Address(id=4, email_address='pat999@aol.com')\n```", "```py\n>>> user_address_subq = (\n...     select(User.id, User.name, User.fullname, Address.id, Address.email_address)\n...     .join_from(User, Address)\n...     .where(Address.email_address.in_([\"pat999@aol.com\", \"squirrel@squirrelpower.org\"]))\n...     .subquery()\n... )\n```", "```py\n>>> user_alias = aliased(User, user_address_subq, name=\"user\")\n>>> address_alias = aliased(Address, user_address_subq, name=\"address\")\n```", "```py\n>>> stmt = select(user_alias, address_alias).where(user_alias.name == \"sandy\")\n>>> for row in session.execute(stmt):\n...     print(f\"{row.user} {row.address}\")\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname,  anon_1.id_1,  anon_1.email_address\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,\nuser_account.fullname  AS  fullname,  address.id  AS  id_1,\naddress.email_address  AS  email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  address.email_address  IN  (?,  ?))  AS  anon_1\nWHERE  anon_1.name  =  ?\n[...]  ('pat999@aol.com',  'squirrel@squirrelpower.org',  'sandy')\nUser(id=2, name='sandy', fullname='Sandy Cheeks') Address(id=3, email_address='squirrel@squirrelpower.org')\n```", "```py\n>>> stmt = select(Address).join_from(User, User.addresses).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).join_from(User, Address).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).select_from(User).join(Address).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).select_from(User).join(Address.user).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  address  JOIN  user_account  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> from sqlalchemy.sql import join\n>>>\n>>> user_table = User.__table__\n>>> address_table = Address.__table__\n>>>\n>>> j = address_table.join(user_table, user_table.c.id == address_table.c.user_id)\n>>> stmt = (\n...     select(address_table)\n...     .select_from(user_table)\n...     .select_from(j)\n...     .where(user_table.c.name == \"sandy\")\n... )\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  address  JOIN  user_account  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(User.fullname).where(\n...     User.addresses.any(Address.email_address == \"squirrel@squirrelpower.org\")\n... )\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nWHERE  EXISTS  (SELECT  1\nFROM  address\nWHERE  user_account.id  =  address.user_id  AND  address.email_address  =  ?)\n[...]  ('squirrel@squirrelpower.org',)\n[('Sandy Cheeks',)]\n```", "```py\n>>> stmt = select(User.fullname).where(~User.addresses.any())\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nWHERE  NOT  (EXISTS  (SELECT  1\nFROM  address\nWHERE  user_account.id  =  address.user_id))\n[...]  ()\n[('Eugene H. Krabs',)]\n```", "```py\n>>> stmt = select(Address.email_address).where(Address.user.has(User.name == \"sandy\"))\n>>> session.execute(stmt).all()\nSELECT  address.email_address\nFROM  address\nWHERE  EXISTS  (SELECT  1\nFROM  user_account\nWHERE  user_account.id  =  address.user_id  AND  user_account.name  =  ?)\n[...]  ('sandy',)\n[('sandy@sqlalchemy.org',), ('squirrel@squirrelpower.org',)]\n```", "```py\n    >>> user_obj = session.get(User, 1)\n    SELECT  ...\n    >>> print(select(Address).where(Address.user == user_obj))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  :param_1  =  address.user_id \n    ```", "```py\n    >>> print(select(Address).where(Address.user != user_obj))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  address.user_id  !=  :user_id_1  OR  address.user_id  IS  NULL \n    ```", "```py\n    >>> address_obj = session.get(Address, 1)\n    SELECT  ...\n    >>> print(select(User).where(User.addresses.contains(address_obj)))\n    SELECT  user_account.id,  user_account.name,  user_account.fullname\n    FROM  user_account\n    WHERE  user_account.id  =  :param_1 \n    ```", "```py\n    >>> from sqlalchemy.orm import with_parent\n    >>> print(select(Address).where(with_parent(user_obj, User.addresses)))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  :param_1  =  address.user_id \n    ```", "```py\n>>> result = session.execute(select(User).order_by(User.id))\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  ORDER  BY  user_account.id\n[...]  () \n```", "```py\n>>> result.all()\n[(User(id=1, name='spongebob', fullname='Spongebob Squarepants'),),\n (User(id=2, name='sandy', fullname='Sandy Cheeks'),),\n (User(id=3, name='patrick', fullname='Patrick Star'),),\n (User(id=4, name='squidward', fullname='Squidward Tentacles'),),\n (User(id=5, name='ehkrabs', fullname='Eugene H. Krabs'),)]\n```", "```py\n>>> session.scalars(select(User).order_by(User.id)).all()\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  ORDER  BY  user_account.id\n[...]  ()\n[User(id=1, name='spongebob', fullname='Spongebob Squarepants'),\n User(id=2, name='sandy', fullname='Sandy Cheeks'),\n User(id=3, name='patrick', fullname='Patrick Star'),\n User(id=4, name='squidward', fullname='Squidward Tentacles'),\n User(id=5, name='ehkrabs', fullname='Eugene H. Krabs')]\n```", "```py\n>>> stmt = select(User, Address).join(User.addresses).order_by(User.id, Address.id)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User.name} {row.Address.email_address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\naddress.id  AS  id_1,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id\n[...]  ()\nspongebob spongebob@sqlalchemy.org\nsandy sandy@sqlalchemy.org\nsandy squirrel@squirrelpower.org\npatrick pat999@aol.com\nsquidward stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> user_cls = aliased(User, name=\"user_cls\")\n>>> email_cls = aliased(Address, name=\"email\")\n>>> stmt = (\n...     select(user_cls, email_cls)\n...     .join(user_cls.addresses.of_type(email_cls))\n...     .order_by(user_cls.id, email_cls.id)\n... )\n>>> row = session.execute(stmt).first()\nSELECT  user_cls.id,  user_cls.name,  user_cls.fullname,\nemail.id  AS  id_1,  email.user_id,  email.email_address\nFROM  user_account  AS  user_cls  JOIN  address  AS  email\nON  user_cls.id  =  email.user_id  ORDER  BY  user_cls.id,  email.id\n[...]  ()\n>>> print(f\"{row.user_cls.name}  {row.email.email_address}\")\nspongebob spongebob@sqlalchemy.org\n```", "```py\n>>> stmt = (\n...     select(User).join(User.addresses).add_columns(Address).order_by(User.id, Address.id)\n... )\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\naddress.id  AS  id_1,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id \n```", "```py\n>>> result = session.execute(\n...     select(User.name, Address.email_address)\n...     .join(User.addresses)\n...     .order_by(User.id, Address.id)\n... )\nSELECT  user_account.name,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id\n[...]  () \n```", "```py\n>>> for row in result:\n...     print(f\"{row.name}  {row.email_address}\")\nspongebob  spongebob@sqlalchemy.org\nsandy  sandy@sqlalchemy.org\nsandy  squirrel@squirrelpower.org\npatrick  pat999@aol.com\nsquidward  stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import Bundle\n>>> stmt = select(\n...     Bundle(\"user\", User.name, User.fullname),\n...     Bundle(\"email\", Address.email_address),\n... ).join_from(User, Address)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.user.name} {row.user.fullname} {row.email.email_address}\")\nSELECT  user_account.name,  user_account.fullname,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\n[...]  ()\nspongebob Spongebob Squarepants spongebob@sqlalchemy.org\nsandy Sandy Cheeks sandy@sqlalchemy.org\nsandy Sandy Cheeks squirrel@squirrelpower.org\npatrick Patrick Star pat999@aol.com\nsquidward Squidward Tentacles stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> u1 = aliased(User)\n>>> print(select(u1).order_by(u1.id))\nSELECT  user_account_1.id,  user_account_1.name,  user_account_1.fullname\nFROM  user_account  AS  user_account_1  ORDER  BY  user_account_1.id \n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> u1 = aliased(User, name=\"u1\")\n>>> stmt = select(u1).order_by(u1.id)\n>>> row = session.execute(stmt).first()\nSELECT  u1.id,  u1.name,  u1.fullname\nFROM  user_account  AS  u1  ORDER  BY  u1.id\n[...]  ()\n>>> print(f\"{row.u1.name}\")\nspongebob\n```", "```py\n>>> from sqlalchemy import text\n>>> textual_sql = text(\"SELECT id, name, fullname FROM user_account ORDER BY id\")\n```", "```py\n>>> textual_sql = textual_sql.columns(User.id, User.name, User.fullname)\n```", "```py\n>>> orm_sql = select(User).from_statement(textual_sql)\n>>> for user_obj in session.execute(orm_sql).scalars():\n...     print(user_obj)\nSELECT  id,  name,  fullname  FROM  user_account  ORDER  BY  id\n[...]  ()\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> orm_subquery = aliased(User, textual_sql.subquery())\n>>> stmt = select(orm_subquery)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  id,  name,  fullname  FROM  user_account  ORDER  BY  id)  AS  anon_1\n[...]  ()\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> inner_stmt = select(User).where(User.id < 7).order_by(User.id)\n>>> subq = inner_stmt.subquery()\n>>> aliased_user = aliased(User, subq)\n>>> stmt = select(aliased_user)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\n  SELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  ORDER  BY  user_account.id)  AS  anon_1\n[generated  in  ...]  (7,)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> from sqlalchemy import union_all\n>>> u = union_all(\n...     select(User).where(User.id < 2), select(User).where(User.id == 3)\n... ).order_by(User.id)\n>>> stmt = select(User).from_statement(u)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  UNION  ALL  SELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.id  =  ?  ORDER  BY  id\n[generated  in  ...]  (2,  3)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=3, name='patrick', fullname='Patrick Star')\n```", "```py\n>>> subq = union_all(\n...     select(User).where(User.id < 2), select(User).where(User.id == 3)\n... ).subquery()\n>>> user_alias = aliased(User, subq)\n>>> stmt = select(user_alias).order_by(user_alias.id)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  UNION  ALL  SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  =  ?)  AS  anon_1  ORDER  BY  anon_1.id\n[generated  in  ...]  (2,  3)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=3, name='patrick', fullname='Patrick Star')\n```", "```py\n>>> result = session.execute(select(User).order_by(User.id))\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  ORDER  BY  user_account.id\n[...]  () \n```", "```py\n>>> result.all()\n[(User(id=1, name='spongebob', fullname='Spongebob Squarepants'),),\n (User(id=2, name='sandy', fullname='Sandy Cheeks'),),\n (User(id=3, name='patrick', fullname='Patrick Star'),),\n (User(id=4, name='squidward', fullname='Squidward Tentacles'),),\n (User(id=5, name='ehkrabs', fullname='Eugene H. Krabs'),)]\n```", "```py\n>>> session.scalars(select(User).order_by(User.id)).all()\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  ORDER  BY  user_account.id\n[...]  ()\n[User(id=1, name='spongebob', fullname='Spongebob Squarepants'),\n User(id=2, name='sandy', fullname='Sandy Cheeks'),\n User(id=3, name='patrick', fullname='Patrick Star'),\n User(id=4, name='squidward', fullname='Squidward Tentacles'),\n User(id=5, name='ehkrabs', fullname='Eugene H. Krabs')]\n```", "```py\n>>> stmt = select(User, Address).join(User.addresses).order_by(User.id, Address.id)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User.name} {row.Address.email_address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\naddress.id  AS  id_1,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id\n[...]  ()\nspongebob spongebob@sqlalchemy.org\nsandy sandy@sqlalchemy.org\nsandy squirrel@squirrelpower.org\npatrick pat999@aol.com\nsquidward stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> user_cls = aliased(User, name=\"user_cls\")\n>>> email_cls = aliased(Address, name=\"email\")\n>>> stmt = (\n...     select(user_cls, email_cls)\n...     .join(user_cls.addresses.of_type(email_cls))\n...     .order_by(user_cls.id, email_cls.id)\n... )\n>>> row = session.execute(stmt).first()\nSELECT  user_cls.id,  user_cls.name,  user_cls.fullname,\nemail.id  AS  id_1,  email.user_id,  email.email_address\nFROM  user_account  AS  user_cls  JOIN  address  AS  email\nON  user_cls.id  =  email.user_id  ORDER  BY  user_cls.id,  email.id\n[...]  ()\n>>> print(f\"{row.user_cls.name}  {row.email.email_address}\")\nspongebob spongebob@sqlalchemy.org\n```", "```py\n>>> stmt = (\n...     select(User).join(User.addresses).add_columns(Address).order_by(User.id, Address.id)\n... )\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\naddress.id  AS  id_1,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id \n```", "```py\n>>> result = session.execute(\n...     select(User.name, Address.email_address)\n...     .join(User.addresses)\n...     .order_by(User.id, Address.id)\n... )\nSELECT  user_account.name,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nORDER  BY  user_account.id,  address.id\n[...]  () \n```", "```py\n>>> for row in result:\n...     print(f\"{row.name}  {row.email_address}\")\nspongebob  spongebob@sqlalchemy.org\nsandy  sandy@sqlalchemy.org\nsandy  squirrel@squirrelpower.org\npatrick  pat999@aol.com\nsquidward  stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import Bundle\n>>> stmt = select(\n...     Bundle(\"user\", User.name, User.fullname),\n...     Bundle(\"email\", Address.email_address),\n... ).join_from(User, Address)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.user.name} {row.user.fullname} {row.email.email_address}\")\nSELECT  user_account.name,  user_account.fullname,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\n[...]  ()\nspongebob Spongebob Squarepants spongebob@sqlalchemy.org\nsandy Sandy Cheeks sandy@sqlalchemy.org\nsandy Sandy Cheeks squirrel@squirrelpower.org\npatrick Patrick Star pat999@aol.com\nsquidward Squidward Tentacles stentcl@sqlalchemy.org\n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> u1 = aliased(User)\n>>> print(select(u1).order_by(u1.id))\nSELECT  user_account_1.id,  user_account_1.name,  user_account_1.fullname\nFROM  user_account  AS  user_account_1  ORDER  BY  user_account_1.id \n```", "```py\n>>> from sqlalchemy.orm import aliased\n>>> u1 = aliased(User, name=\"u1\")\n>>> stmt = select(u1).order_by(u1.id)\n>>> row = session.execute(stmt).first()\nSELECT  u1.id,  u1.name,  u1.fullname\nFROM  user_account  AS  u1  ORDER  BY  u1.id\n[...]  ()\n>>> print(f\"{row.u1.name}\")\nspongebob\n```", "```py\n>>> from sqlalchemy import text\n>>> textual_sql = text(\"SELECT id, name, fullname FROM user_account ORDER BY id\")\n```", "```py\n>>> textual_sql = textual_sql.columns(User.id, User.name, User.fullname)\n```", "```py\n>>> orm_sql = select(User).from_statement(textual_sql)\n>>> for user_obj in session.execute(orm_sql).scalars():\n...     print(user_obj)\nSELECT  id,  name,  fullname  FROM  user_account  ORDER  BY  id\n[...]  ()\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> orm_subquery = aliased(User, textual_sql.subquery())\n>>> stmt = select(orm_subquery)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  id,  name,  fullname  FROM  user_account  ORDER  BY  id)  AS  anon_1\n[...]  ()\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> inner_stmt = select(User).where(User.id < 7).order_by(User.id)\n>>> subq = inner_stmt.subquery()\n>>> aliased_user = aliased(User, subq)\n>>> stmt = select(aliased_user)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\n  SELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  ORDER  BY  user_account.id)  AS  anon_1\n[generated  in  ...]  (7,)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=2, name='sandy', fullname='Sandy Cheeks')\nUser(id=3, name='patrick', fullname='Patrick Star')\nUser(id=4, name='squidward', fullname='Squidward Tentacles')\nUser(id=5, name='ehkrabs', fullname='Eugene H. Krabs')\n```", "```py\n>>> from sqlalchemy import union_all\n>>> u = union_all(\n...     select(User).where(User.id < 2), select(User).where(User.id == 3)\n... ).order_by(User.id)\n>>> stmt = select(User).from_statement(u)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  UNION  ALL  SELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nWHERE  user_account.id  =  ?  ORDER  BY  id\n[generated  in  ...]  (2,  3)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=3, name='patrick', fullname='Patrick Star')\n```", "```py\n>>> subq = union_all(\n...     select(User).where(User.id < 2), select(User).where(User.id == 3)\n... ).subquery()\n>>> user_alias = aliased(User, subq)\n>>> stmt = select(user_alias).order_by(user_alias.id)\n>>> for user_obj in session.execute(stmt).scalars():\n...     print(user_obj)\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  <  ?  UNION  ALL  SELECT  user_account.id  AS  id,  user_account.name  AS  name,  user_account.fullname  AS  fullname\nFROM  user_account\nWHERE  user_account.id  =  ?)  AS  anon_1  ORDER  BY  anon_1.id\n[generated  in  ...]  (2,  3)\nUser(id=1, name='spongebob', fullname='Spongebob Squarepants')\nUser(id=3, name='patrick', fullname='Patrick Star')\n```", "```py\n>>> stmt = select(User).join(User.addresses)\n```", "```py\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(User.orders).join(Order.items)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  user_order  ON  user_account.id  =  user_order.user_id\nJOIN  order_items  AS  order_items_1  ON  user_order.id  =  order_items_1.order_id\nJOIN  item  ON  item.id  =  order_items_1.item_id \n```", "```py\n>>> stmt = select(User).join(User.orders).join(Order.items).join(User.addresses)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  user_order  ON  user_account.id  =  user_order.user_id\nJOIN  order_items  AS  order_items_1  ON  user_order.id  =  order_items_1.order_id\nJOIN  item  ON  item.id  =  order_items_1.item_id\nJOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address, User.id == Address.user_id)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address, User.addresses)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User.fullname).join(\n...     User.addresses.and_(Address.email_address == \"squirrel@squirrelpower.org\")\n... )\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nJOIN  address  ON  user_account.id  =  address.user_id  AND  address.email_address  =  ?\n[...]  ('squirrel@squirrelpower.org',)\n[('Sandy Cheeks',)]\n```", "```py\n>>> address_alias_1 = aliased(Address)\n>>> address_alias_2 = aliased(Address)\n>>> stmt = (\n...     select(User)\n...     .join(address_alias_1, User.addresses)\n...     .where(address_alias_1.email_address == \"patrick@aol.com\")\n...     .join(address_alias_2, User.addresses)\n...     .where(address_alias_2.email_address == \"patrick@gmail.com\")\n... )\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  address  AS  address_1  ON  user_account.id  =  address_1.user_id\nJOIN  address  AS  address_2  ON  user_account.id  =  address_2.user_id\nWHERE  address_1.email_address  =  :email_address_1\nAND  address_2.email_address  =  :email_address_2 \n```", "```py\n>>> print(\n...     select(User)\n...     .join(User.addresses.of_type(address_alias_1))\n...     .where(address_alias_1.email_address == \"patrick@aol.com\")\n...     .join(User.addresses.of_type(address_alias_2))\n...     .where(address_alias_2.email_address == \"patrick@gmail.com\")\n... )\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  address  AS  address_1  ON  user_account.id  =  address_1.user_id\nJOIN  address  AS  address_2  ON  user_account.id  =  address_2.user_id\nWHERE  address_1.email_address  =  :email_address_1\nAND  address_2.email_address  =  :email_address_2 \n```", "```py\n>>> user_alias_1 = aliased(User)\n>>> print(select(user_alias_1.name).join(user_alias_1.addresses))\nSELECT  user_account_1.name\nFROM  user_account  AS  user_account_1\nJOIN  address  ON  user_account_1.id  =  address.user_id \n```", "```py\n>>> subq = select(Address).where(Address.email_address == \"pat999@aol.com\").subquery()\n>>> stmt = select(User).join(subq, User.id == subq.c.user_id)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  :email_address_1)  AS  anon_1\nON  user_account.id  =  anon_1.user_id \n```", "```py\n>>> address_subq = aliased(Address, subq, name=\"address\")\n>>> stmt = select(User, address_subq).join(address_subq)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User} {row.address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\nanon_1.id  AS  id_1,  anon_1.user_id,  anon_1.email_address\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  ?)  AS  anon_1  ON  user_account.id  =  anon_1.user_id\n[...]  ('pat999@aol.com',)\nUser(id=3, name='patrick', fullname='Patrick Star') Address(id=4, email_address='pat999@aol.com')\n```", "```py\n>>> address_subq = aliased(Address, subq, name=\"address\")\n>>> stmt = select(User, address_subq).join(User.addresses.of_type(address_subq))\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User} {row.address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\nanon_1.id  AS  id_1,  anon_1.user_id,  anon_1.email_address\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  ?)  AS  anon_1  ON  user_account.id  =  anon_1.user_id\n[...]  ('pat999@aol.com',)\nUser(id=3, name='patrick', fullname='Patrick Star') Address(id=4, email_address='pat999@aol.com')\n```", "```py\n>>> user_address_subq = (\n...     select(User.id, User.name, User.fullname, Address.id, Address.email_address)\n...     .join_from(User, Address)\n...     .where(Address.email_address.in_([\"pat999@aol.com\", \"squirrel@squirrelpower.org\"]))\n...     .subquery()\n... )\n```", "```py\n>>> user_alias = aliased(User, user_address_subq, name=\"user\")\n>>> address_alias = aliased(Address, user_address_subq, name=\"address\")\n```", "```py\n>>> stmt = select(user_alias, address_alias).where(user_alias.name == \"sandy\")\n>>> for row in session.execute(stmt):\n...     print(f\"{row.user} {row.address}\")\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname,  anon_1.id_1,  anon_1.email_address\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,\nuser_account.fullname  AS  fullname,  address.id  AS  id_1,\naddress.email_address  AS  email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  address.email_address  IN  (?,  ?))  AS  anon_1\nWHERE  anon_1.name  =  ?\n[...]  ('pat999@aol.com',  'squirrel@squirrelpower.org',  'sandy')\nUser(id=2, name='sandy', fullname='Sandy Cheeks') Address(id=3, email_address='squirrel@squirrelpower.org')\n```", "```py\n>>> stmt = select(Address).join_from(User, User.addresses).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).join_from(User, Address).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).select_from(User).join(Address).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).select_from(User).join(Address.user).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  address  JOIN  user_account  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> from sqlalchemy.sql import join\n>>>\n>>> user_table = User.__table__\n>>> address_table = Address.__table__\n>>>\n>>> j = address_table.join(user_table, user_table.c.id == address_table.c.user_id)\n>>> stmt = (\n...     select(address_table)\n...     .select_from(user_table)\n...     .select_from(j)\n...     .where(user_table.c.name == \"sandy\")\n... )\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  address  JOIN  user_account  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(User).join(User.addresses)\n```", "```py\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(User.orders).join(Order.items)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  user_order  ON  user_account.id  =  user_order.user_id\nJOIN  order_items  AS  order_items_1  ON  user_order.id  =  order_items_1.order_id\nJOIN  item  ON  item.id  =  order_items_1.item_id \n```", "```py\n>>> stmt = select(User).join(User.orders).join(Order.items).join(User.addresses)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  user_order  ON  user_account.id  =  user_order.user_id\nJOIN  order_items  AS  order_items_1  ON  user_order.id  =  order_items_1.order_id\nJOIN  item  ON  item.id  =  order_items_1.item_id\nJOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address, User.id == Address.user_id)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User).join(Address, User.addresses)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id \n```", "```py\n>>> stmt = select(User.fullname).join(\n...     User.addresses.and_(Address.email_address == \"squirrel@squirrelpower.org\")\n... )\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nJOIN  address  ON  user_account.id  =  address.user_id  AND  address.email_address  =  ?\n[...]  ('squirrel@squirrelpower.org',)\n[('Sandy Cheeks',)]\n```", "```py\n>>> address_alias_1 = aliased(Address)\n>>> address_alias_2 = aliased(Address)\n>>> stmt = (\n...     select(User)\n...     .join(address_alias_1, User.addresses)\n...     .where(address_alias_1.email_address == \"patrick@aol.com\")\n...     .join(address_alias_2, User.addresses)\n...     .where(address_alias_2.email_address == \"patrick@gmail.com\")\n... )\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  address  AS  address_1  ON  user_account.id  =  address_1.user_id\nJOIN  address  AS  address_2  ON  user_account.id  =  address_2.user_id\nWHERE  address_1.email_address  =  :email_address_1\nAND  address_2.email_address  =  :email_address_2 \n```", "```py\n>>> print(\n...     select(User)\n...     .join(User.addresses.of_type(address_alias_1))\n...     .where(address_alias_1.email_address == \"patrick@aol.com\")\n...     .join(User.addresses.of_type(address_alias_2))\n...     .where(address_alias_2.email_address == \"patrick@gmail.com\")\n... )\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  address  AS  address_1  ON  user_account.id  =  address_1.user_id\nJOIN  address  AS  address_2  ON  user_account.id  =  address_2.user_id\nWHERE  address_1.email_address  =  :email_address_1\nAND  address_2.email_address  =  :email_address_2 \n```", "```py\n>>> user_alias_1 = aliased(User)\n>>> print(select(user_alias_1.name).join(user_alias_1.addresses))\nSELECT  user_account_1.name\nFROM  user_account  AS  user_account_1\nJOIN  address  ON  user_account_1.id  =  address.user_id \n```", "```py\n>>> subq = select(Address).where(Address.email_address == \"pat999@aol.com\").subquery()\n>>> stmt = select(User).join(subq, User.id == subq.c.user_id)\n>>> print(stmt)\nSELECT  user_account.id,  user_account.name,  user_account.fullname\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  :email_address_1)  AS  anon_1\nON  user_account.id  =  anon_1.user_id \n```", "```py\n>>> address_subq = aliased(Address, subq, name=\"address\")\n>>> stmt = select(User, address_subq).join(address_subq)\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User} {row.address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\nanon_1.id  AS  id_1,  anon_1.user_id,  anon_1.email_address\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  ?)  AS  anon_1  ON  user_account.id  =  anon_1.user_id\n[...]  ('pat999@aol.com',)\nUser(id=3, name='patrick', fullname='Patrick Star') Address(id=4, email_address='pat999@aol.com')\n```", "```py\n>>> address_subq = aliased(Address, subq, name=\"address\")\n>>> stmt = select(User, address_subq).join(User.addresses.of_type(address_subq))\n>>> for row in session.execute(stmt):\n...     print(f\"{row.User} {row.address}\")\nSELECT  user_account.id,  user_account.name,  user_account.fullname,\nanon_1.id  AS  id_1,  anon_1.user_id,  anon_1.email_address\nFROM  user_account\nJOIN  (SELECT  address.id  AS  id,\naddress.user_id  AS  user_id,  address.email_address  AS  email_address\nFROM  address\nWHERE  address.email_address  =  ?)  AS  anon_1  ON  user_account.id  =  anon_1.user_id\n[...]  ('pat999@aol.com',)\nUser(id=3, name='patrick', fullname='Patrick Star') Address(id=4, email_address='pat999@aol.com')\n```", "```py\n>>> user_address_subq = (\n...     select(User.id, User.name, User.fullname, Address.id, Address.email_address)\n...     .join_from(User, Address)\n...     .where(Address.email_address.in_([\"pat999@aol.com\", \"squirrel@squirrelpower.org\"]))\n...     .subquery()\n... )\n```", "```py\n>>> user_alias = aliased(User, user_address_subq, name=\"user\")\n>>> address_alias = aliased(Address, user_address_subq, name=\"address\")\n```", "```py\n>>> stmt = select(user_alias, address_alias).where(user_alias.name == \"sandy\")\n>>> for row in session.execute(stmt):\n...     print(f\"{row.user} {row.address}\")\nSELECT  anon_1.id,  anon_1.name,  anon_1.fullname,  anon_1.id_1,  anon_1.email_address\nFROM  (SELECT  user_account.id  AS  id,  user_account.name  AS  name,\nuser_account.fullname  AS  fullname,  address.id  AS  id_1,\naddress.email_address  AS  email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  address.email_address  IN  (?,  ?))  AS  anon_1\nWHERE  anon_1.name  =  ?\n[...]  ('pat999@aol.com',  'squirrel@squirrelpower.org',  'sandy')\nUser(id=2, name='sandy', fullname='Sandy Cheeks') Address(id=3, email_address='squirrel@squirrelpower.org')\n```", "```py\n>>> stmt = select(Address).join_from(User, User.addresses).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).join_from(User, Address).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).select_from(User).join(Address).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  user_account  JOIN  address  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(Address).select_from(User).join(Address.user).where(User.name == \"sandy\")\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  address  JOIN  user_account  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> from sqlalchemy.sql import join\n>>>\n>>> user_table = User.__table__\n>>> address_table = Address.__table__\n>>>\n>>> j = address_table.join(user_table, user_table.c.id == address_table.c.user_id)\n>>> stmt = (\n...     select(address_table)\n...     .select_from(user_table)\n...     .select_from(j)\n...     .where(user_table.c.name == \"sandy\")\n... )\n>>> print(stmt)\nSELECT  address.id,  address.user_id,  address.email_address\nFROM  address  JOIN  user_account  ON  user_account.id  =  address.user_id\nWHERE  user_account.name  =  :name_1 \n```", "```py\n>>> stmt = select(User.fullname).where(\n...     User.addresses.any(Address.email_address == \"squirrel@squirrelpower.org\")\n... )\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nWHERE  EXISTS  (SELECT  1\nFROM  address\nWHERE  user_account.id  =  address.user_id  AND  address.email_address  =  ?)\n[...]  ('squirrel@squirrelpower.org',)\n[('Sandy Cheeks',)]\n```", "```py\n>>> stmt = select(User.fullname).where(~User.addresses.any())\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nWHERE  NOT  (EXISTS  (SELECT  1\nFROM  address\nWHERE  user_account.id  =  address.user_id))\n[...]  ()\n[('Eugene H. Krabs',)]\n```", "```py\n>>> stmt = select(Address.email_address).where(Address.user.has(User.name == \"sandy\"))\n>>> session.execute(stmt).all()\nSELECT  address.email_address\nFROM  address\nWHERE  EXISTS  (SELECT  1\nFROM  user_account\nWHERE  user_account.id  =  address.user_id  AND  user_account.name  =  ?)\n[...]  ('sandy',)\n[('sandy@sqlalchemy.org',), ('squirrel@squirrelpower.org',)]\n```", "```py\n    >>> user_obj = session.get(User, 1)\n    SELECT  ...\n    >>> print(select(Address).where(Address.user == user_obj))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  :param_1  =  address.user_id \n    ```", "```py\n    >>> print(select(Address).where(Address.user != user_obj))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  address.user_id  !=  :user_id_1  OR  address.user_id  IS  NULL \n    ```", "```py\n    >>> address_obj = session.get(Address, 1)\n    SELECT  ...\n    >>> print(select(User).where(User.addresses.contains(address_obj)))\n    SELECT  user_account.id,  user_account.name,  user_account.fullname\n    FROM  user_account\n    WHERE  user_account.id  =  :param_1 \n    ```", "```py\n    >>> from sqlalchemy.orm import with_parent\n    >>> print(select(Address).where(with_parent(user_obj, User.addresses)))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  :param_1  =  address.user_id \n    ```", "```py\n>>> stmt = select(User.fullname).where(\n...     User.addresses.any(Address.email_address == \"squirrel@squirrelpower.org\")\n... )\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nWHERE  EXISTS  (SELECT  1\nFROM  address\nWHERE  user_account.id  =  address.user_id  AND  address.email_address  =  ?)\n[...]  ('squirrel@squirrelpower.org',)\n[('Sandy Cheeks',)]\n```", "```py\n>>> stmt = select(User.fullname).where(~User.addresses.any())\n>>> session.execute(stmt).all()\nSELECT  user_account.fullname\nFROM  user_account\nWHERE  NOT  (EXISTS  (SELECT  1\nFROM  address\nWHERE  user_account.id  =  address.user_id))\n[...]  ()\n[('Eugene H. Krabs',)]\n```", "```py\n>>> stmt = select(Address.email_address).where(Address.user.has(User.name == \"sandy\"))\n>>> session.execute(stmt).all()\nSELECT  address.email_address\nFROM  address\nWHERE  EXISTS  (SELECT  1\nFROM  user_account\nWHERE  user_account.id  =  address.user_id  AND  user_account.name  =  ?)\n[...]  ('sandy',)\n[('sandy@sqlalchemy.org',), ('squirrel@squirrelpower.org',)]\n```", "```py\n    >>> user_obj = session.get(User, 1)\n    SELECT  ...\n    >>> print(select(Address).where(Address.user == user_obj))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  :param_1  =  address.user_id \n    ```", "```py\n    >>> print(select(Address).where(Address.user != user_obj))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  address.user_id  !=  :user_id_1  OR  address.user_id  IS  NULL \n    ```", "```py\n    >>> address_obj = session.get(Address, 1)\n    SELECT  ...\n    >>> print(select(User).where(User.addresses.contains(address_obj)))\n    SELECT  user_account.id,  user_account.name,  user_account.fullname\n    FROM  user_account\n    WHERE  user_account.id  =  :param_1 \n    ```", "```py\n    >>> from sqlalchemy.orm import with_parent\n    >>> print(select(Address).where(with_parent(user_obj, User.addresses)))\n    SELECT  address.id,  address.user_id,  address.email_address\n    FROM  address\n    WHERE  :param_1  =  address.user_id \n    ```"]