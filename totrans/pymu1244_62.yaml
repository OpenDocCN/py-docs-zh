- en: 'Appendix 4: Performance Comparison Methodology'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/app4.html](https://pymupdf.readthedocs.io/en/latest/app4.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This article documents the approach to measure PyMuPDF’s performance and the
    tools and example files used to do comparisons.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following three sections deal with different performance aspects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Document Copying](#app4-copying) - This includes opening and parsing PDFs,
    then writing them to an output file. Because the same basic activities are also
    used for joining (merging) PDFs, the results also apply to these use cases.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Text Extraction](#app4-text-extraction) - This extracts plain text from PDFs
    and writes it to an output text file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Page Rendering](#app4-page-rendering) - This converts PDF pages to image files
    looking identical to the pages. This ability is the basic prerequisite for using
    a tool in Python GUI scripts to scroll through documents. We have chosen a medium-quality
    (resolution 150 DPI) version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Please note that in all cases the actual speed in dealing with PDF structures
    is not directly measured: instead, the timings also include the durations of writing
    files to the operating system’s file system. This cannot be avoided because tools
    other than PyMuPDF do not offer the option to e.g., separate the image **creation**
    step from the following step, which **writes** the image into a file.'
  prefs: []
  type: TYPE_NORMAL
- en: So all timings documented include a common, OS-oriented base effort. Therefore,
    performance **differences per tool are actually larger** than the numbers suggest.
  prefs: []
  type: TYPE_NORMAL
- en: '## Files used'
  prefs: []
  type: TYPE_NORMAL
- en: 'A set of eight files is used for the performance testing. With each file we
    have the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Name** of the file and download **link**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Size** in bytes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Total number of **pages** in file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Total number of bookmarks (**Table of Contents** entries).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Total number of **links**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KB size** per page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Textsize per page** is the amount text in the whole file in KB, divided by
    the number of pages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any **notes** to generally describe the type of file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Name** | **Size (bytes)** | **Pages** | **TOC size** | **Links** | **KB/page**
    | **Textsize/page** | **Notes** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [adobe.pdf](https://artifex.com/samples/pdf/adobe.pdf) | 32,472,771 | 1,310
    | 794 | 32,096 | 24 | 1,942 | linearized, many links / bookmarks |'
  prefs: []
  type: TYPE_TB
- en: '| [artifex-website.pdf](https://artifex.com/samples/pdf/artifex-website.pdf)
    | 31,570,732 | 47 | 46 | 2,035 | 656 | 3,538 | graphics oriented |'
  prefs: []
  type: TYPE_TB
- en: '| [db-systems.pdf](https://artifex.com/samples/pdf/db-systems.pdf) | 29,326,355
    | 1,241 | 0 | 0 | 23 | 2,142 |  |'
  prefs: []
  type: TYPE_TB
- en: '| [fontforge.pdf](https://artifex.com/samples/pdf/fontforge.pdf) | 8,222,384
    | 214 | 31 | 242 | 38 | 1,058 | mix of text & graphics |'
  prefs: []
  type: TYPE_TB
- en: '| [pandas.pdf](https://artifex.com/samples/pdf/pandas.pdf) | 10,585,962 | 3,071
    | 536 | 16,554 | 3 | 1,539 | many pages |'
  prefs: []
  type: TYPE_TB
- en: '| [pymupdf.pdf](https://artifex.com/samples/pdf/pymupdf.pdf) | 6,805,176 |
    478 | 276 | 5,277 | 14 | 1,937 | text oriented |'
  prefs: []
  type: TYPE_TB
- en: '| [pythonbook.pdf](https://artifex.com/samples/pdf/pythonbook.pdf) | 9,983,856
    | 669 | 198 | 1,953 | 15 | 1,929 |  |'
  prefs: []
  type: TYPE_TB
- en: '| [sample-50-MB-pdf-file.pdf](https://artifex.com/samples/pdf/sample-50-MB-pdf-file.pdf)
    | 52,521,850 | 1 | 0 | 0 | 51,291 | 23,860 | single page, graphics oriented, large
    file size |'
  prefs: []
  type: TYPE_TB
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '**adobe.pdf** and **pymupdf.pdf** are clearly text oriented, **artifex-website.pdf**
    and **sample-50-MB-pdf-file.pdf** are graphics oriented. Other files are a mix
    of both.'
  prefs: []
  type: TYPE_NORMAL
- en: Tools used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In each section, the same fixed set of PDF files is being processed by a set
    of tools. The set of tools used per performance aspect however varies, depending
    on the supported tool features.
  prefs: []
  type: TYPE_NORMAL
- en: All tools are either platform independent, or at least can run on both, Windows
    and Unix / Linux.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tool** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| PyMuPDF | The tool of this manual. |'
  prefs: []
  type: TYPE_TB
- en: '| [PDFrw](https://pypi.org/project/pdfrw/) | A pure Python tool, being used
    by rst2pdf, has interface to ReportLab. |'
  prefs: []
  type: TYPE_TB
- en: '| [PyPDF2](https://pypi.org/project/pypdf/) | A pure Python tool with a large
    function set. |'
  prefs: []
  type: TYPE_TB
- en: '| [PDFMiner](https://pypi.org/project/pdfminer.six/) | A pure Python to extract
    text and other data from PDF. |'
  prefs: []
  type: TYPE_TB
- en: '| [XPDF](https://www.xpdfreader.com/) | A command line utility with multiple
    functions. |'
  prefs: []
  type: TYPE_TB
- en: '| [PikePDF](https://pypi.org/search/?q=pikepdf) | A Python package similar
    to PDFrw, but based on C++ library QPDF. |'
  prefs: []
  type: TYPE_TB
- en: '| [PDF2JPG](https://pypi.org/project/pdf2jpg/) | A Python package specialized
    on rendering PDF pages to JPG images. |'
  prefs: []
  type: TYPE_TB
- en: '## Copying / Joining / Merging'
  prefs: []
  type: TYPE_NORMAL
- en: How fast is a PDF file read and its content parsed for further processing? The
    sheer parsing performance cannot directly be compared, because batch utilities
    always execute a requested task completely, in one go, front to end. PDFrw too,
    has a *lazy* strategy for parsing, meaning it only parses those parts of a document
    that are required in any moment.
  prefs: []
  type: TYPE_NORMAL
- en: To find an answer to the question, we therefore measure the time to copy a PDF
    file to an output file with each tool, and do nothing else.
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the Python commands for how each tool is used:'
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: PDFrw
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: PikePDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: PyPDF2
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Observations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are our run time findings in **seconds** along with a base rate summary
    compared to PyMuPDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **PyMuPDF** | **PDFrw** | **PikePDF** | **PyPDF2** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| adobe.pdf | 1.75 | 5.15 | 22.37 | 374.05 |'
  prefs: []
  type: TYPE_TB
- en: '| artifex-website.pdf | 0.26 | 0.38 | 1.41 | 2.81 |'
  prefs: []
  type: TYPE_TB
- en: '| db-systems.pdf | 0.15 | 0.8 | 1.68 | 2.46 |'
  prefs: []
  type: TYPE_TB
- en: '| fontforge.pdf | 0.09 | 0.14 | 0.28 | 1.1 |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.pdf | 0.38 | 2.21 | 2.73 | 70.3 |'
  prefs: []
  type: TYPE_TB
- en: '| pymupdf.pdf | 0.11 | 0.56 | 0.83 | 6.05 |'
  prefs: []
  type: TYPE_TB
- en: '| pythonbook.pdf | 0.19 | 1.2 | 1.34 | 37.19 |'
  prefs: []
  type: TYPE_TB
- en: '| sample-50-MB-pdf-file.pdf | 0.12 | 0.1 | 2.93 | 0.08 |'
  prefs: []
  type: TYPE_TB
- en: '| **Total** | **3.05** | **10.54** | **33.57** | **494.04** |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Rate compared to PyMuPDF** | 1.0 | 3.5 | 11.0 | 162 |  ## Text Extraction'
  prefs: []
  type: TYPE_NORMAL
- en: The following table shows plain text extraction durations. All tools have been
    used with their most basic functionality - i.e. no layout re-arrangements, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '**Observations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are our run time findings in **seconds** along with a base rate summary
    compared to PyMuPDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **PyMuPDF** | **XPDF** | **PyPDF2** | **PDFMiner** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| adobe.pdf | 2.01 | 6.19 | 22.2 | 49.15 |'
  prefs: []
  type: TYPE_TB
- en: '| artifex-website.pdf | 0.18 | 0.3 | 1.1 | 4.06 |'
  prefs: []
  type: TYPE_TB
- en: '| db-systems.pdf | 1.57 | 4.26 | 25.75 | 42.19 |'
  prefs: []
  type: TYPE_TB
- en: '| fontforge.pdf | 0.24 | 0.47 | 2.69 | 4.2 |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.pdf | 2.41 | 10.54 | 25.38 | 76.56 |'
  prefs: []
  type: TYPE_TB
- en: '| pymupdf.pdf | 0.49 | 2.34 | 6.44 | 13.55 |'
  prefs: []
  type: TYPE_TB
- en: '| pythonbook.pdf | 0.84 | 2.88 | 9.28 | 24.27 |'
  prefs: []
  type: TYPE_TB
- en: '| sample-50-MB-pdf-file.pdf | 0.27 | 0.44 | 8.8 | 13.29 |'
  prefs: []
  type: TYPE_TB
- en: '| **Total** | **8.01** | **27.42** | **101.64** | **227.27** |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Rate compared to PyMuPDF** | 1.0 | 3.42 | 12.69 | 28.37 |  ## Page Rendering'
  prefs: []
  type: TYPE_NORMAL
- en: We have tested rendering speed of PyMuPDF against pdf2jpg and XPDF at a resolution
    of 150 DPI,
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the Python commands for how each tool is used:'
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: XPDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: PDF2JPG
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Observations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are our run time findings in **seconds** along with a base rate summary
    compared to PyMuPDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **PyMuPDF** | **XPDF** | **PDF2JPG** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| adobe.pdf | 51.33 | 98.16 | 75.71 |'
  prefs: []
  type: TYPE_TB
- en: '| artifex-website.pdf | 26.35 | 51.28 | 54.11 |'
  prefs: []
  type: TYPE_TB
- en: '| db-systems.pdf | 84.59 | 143.16 | 405.22 |'
  prefs: []
  type: TYPE_TB
- en: '| fontforge.pdf | 12.23 | 22.18 | 20.14 |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.pdf | 138.74 | 241.67 | 202.06 |'
  prefs: []
  type: TYPE_TB
- en: '| pymupdf.pdf | 22.35 | 39.11 | 33.38 |'
  prefs: []
  type: TYPE_TB
- en: '| pythonbook.pdf | 30.44 | 49.12 | 55.68 |'
  prefs: []
  type: TYPE_TB
- en: '| sample-50-MB-pdf-file.pdf | 1.01 | 1.32 | 5.22 |'
  prefs: []
  type: TYPE_TB
- en: '| **Total** | **367.04** | **646** | **851.52** |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Rate compared to PyMuPDF** | 1.0 | 1.76 | 2.32 |'
  prefs: []
  type: TYPE_TB
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ## Files used'
  prefs: []
  type: TYPE_NORMAL
- en: 'A set of eight files is used for the performance testing. With each file we
    have the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Name** of the file and download **link**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Size** in bytes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Total number of **pages** in file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Total number of bookmarks (**Table of Contents** entries).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Total number of **links**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**KB size** per page.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Textsize per page** is the amount text in the whole file in KB, divided by
    the number of pages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any **notes** to generally describe the type of file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Name** | **Size (bytes)** | **Pages** | **TOC size** | **Links** | **KB/page**
    | **Textsize/page** | **Notes** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| [adobe.pdf](https://artifex.com/samples/pdf/adobe.pdf) | 32,472,771 | 1,310
    | 794 | 32,096 | 24 | 1,942 | linearized, many links / bookmarks |'
  prefs: []
  type: TYPE_TB
- en: '| [artifex-website.pdf](https://artifex.com/samples/pdf/artifex-website.pdf)
    | 31,570,732 | 47 | 46 | 2,035 | 656 | 3,538 | graphics oriented |'
  prefs: []
  type: TYPE_TB
- en: '| [db-systems.pdf](https://artifex.com/samples/pdf/db-systems.pdf) | 29,326,355
    | 1,241 | 0 | 0 | 23 | 2,142 |  |'
  prefs: []
  type: TYPE_TB
- en: '| [fontforge.pdf](https://artifex.com/samples/pdf/fontforge.pdf) | 8,222,384
    | 214 | 31 | 242 | 38 | 1,058 | mix of text & graphics |'
  prefs: []
  type: TYPE_TB
- en: '| [pandas.pdf](https://artifex.com/samples/pdf/pandas.pdf) | 10,585,962 | 3,071
    | 536 | 16,554 | 3 | 1,539 | many pages |'
  prefs: []
  type: TYPE_TB
- en: '| [pymupdf.pdf](https://artifex.com/samples/pdf/pymupdf.pdf) | 6,805,176 |
    478 | 276 | 5,277 | 14 | 1,937 | text oriented |'
  prefs: []
  type: TYPE_TB
- en: '| [pythonbook.pdf](https://artifex.com/samples/pdf/pythonbook.pdf) | 9,983,856
    | 669 | 198 | 1,953 | 15 | 1,929 |  |'
  prefs: []
  type: TYPE_TB
- en: '| [sample-50-MB-pdf-file.pdf](https://artifex.com/samples/pdf/sample-50-MB-pdf-file.pdf)
    | 52,521,850 | 1 | 0 | 0 | 51,291 | 23,860 | single page, graphics oriented, large
    file size |'
  prefs: []
  type: TYPE_TB
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '**adobe.pdf** and **pymupdf.pdf** are clearly text oriented, **artifex-website.pdf**
    and **sample-50-MB-pdf-file.pdf** are graphics oriented. Other files are a mix
    of both.'
  prefs: []
  type: TYPE_NORMAL
- en: Tools used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In each section, the same fixed set of PDF files is being processed by a set
    of tools. The set of tools used per performance aspect however varies, depending
    on the supported tool features.
  prefs: []
  type: TYPE_NORMAL
- en: All tools are either platform independent, or at least can run on both, Windows
    and Unix / Linux.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tool** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| PyMuPDF | The tool of this manual. |'
  prefs: []
  type: TYPE_TB
- en: '| [PDFrw](https://pypi.org/project/pdfrw/) | A pure Python tool, being used
    by rst2pdf, has interface to ReportLab. |'
  prefs: []
  type: TYPE_TB
- en: '| [PyPDF2](https://pypi.org/project/pypdf/) | A pure Python tool with a large
    function set. |'
  prefs: []
  type: TYPE_TB
- en: '| [PDFMiner](https://pypi.org/project/pdfminer.six/) | A pure Python to extract
    text and other data from PDF. |'
  prefs: []
  type: TYPE_TB
- en: '| [XPDF](https://www.xpdfreader.com/) | A command line utility with multiple
    functions. |'
  prefs: []
  type: TYPE_TB
- en: '| [PikePDF](https://pypi.org/search/?q=pikepdf) | A Python package similar
    to PDFrw, but based on C++ library QPDF. |'
  prefs: []
  type: TYPE_TB
- en: '| [PDF2JPG](https://pypi.org/project/pdf2jpg/) | A Python package specialized
    on rendering PDF pages to JPG images. |'
  prefs: []
  type: TYPE_TB
- en: '## Copying / Joining / Merging'
  prefs: []
  type: TYPE_NORMAL
- en: How fast is a PDF file read and its content parsed for further processing? The
    sheer parsing performance cannot directly be compared, because batch utilities
    always execute a requested task completely, in one go, front to end. PDFrw too,
    has a *lazy* strategy for parsing, meaning it only parses those parts of a document
    that are required in any moment.
  prefs: []
  type: TYPE_NORMAL
- en: To find an answer to the question, we therefore measure the time to copy a PDF
    file to an output file with each tool, and do nothing else.
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the Python commands for how each tool is used:'
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: PDFrw
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: PikePDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: PyPDF2
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '**Observations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are our run time findings in **seconds** along with a base rate summary
    compared to PyMuPDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **PyMuPDF** | **PDFrw** | **PikePDF** | **PyPDF2** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| adobe.pdf | 1.75 | 5.15 | 22.37 | 374.05 |'
  prefs: []
  type: TYPE_TB
- en: '| artifex-website.pdf | 0.26 | 0.38 | 1.41 | 2.81 |'
  prefs: []
  type: TYPE_TB
- en: '| db-systems.pdf | 0.15 | 0.8 | 1.68 | 2.46 |'
  prefs: []
  type: TYPE_TB
- en: '| fontforge.pdf | 0.09 | 0.14 | 0.28 | 1.1 |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.pdf | 0.38 | 2.21 | 2.73 | 70.3 |'
  prefs: []
  type: TYPE_TB
- en: '| pymupdf.pdf | 0.11 | 0.56 | 0.83 | 6.05 |'
  prefs: []
  type: TYPE_TB
- en: '| pythonbook.pdf | 0.19 | 1.2 | 1.34 | 37.19 |'
  prefs: []
  type: TYPE_TB
- en: '| sample-50-MB-pdf-file.pdf | 0.12 | 0.1 | 2.93 | 0.08 |'
  prefs: []
  type: TYPE_TB
- en: '| **Total** | **3.05** | **10.54** | **33.57** | **494.04** |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Rate compared to PyMuPDF** | 1.0 | 3.5 | 11.0 | 162 |'
  prefs: []
  type: TYPE_TB
- en: '## Text Extraction'
  prefs: []
  type: TYPE_NORMAL
- en: The following table shows plain text extraction durations. All tools have been
    used with their most basic functionality - i.e. no layout re-arrangements, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '**Observations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are our run time findings in **seconds** along with a base rate summary
    compared to PyMuPDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **PyMuPDF** | **XPDF** | **PyPDF2** | **PDFMiner** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| adobe.pdf | 2.01 | 6.19 | 22.2 | 49.15 |'
  prefs: []
  type: TYPE_TB
- en: '| artifex-website.pdf | 0.18 | 0.3 | 1.1 | 4.06 |'
  prefs: []
  type: TYPE_TB
- en: '| db-systems.pdf | 1.57 | 4.26 | 25.75 | 42.19 |'
  prefs: []
  type: TYPE_TB
- en: '| fontforge.pdf | 0.24 | 0.47 | 2.69 | 4.2 |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.pdf | 2.41 | 10.54 | 25.38 | 76.56 |'
  prefs: []
  type: TYPE_TB
- en: '| pymupdf.pdf | 0.49 | 2.34 | 6.44 | 13.55 |'
  prefs: []
  type: TYPE_TB
- en: '| pythonbook.pdf | 0.84 | 2.88 | 9.28 | 24.27 |'
  prefs: []
  type: TYPE_TB
- en: '| sample-50-MB-pdf-file.pdf | 0.27 | 0.44 | 8.8 | 13.29 |'
  prefs: []
  type: TYPE_TB
- en: '| **Total** | **8.01** | **27.42** | **101.64** | **227.27** |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Rate compared to PyMuPDF** | 1.0 | 3.42 | 12.69 | 28.37 |'
  prefs: []
  type: TYPE_TB
- en: '## Page Rendering'
  prefs: []
  type: TYPE_NORMAL
- en: We have tested rendering speed of PyMuPDF against pdf2jpg and XPDF at a resolution
    of 150 DPI,
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the Python commands for how each tool is used:'
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: XPDF
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: PDF2JPG
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '**Observations**'
  prefs: []
  type: TYPE_NORMAL
- en: 'These are our run time findings in **seconds** along with a base rate summary
    compared to PyMuPDF:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Name** | **PyMuPDF** | **XPDF** | **PDF2JPG** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| adobe.pdf | 51.33 | 98.16 | 75.71 |'
  prefs: []
  type: TYPE_TB
- en: '| artifex-website.pdf | 26.35 | 51.28 | 54.11 |'
  prefs: []
  type: TYPE_TB
- en: '| db-systems.pdf | 84.59 | 143.16 | 405.22 |'
  prefs: []
  type: TYPE_TB
- en: '| fontforge.pdf | 12.23 | 22.18 | 20.14 |'
  prefs: []
  type: TYPE_TB
- en: '| pandas.pdf | 138.74 | 241.67 | 202.06 |'
  prefs: []
  type: TYPE_TB
- en: '| pymupdf.pdf | 22.35 | 39.11 | 33.38 |'
  prefs: []
  type: TYPE_TB
- en: '| pythonbook.pdf | 30.44 | 49.12 | 55.68 |'
  prefs: []
  type: TYPE_TB
- en: '| sample-50-MB-pdf-file.pdf | 1.01 | 1.32 | 5.22 |'
  prefs: []
  type: TYPE_TB
- en: '| **Total** | **367.04** | **646** | **851.52** |'
  prefs: []
  type: TYPE_TB
- en: '|  |  |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| **Rate compared to PyMuPDF** | 1.0 | 1.76 | 2.32 |'
  prefs: []
  type: TYPE_TB
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
