- en: JAX debugging flags
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JAX 调试标志
- en: 原文：[`jax.readthedocs.io/en/latest/debugging/flags.html`](https://jax.readthedocs.io/en/latest/debugging/flags.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/debugging/flags.html`](https://jax.readthedocs.io/en/latest/debugging/flags.html)
- en: JAX offers flags and context managers that enable catching errors more easily.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 提供了标志和上下文管理器，可更轻松地捕获错误。
- en: '`jax_debug_nans` configuration option and context manager'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`jax_debug_nans` 配置选项和上下文管理器'
- en: '**TL;DR** Enable the `jax_debug_nans` flag to automatically detect when NaNs
    are produced in `jax.jit`-compiled code (but not in `jax.pmap` or `jax.pjit`-compiled
    code).'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**简而言之** 启用 `jax_debug_nans` 标志可自动检测在 `jax.jit` 编译的代码中产生 NaN（但不适用于 `jax.pmap`
    或 `jax.pjit` 编译的代码）。'
- en: '`jax_debug_nans` is a JAX flag that when enabled, automatically raises an error
    when a NaN is detected. It has special handling for JIT-compiled – when a NaN
    output is detected from a JIT-ted function, the function is re-run eagerly (i.e.
    without compilation) and will throw an error at the specific primitive that produced
    the NaN.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`jax_debug_nans` 是一个 JAX 标志，当启用时，会在检测到 NaN 时自动引发错误。它对 JIT 编译有特殊处理——如果从 JIT
    编译函数检测到 NaN 输出，函数会急切地重新运行（即不经过编译），并在产生 NaN 的具体原始基元处引发错误。'
- en: Usage
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用法
- en: 'If you want to trace where NaNs are occurring in your functions or gradients,
    you can turn on the NaN-checker by:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想追踪函数或梯度中出现 NaN 的位置，可以通过以下方式打开 NaN 检查器：
- en: setting the `JAX_DEBUG_NANS=True` environment variable;
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 `JAX_DEBUG_NANS=True` 环境变量；
- en: adding `jax.config.update("jax_debug_nans", True)` near the top of your main
    file;
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主文件顶部附近添加 `jax.config.update("jax_debug_nans", True)`；
- en: adding `jax.config.parse_flags_with_absl()` to your main file, then set the
    option using a command-line flag like `--jax_debug_nans=True`;
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主文件添加 `jax.config.parse_flags_with_absl()`，然后像 `--jax_debug_nans=True` 这样使用命令行标志设置选项；
- en: Example(s)
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Strengths and limitations of `jax_debug_nans`
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`jax_debug_nans` 的优势和限制'
- en: Strengths
  id: totrans-14
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 优势
- en: Easy to apply
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于应用
- en: Precisely detects where NaNs were produced
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 精确检测产生 NaN 的位置
- en: Throws a standard Python exception and is compatible with PDB postmortem
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抛出标准的 Python 异常，与 PDB 事后调试兼容
- en: Limitations
  id: totrans-18
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 限制
- en: Not compatible with `jax.pmap` or `jax.pjit`
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 `jax.pmap` 或 `jax.pjit` 不兼容
- en: Re-running functions eagerly can be slow
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 急切重新运行函数可能会很慢
- en: Errors on false positives (e.g. intentionally created NaNs)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 误报阳性（例如故意创建NaN）
- en: '`jax_disable_jit` configuration option and context manager'
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '`jax_disable_jit` 配置选项和上下文管理器'
- en: '**TL;DR** Enable the `jax_disable_jit` flag to disable JIT-compilation, enabling
    use of traditional Python debugging tools like `print` and `pdb`'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**简而言之** 启用 `jax_disable_jit` 标志可禁用 JIT 编译，从而启用传统的 Python 调试工具如 `print` 和 `pdb`。'
- en: '`jax_disable_jit` is a JAX flag that when enabled, disables JIT-compilation
    throughout JAX (including in control flow functions like `jax.lax.cond` and `jax.lax.scan`).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`jax_disable_jit` 是一个 JAX 标志，当启用时，会在整个 JAX 中禁用 JIT 编译（包括在控制流函数如 `jax.lax.cond`
    和 `jax.lax.scan` 中）。'
- en: Usage
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 用法
- en: 'You can disable JIT-compilation by:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下方式禁用 JIT 编译：
- en: setting the `JAX_DISABLE_JIT=True` environment variable;
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置 `JAX_DISABLE_JIT=True` 环境变量；
- en: adding `jax.config.update("jax_disable_jit", True)` near the top of your main
    file;
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主文件顶部附近添加 `jax.config.update("jax_disable_jit", True)`；
- en: adding `jax.config.parse_flags_with_absl()` to your main file, then set the
    option using a command-line flag like `--jax_disable_jit=True`;
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主文件添加 `jax.config.parse_flags_with_absl()`，然后像 `--jax_disable_jit=True` 这样使用命令行标志设置选项；
- en: Examples
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Strengths and limitations of `jax_disable_jit`
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '`jax_disable_jit` 的优势和限制'
- en: Strengths
  id: totrans-33
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 优势
- en: Easy to apply
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 易于应用
- en: Enables use of Python’s built-in `breakpoint` and `print`
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用 Python 内置的 `breakpoint` 和 `print`
- en: Throws standard Python exceptions and is compatible with PDB postmortem
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 抛出标准的 Python 异常，与 PDB 事后调试兼容
- en: Limitations
  id: totrans-37
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 限制
- en: Not compatible with `jax.pmap` or `jax.pjit`
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 `jax.pmap` 或 `jax.pjit` 不兼容
- en: Running functions without JIT-compilation can be slow
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在没有 JIT 编译的情况下运行函数可能会很慢
