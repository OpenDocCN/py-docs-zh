- en: jax.experimental.sparse.bcoo_dynamic_slice
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_dynamic_slice.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_dynamic_slice.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Sparse implementation of {func}`jax.lax.dynamic_slice`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**mat** (*BCOO*) – BCOO array to slice.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**start_indices** ([*Sequence*](https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence
    "(in Python v3.12)")*[*[*Any*](https://docs.python.org/3/library/typing.html#typing.Any
    "(in Python v3.12)")*]*) – a list of scalar indices, one per dimension. These
    values may be dynamic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**slice_sizes** ([*Sequence*](https://docs.python.org/3/library/collections.abc.html#collections.abc.Sequence
    "(in Python v3.12)")*[*[*int*](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)")*]*) – the size of the slice. Must be a sequence of non-negative
    integers with length equal to ndim(operand). Inside a JIT compiled function, only
    static values are supported (all JAX arrays inside JIT must have statically known
    size).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: BCOO array containing the slice.
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: out
  prefs: []
  type: TYPE_NORMAL
