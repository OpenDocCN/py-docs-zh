- en: jax.numpy.fft.ifft
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.ifft.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.numpy.fft.ifft.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Compute the one-dimensional inverse discrete Fourier Transform.
  prefs: []
  type: TYPE_NORMAL
- en: LAX-backend implementation of [`numpy.fft.ifft()`](https://numpy.org/doc/stable/reference/generated/numpy.fft.ifft.html#numpy.fft.ifft
    "(in NumPy v2.0)").
  prefs: []
  type: TYPE_NORMAL
- en: '*Original docstring below.*'
  prefs: []
  type: TYPE_NORMAL
- en: This function computes the inverse of the one-dimensional *n*-point discrete
    Fourier transform computed by fft. In other words, `ifft(fft(a)) == a` to within
    numerical accuracy. For a general description of the algorithm and definitions,
    see numpy.fft.
  prefs: []
  type: TYPE_NORMAL
- en: The input should be ordered in the same way as is returned by fft, i.e.,
  prefs: []
  type: TYPE_NORMAL
- en: '`a[0]` should contain the zero frequency term,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`a[1:n//2]` should contain the positive-frequency terms,'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`a[n//2 + 1:]` should contain the negative-frequency terms, in increasing order
    starting from the most negative frequency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For an even number of input points, `A[n//2]` represents the sum of the values
    at the positive and negative Nyquist frequencies, as the two are aliased together.
    See numpy.fft for details.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**a** (*array_like*) – Input array, can be complex.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**n** ([*int*](https://docs.python.org/3/library/functions.html#int "(in Python
    v3.12)")*,* *optional*) – Length of the transformed axis of the output. If n is
    smaller than the length of the input, the input is cropped. If it is larger, the
    input is padded with zeros. If n is not given, the length of the input along the
    axis specified by axis is used. See notes about padding issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**axis** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)")*,* *optional*) – Axis over which to compute the inverse DFT. If
    not given, the last axis is used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**norm** (*{"backward"**,* *"ortho"**,* *"forward"}**,* *optional*)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '**out** – The truncated or zero-padded input, transformed along the axis indicated
    by axis, or the last one if axis is not specified.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Return type:'
  prefs: []
  type: TYPE_NORMAL
- en: complex ndarray
  prefs: []
  type: TYPE_NORMAL
