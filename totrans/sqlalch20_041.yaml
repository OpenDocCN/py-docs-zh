- en: ORM Querying Guide
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sqlalchemy.org/en/20/orm/queryguide/index.html](https://docs.sqlalchemy.org/en/20/orm/queryguide/index.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This section provides an overview of emitting queries with the SQLAlchemy ORM
    using [2.0 style](../../glossary.html#term-2.0-style) usage.
  prefs: []
  type: TYPE_NORMAL
- en: Readers of this section should be familiar with the SQLAlchemy overview at [SQLAlchemy
    Unified Tutorial](../../tutorial/index.html#unified-tutorial), and in particular
    most of the content here expands upon the content at [Using SELECT Statements](../../tutorial/data_select.html#tutorial-selecting-data).
  prefs: []
  type: TYPE_NORMAL
- en: For users of SQLAlchemy 1.x
  prefs: []
  type: TYPE_NORMAL
- en: In the SQLAlchemy 2.x series, SQL SELECT statements for the ORM are constructed
    using the same [`select()`](../../core/selectable.html#sqlalchemy.sql.expression.select
    "sqlalchemy.sql.expression.select") construct as is used in Core, which is then
    invoked in terms of a [`Session`](../session_api.html#sqlalchemy.orm.Session "sqlalchemy.orm.Session")
    using the [`Session.execute()`](../session_api.html#sqlalchemy.orm.Session.execute
    "sqlalchemy.orm.Session.execute") method (as are the [`update()`](../../core/dml.html#sqlalchemy.sql.expression.update
    "sqlalchemy.sql.expression.update") and [`delete()`](../../core/dml.html#sqlalchemy.sql.expression.delete
    "sqlalchemy.sql.expression.delete") constructs now used for the [ORM-Enabled INSERT,
    UPDATE, and DELETE statements](dml.html#orm-expression-update-delete) feature).
    However, the legacy [`Query`](query.html#sqlalchemy.orm.Query "sqlalchemy.orm.Query")
    object, which performs these same steps as more of an “all-in-one” object, continues
    to remain available as a thin facade over this new system, to support applications
    that were built on the 1.x series without the need for wholesale replacement of
    all queries. For reference on this object, see the section [Legacy Query API](query.html).
  prefs: []
  type: TYPE_NORMAL
- en: '[Writing SELECT statements for ORM Mapped Classes](select.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting ORM Entities and Attributes](select.html#selecting-orm-entities-and-attributes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting ORM Entities](select.html#selecting-orm-entities)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting Multiple ORM Entities Simultaneously](select.html#selecting-multiple-orm-entities-simultaneously)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting Individual Attributes](select.html#selecting-individual-attributes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Grouping Selected Attributes with Bundles](select.html#grouping-selected-attributes-with-bundles)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting ORM Aliases](select.html#selecting-orm-aliases)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting ORM Results from Textual Statements](select.html#getting-orm-results-from-textual-statements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting Entities from Subqueries](select.html#selecting-entities-from-subqueries)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting Entities from UNIONs and other set operations](select.html#selecting-entities-from-unions-and-other-set-operations)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joins](select.html#joins)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simple Relationship Joins](select.html#simple-relationship-joins)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Chaining Multiple Joins](select.html#chaining-multiple-joins)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joins to a Target Entity](select.html#joins-to-a-target-entity)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joins to a Target with an ON Clause](select.html#joins-to-a-target-with-an-on-clause)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combining Relationship with Custom ON Criteria](select.html#combining-relationship-with-custom-on-criteria)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Relationship to join between aliased targets](select.html#using-relationship-to-join-between-aliased-targets)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joining to Subqueries](select.html#joining-to-subqueries)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joining to Subqueries along Relationship paths](select.html#joining-to-subqueries-along-relationship-paths)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Subqueries that Refer to Multiple Entities](select.html#subqueries-that-refer-to-multiple-entities)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Setting the leftmost FROM clause in a join](select.html#setting-the-leftmost-from-clause-in-a-join)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationship WHERE Operators](select.html#relationship-where-operators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[EXISTS forms: has() / any()](select.html#exists-forms-has-any)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationship Instance Comparison Operators](select.html#relationship-instance-comparison-operators)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Writing SELECT statements for Inheritance Mappings](inheritance.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SELECTing from the base class vs. specific sub-classes](inheritance.html#selecting-from-the-base-class-vs-specific-sub-classes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using selectin_polymorphic()](inheritance.html#using-selectin-polymorphic)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Applying selectin_polymorphic() to an existing eager load](inheritance.html#applying-selectin-polymorphic-to-an-existing-eager-load)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Applying loader options to the subclasses loaded by selectin_polymorphic](inheritance.html#applying-loader-options-to-the-subclasses-loaded-by-selectin-polymorphic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configuring selectin_polymorphic() on mappers](inheritance.html#configuring-selectin-polymorphic-on-mappers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using with_polymorphic()](inheritance.html#using-with-polymorphic)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Filtering Subclass Attributes with with_polymorphic()](inheritance.html#filtering-subclass-attributes-with-with-polymorphic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using aliasing with with_polymorphic](inheritance.html#using-aliasing-with-with-polymorphic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configuring with_polymorphic() on mappers](inheritance.html#configuring-with-polymorphic-on-mappers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joining to specific sub-types or with_polymorphic() entities](inheritance.html#joining-to-specific-sub-types-or-with-polymorphic-entities)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Eager Loading of Polymorphic Subtypes](inheritance.html#eager-loading-of-polymorphic-subtypes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SELECT Statements for Single Inheritance Mappings](inheritance.html#select-statements-for-single-inheritance-mappings)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Optimizing Attribute Loads for Single Inheritance](inheritance.html#optimizing-attribute-loads-for-single-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Inheritance Loading API](inheritance.html#inheritance-loading-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`with_polymorphic()`](inheritance.html#sqlalchemy.orm.with_polymorphic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`selectin_polymorphic()`](inheritance.html#sqlalchemy.orm.selectin_polymorphic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM-Enabled INSERT, UPDATE, and DELETE statements](dml.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM Bulk INSERT Statements](dml.html#orm-bulk-insert-statements)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Getting new objects with RETURNING](dml.html#getting-new-objects-with-returning)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Heterogeneous Parameter Dictionaries](dml.html#using-heterogeneous-parameter-dictionaries)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Sending NULL values in ORM bulk INSERT statements](dml.html#sending-null-values-in-orm-bulk-insert-statements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bulk INSERT for Joined Table Inheritance](dml.html#bulk-insert-for-joined-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM Bulk Insert with SQL Expressions](dml.html#orm-bulk-insert-with-sql-expressions)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Legacy Session Bulk INSERT Methods](dml.html#legacy-session-bulk-insert-methods)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM “upsert” Statements](dml.html#orm-upsert-statements)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM Bulk UPDATE by Primary Key](dml.html#orm-bulk-update-by-primary-key)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Disabling Bulk ORM Update by Primary Key for an UPDATE statement with multiple
    parameter sets](dml.html#disabling-bulk-orm-update-by-primary-key-for-an-update-statement-with-multiple-parameter-sets)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Bulk UPDATE by Primary Key for Joined Table Inheritance](dml.html#bulk-update-by-primary-key-for-joined-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Legacy Session Bulk UPDATE Methods](dml.html#legacy-session-bulk-update-methods)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM UPDATE and DELETE with Custom WHERE Criteria](dml.html#orm-update-and-delete-with-custom-where-criteria)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Important Notes and Caveats for ORM-Enabled Update and Delete](dml.html#important-notes-and-caveats-for-orm-enabled-update-and-delete)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Selecting a Synchronization Strategy](dml.html#selecting-a-synchronization-strategy)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using RETURNING with UPDATE/DELETE and Custom WHERE Criteria](dml.html#using-returning-with-update-delete-and-custom-where-criteria)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[UPDATE/DELETE with Custom WHERE Criteria for Joined Table Inheritance](dml.html#update-delete-with-custom-where-criteria-for-joined-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Legacy Query Methods](dml.html#legacy-query-methods)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Loading Options](columns.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Limiting which Columns Load with Column Deferral](columns.html#limiting-which-columns-load-with-column-deferral)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `load_only()` to reduce loaded columns](columns.html#using-load-only-to-reduce-loaded-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `defer()` to omit specific columns](columns.html#using-defer-to-omit-specific-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using raiseload to prevent deferred column loads](columns.html#using-raiseload-to-prevent-deferred-column-loads)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configuring Column Deferral on Mappings](columns.html#configuring-column-deferral-on-mappings)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `deferred()` for imperative mappers, mapped SQL expressions](columns.html#using-deferred-for-imperative-mappers-mapped-sql-expressions)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `undefer()` to “eagerly” load deferred columns](columns.html#using-undefer-to-eagerly-load-deferred-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Loading deferred columns in groups](columns.html#loading-deferred-columns-in-groups)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Undeferring by group with `undefer_group()`](columns.html#undeferring-by-group-with-undefer-group)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Undeferring on wildcards](columns.html#undeferring-on-wildcards)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configuring mapper-level “raiseload” behavior](columns.html#configuring-mapper-level-raiseload-behavior)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Loading Arbitrary SQL Expressions onto Objects](columns.html#loading-arbitrary-sql-expressions-onto-objects)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `with_expression()` with UNIONs, other subqueries](columns.html#using-with-expression-with-unions-other-subqueries)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Loading API](columns.html#column-loading-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`defer()`](columns.html#sqlalchemy.orm.defer)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`deferred()`](columns.html#sqlalchemy.orm.deferred)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`query_expression()`](columns.html#sqlalchemy.orm.query_expression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`load_only()`](columns.html#sqlalchemy.orm.load_only)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`undefer()`](columns.html#sqlalchemy.orm.undefer)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`undefer_group()`](columns.html#sqlalchemy.orm.undefer_group)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`with_expression()`](columns.html#sqlalchemy.orm.with_expression)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationship Loading Techniques](relationships.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Summary of Relationship Loading Styles](relationships.html#summary-of-relationship-loading-styles)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configuring Loader Strategies at Mapping Time](relationships.html#configuring-loader-strategies-at-mapping-time)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationship Loading with Loader Options](relationships.html#relationship-loading-with-loader-options)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Adding Criteria to loader options](relationships.html#adding-criteria-to-loader-options)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Specifying Sub-Options with Load.options()](relationships.html#specifying-sub-options-with-load-options)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Lazy Loading](relationships.html#lazy-loading)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Preventing unwanted lazy loads using raiseload](relationships.html#preventing-unwanted-lazy-loads-using-raiseload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joined Eager Loading](relationships.html#joined-eager-loading)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Zen of Joined Eager Loading](relationships.html#the-zen-of-joined-eager-loading)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Select IN loading](relationships.html#select-in-loading)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Subquery Eager Loading](relationships.html#subquery-eager-loading)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[What Kind of Loading to Use ?](relationships.html#what-kind-of-loading-to-use)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Polymorphic Eager Loading](relationships.html#polymorphic-eager-loading)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Wildcard Loading Strategies](relationships.html#wildcard-loading-strategies)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Per-Entity Wildcard Loading Strategies](relationships.html#per-entity-wildcard-loading-strategies)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Routing Explicit Joins/Statements into Eagerly Loaded Collections](relationships.html#routing-explicit-joins-statements-into-eagerly-loaded-collections)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using contains_eager() to load a custom-filtered collection result](relationships.html#using-contains-eager-to-load-a-custom-filtered-collection-result)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationship Loader API](relationships.html#relationship-loader-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`contains_eager()`](relationships.html#sqlalchemy.orm.contains_eager)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`defaultload()`](relationships.html#sqlalchemy.orm.defaultload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`immediateload()`](relationships.html#sqlalchemy.orm.immediateload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`joinedload()`](relationships.html#sqlalchemy.orm.joinedload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`lazyload()`](relationships.html#sqlalchemy.orm.lazyload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Load`](relationships.html#sqlalchemy.orm.Load)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`noload()`](relationships.html#sqlalchemy.orm.noload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`raiseload()`](relationships.html#sqlalchemy.orm.raiseload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`selectinload()`](relationships.html#sqlalchemy.orm.selectinload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`subqueryload()`](relationships.html#sqlalchemy.orm.subqueryload)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM API Features for Querying](api.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM Loader Options](api.html#orm-loader-options)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM Execution Options](api.html#orm-execution-options)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Populate Existing](api.html#populate-existing)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Autoflush](api.html#autoflush)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Fetching Large Result Sets with Yield Per](api.html#fetching-large-result-sets-with-yield-per)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Identity Token](api.html#queryguide-identity-token)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Legacy Query API](query.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The Query Object](query.html#the-query-object)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Query`](query.html#sqlalchemy.orm.Query)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM-Specific Query Constructs](query.html#orm-specific-query-constructs)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
