- en: Widget
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/widget.html](https://pymupdf.readthedocs.io/en/latest/widget.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**This class is for PDF only.**'
  prefs: []
  type: TYPE_NORMAL
- en: This class represents a PDF Form field, also called a “widget”. Throughout this
    documentation, we are using these terms synonymously. Fields technically are a
    special case of PDF annotations, which allow users with limited permissions to
    enter information in a PDF. This is primarily used for filling out forms.
  prefs: []
  type: TYPE_NORMAL
- en: Like annotations, widgets live on PDF pages. Similar to annotations, the first
    widget on a page is accessible via [`Page.first_widget`](page.html#Page.first_widget
    "Page.first_widget") and subsequent widgets can be accessed via the [`Widget.next`](#Widget.next
    "Widget.next") property.
  prefs: []
  type: TYPE_NORMAL
- en: '*(Changed in version 1.16.0)* MuPDF no longer treats widgets as a subset of
    general annotations. Consequently, [`Page.first_annot`](page.html#Page.first_annot
    "Page.first_annot") and [`Annot.next()`](annot.html#Annot.next "Annot.next") will
    deliver **non-widget annotations exclusively**, and be *None* if only form fields
    exist on a page. Vice versa, [`Page.first_widget`](page.html#Page.first_widget
    "Page.first_widget") and [`Widget.next()`](#Widget.next "Widget.next") will only
    show widgets. This design decision is purely internal to MuPDF; technically, links,
    annotations and fields have a lot in common and also continue to share the better
    part of their code within (Py-) MuPDF.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Class API**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '*New in version 1.18.15*'
  prefs: []
  type: TYPE_NORMAL
- en: Return the names of On / Off (i.e. selected / clicked or not) states a button
    field may have. While the ‘Off’ state usually is also named like so, the ‘On’
    state is often given a name relating to the functional context, for example ‘Yes’,
    ‘Female’, etc.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This method helps finding out the possible values of [`field_value`](#Widget.field_value
    "Widget.field_value") in these cases.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'returns:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'a dictionary with the names of ‘On’ and ‘Off’ for the *normal* and the *pressed-down*
    appearance of button widgets. The following example shows that the “selected”
    value is “Male”:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.22.2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Return the value of the “ON” state of check boxes and radio buttons. For check
    boxes this is always the value “Yes”. For radio buttons, this is the value to
    select / activate the button.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'returns:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'the value that sets the button to “selected”. For non-checkbox, non-radiobutton
    fields, always `None` is returned. For check boxes the return is `True`. For radio
    buttons this is the value “Male” in the following example:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'So for check boxes and radio buttons, the recommended method to set them to
    “selected”, or to check the state is the following:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_BQ
  type: TYPE_PRE
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: After any changes to a widget, this method **must be used** to store them in
    the PDF [[1]](#f1).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Reset the field’s value to its default – if defined – or remove it. Do not forget
    to issue [`update()`](#Widget.update "Widget.update") afterwards.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Point to the next form field on the page. The last widget returns *None*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: A list of up to 4 floats defining the field’s border color. Default value is
    *None* which causes border style and border width to be ignored.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: A string defining the line style of the field’s border. See [`Annot.border`](annot.html#Annot.border
    "Annot.border"). Default is “s” (“Solid”) – a continuous line. Only the first
    character (upper or lower case) will be regarded when creating a widget.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: A float defining the width of the border line. Default is 1.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: A list/tuple of integers defining the dash properties of the border line. This
    is only meaningful if *border_style == “D”* and [`border_color`](#Widget.border_color
    "Widget.border_color") is provided.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Python sequence of strings defining the valid choices of list boxes and combo
    boxes. For these widget types, this property is mandatory and must contain at
    least two items. Ignored for other types.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: A mandatory string defining the field’s name. No checking for duplicates takes
    place.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: An optional string containing an “alternate” field name. Typically used for
    any notes, help on field usage, etc. Default is the field name.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: The value of the field.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: An integer defining a large amount of properties of a field. Be careful when
    changing this attribute as this may change the field type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: A mandatory integer defining the field type. This is a value in the range of
    0 to 6\. It cannot be changed when updating the widget.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: A string describing (and derived from) the field type.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: A list of up to 4 floats defining the field’s background color.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: The caption string of a button-type field.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: A bool indicating the signing status of a signature field, else *None*.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: The rectangle containing the field.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: A list of **1, 3 or 4 floats** defining the text color. Default value is black
    (`[0, 0, 0]`).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: A string defining the font to be used. Default and replacement for invalid values
    is *“Helv”*. For valid font reference names see the table below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: A float defining the text [`fontsize`](glossary.html#fontsize "fontsize"). Default
    value is zero, which causes PDF viewer software to dynamically choose a size suitable
    for the annotation’s rectangle and text amount.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: An integer defining the maximum number of text characters. PDF viewers will
    (should) not accept a longer text.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: An integer defining acceptable text types (e.g. numeric, date, time, etc.).
    For reference only for the time being – will be ignored when creating or updating
    widgets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: The PDF [`xref`](glossary.html#xref "xref") of the widget.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) for an action associated with the widget, or *None*.
    This is the only script action supported for **button type** widgets.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) to be performed when the user types a key-stroke into
    a text field or combo box or modifies the selection in a scrollable list box.
    This action can check the keystroke for validity and reject or modify it. *None*
    if not present.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) to be performed before the field is formatted to display
    its current value. This action can modify the field’s value before formatting.
    *None* if not present.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) to be performed when the field’s value is changed.
    This action can check the new value for validity. *None* if not present.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.16.12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) to be performed to recalculate the value of this field
    when that of another field changes. *None* if not present.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.22.6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) to be performed on losing the focus of this field.
    *None* if not present.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: New in version 1.22.6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JavaScript text (unicode) to be performed on focusing this field. *None* if
    not present.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: For **adding** or **changing** one of the above scripts,
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: just put the appropriate JavaScript source code in the widget attribute. To
    **remove** a script, set the respective attribute to *None*.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Button fields only support [`script`](#Widget.script "Widget.script").
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Other script entries will automatically be set to *None*.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'It is worthwhile to look at [this](https://experienceleague.adobe.com/docs/experience-manager-learn/assets/FormsAPIReference.pdf?lang=en)
    manual with lots of information about Adobe’s standard scripts for various field
    types. For example, if you want to add a text field representing a date, you may
    want to store the following scripts. They will ensure pattern-compatible date
    formats and display date pickers in supporting viewers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Standard Fonts for Widgets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Widgets use their own resources object */DR*. A widget resources object must
    at least contain a */Font* object. Widget fonts are independent from page fonts.
    We currently support the 14 PDF base fonts using the following fixed reference
    names, or any name of an already existing field font. When specifying a text font
    for new or changed widgets, **either** choose one in the first table column (upper
    and lower case supported), **or** one of the already existing form fonts. In the
    latter case, spelling must exactly match.
  prefs: []
  type: TYPE_NORMAL
- en: To find out already existing field fonts, inspect the list [`Document.FormFonts`](document.html#Document.FormFonts
    "Document.FormFonts").
  prefs: []
  type: TYPE_NORMAL
- en: '| **Reference** | **Base14 Fontname** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| CoBI | Courier-BoldOblique |'
  prefs: []
  type: TYPE_TB
- en: '| CoBo | Courier-Bold |'
  prefs: []
  type: TYPE_TB
- en: '| CoIt | Courier-Oblique |'
  prefs: []
  type: TYPE_TB
- en: '| Cour | Courier |'
  prefs: []
  type: TYPE_TB
- en: '| HeBI | Helvetica-BoldOblique |'
  prefs: []
  type: TYPE_TB
- en: '| HeBo | Helvetica-Bold |'
  prefs: []
  type: TYPE_TB
- en: '| HeIt | Helvetica-Oblique |'
  prefs: []
  type: TYPE_TB
- en: '| Helv | Helvetica **(default)** |'
  prefs: []
  type: TYPE_TB
- en: '| Symb | Symbol |'
  prefs: []
  type: TYPE_TB
- en: '| TiBI | Times-BoldItalic |'
  prefs: []
  type: TYPE_TB
- en: '| TiBo | Times-Bold |'
  prefs: []
  type: TYPE_TB
- en: '| TiIt | Times-Italic |'
  prefs: []
  type: TYPE_TB
- en: '| TiRo | Times-Roman |'
  prefs: []
  type: TYPE_TB
- en: '| ZaDb | ZapfDingbats |'
  prefs: []
  type: TYPE_TB
- en: 'You are generally free to use any font for every widget. However, we recommend
    using *ZaDb* (“ZapfDingbats”) and [`fontsize`](glossary.html#fontsize "fontsize")
    0 for check boxes: typical viewers will put a correctly sized tickmark in the
    field’s rectangle, when it is clicked.'
  prefs: []
  type: TYPE_NORMAL
- en: Supported Widget Types
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PyMuPDF supports the creation and update of many, but not all widget types.
  prefs: []
  type: TYPE_NORMAL
- en: text (`PDF_WIDGET_TYPE_TEXT`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: push button (`PDF_WIDGET_TYPE_BUTTON`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: check box (`PDF_WIDGET_TYPE_CHECKBOX`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: combo box (`PDF_WIDGET_TYPE_COMBOBOX`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: list box (`PDF_WIDGET_TYPE_LISTBOX`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'radio button (`PDF_WIDGET_TYPE_RADIOBUTTON`): PyMuPDF does not currently support
    the **creation** of groups of (interconnected) radio buttons, where setting one
    automatically unsets the other buttons in the group. The widget object also does
    not reflect the presence of a button group. However: consistently selecting (or
    unselecting) a radio button is supported. This includes correctly setting the
    value maintained in the owning button group. Selecting a radio button may be done
    by either assigning `True` or `field.on_state()` to the field value. **De-selecting**
    the button should be done assigning `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: signature (`PDF_WIDGET_TYPE_SIGNATURE`) **read only**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: Standard Fonts for Widgets
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Widgets use their own resources object */DR*. A widget resources object must
    at least contain a */Font* object. Widget fonts are independent from page fonts.
    We currently support the 14 PDF base fonts using the following fixed reference
    names, or any name of an already existing field font. When specifying a text font
    for new or changed widgets, **either** choose one in the first table column (upper
    and lower case supported), **or** one of the already existing form fonts. In the
    latter case, spelling must exactly match.
  prefs: []
  type: TYPE_NORMAL
- en: To find out already existing field fonts, inspect the list [`Document.FormFonts`](document.html#Document.FormFonts
    "Document.FormFonts").
  prefs: []
  type: TYPE_NORMAL
- en: '| **Reference** | **Base14 Fontname** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| CoBI | Courier-BoldOblique |'
  prefs: []
  type: TYPE_TB
- en: '| CoBo | Courier-Bold |'
  prefs: []
  type: TYPE_TB
- en: '| CoIt | Courier-Oblique |'
  prefs: []
  type: TYPE_TB
- en: '| Cour | Courier |'
  prefs: []
  type: TYPE_TB
- en: '| HeBI | Helvetica-BoldOblique |'
  prefs: []
  type: TYPE_TB
- en: '| HeBo | Helvetica-Bold |'
  prefs: []
  type: TYPE_TB
- en: '| HeIt | Helvetica-Oblique |'
  prefs: []
  type: TYPE_TB
- en: '| Helv | Helvetica **(default)** |'
  prefs: []
  type: TYPE_TB
- en: '| Symb | Symbol |'
  prefs: []
  type: TYPE_TB
- en: '| TiBI | Times-BoldItalic |'
  prefs: []
  type: TYPE_TB
- en: '| TiBo | Times-Bold |'
  prefs: []
  type: TYPE_TB
- en: '| TiIt | Times-Italic |'
  prefs: []
  type: TYPE_TB
- en: '| TiRo | Times-Roman |'
  prefs: []
  type: TYPE_TB
- en: '| ZaDb | ZapfDingbats |'
  prefs: []
  type: TYPE_TB
- en: 'You are generally free to use any font for every widget. However, we recommend
    using *ZaDb* (“ZapfDingbats”) and [`fontsize`](glossary.html#fontsize "fontsize")
    0 for check boxes: typical viewers will put a correctly sized tickmark in the
    field’s rectangle, when it is clicked.'
  prefs: []
  type: TYPE_NORMAL
- en: Supported Widget Types
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PyMuPDF supports the creation and update of many, but not all widget types.
  prefs: []
  type: TYPE_NORMAL
- en: text (`PDF_WIDGET_TYPE_TEXT`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: push button (`PDF_WIDGET_TYPE_BUTTON`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: check box (`PDF_WIDGET_TYPE_CHECKBOX`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: combo box (`PDF_WIDGET_TYPE_COMBOBOX`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: list box (`PDF_WIDGET_TYPE_LISTBOX`)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'radio button (`PDF_WIDGET_TYPE_RADIOBUTTON`): PyMuPDF does not currently support
    the **creation** of groups of (interconnected) radio buttons, where setting one
    automatically unsets the other buttons in the group. The widget object also does
    not reflect the presence of a button group. However: consistently selecting (or
    unselecting) a radio button is supported. This includes correctly setting the
    value maintained in the owning button group. Selecting a radio button may be done
    by either assigning `True` or `field.on_state()` to the field value. **De-selecting**
    the button should be done assigning `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: signature (`PDF_WIDGET_TYPE_SIGNATURE`) **read only**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Footnotes
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
