- en: Opening Files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/how-to-open-a-file.html](https://pymupdf.readthedocs.io/en/latest/how-to-open-a-file.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '## Supported File Types'
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF can open files other than just PDF.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following file types are supported:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | PDF XPS EPUB MOBI FB2 CBZ SVG TXT |'
  prefs: []
  type: TYPE_TB
- en: '|  | JPG/JPEG, PNG, BMP, GIF, TIFF, PNM, PGM, PBM, PPM, PAM, JXR, JPX/JP2,
    PSDJPG/JPEG, PNG, PNM, PGM, PBM, PPM, PAM, PSD, PS |'
  prefs: []
  type: TYPE_TB
- en: How to Open a File
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To open a file, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Opening with a Wrong File Extension
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have a document with a wrong file extension for its type, you can still
    correctly open it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Assume that *“some.file”* is actually an **XPS**. Open it like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF itself does not try to determine the file type from the file contents.
    **You** are responsible for supplying the file type information in some way –
    either implicitly, via the file extension, or explicitly as shown with the `filetype`
    parameter. There are pure Python packages like [filetype](https://pypi.org/project/filetype/)
    that help you doing this. Also consult the [Document](document.html#document)
    chapter for a full description.
  prefs: []
  type: TYPE_NORMAL
- en: If PyMuPDF encounters a file with an unknown / missing extension, it will try
    to open it as a PDF. So in these cases there is no need for additional precautions.
    Similarly, for memory documents, you can just specify `doc=pymupdf.open(stream=mem_area)`
    to open it as a PDF document.
  prefs: []
  type: TYPE_NORMAL
- en: If you attempt to open an unsupported file then PyMuPDF will throw a file data
    error.
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: Opening Files as Text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PyMuPDF has the capability to open any plain text file as a document. In order
    to do this you should provide the `filetype` parameter for the `pymupdf.open`
    function as `"txt"`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: In this way you are able to open a variety of file types and perform the typical
    **non-PDF** specific features like text searching, text extracting and page rendering.
    Obviously, once you have rendered your `txt` content, then saving as PDF or merging
    with other PDF files is no problem.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Opening a `C#` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Opening an `XML` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Opening a `JSON` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: And so on!
  prefs: []
  type: TYPE_NORMAL
- en: As you can imagine many text based file formats can be *very simply opened*
    and *interpreted* by PyMuPDF. This can make data analysis and extraction for a
    wide range of previously unavailable files suddenly possible.
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ## Supported File Types'
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF can open files other than just PDF.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following file types are supported:'
  prefs: []
  type: TYPE_NORMAL
- en: '|  |  |'
  prefs: []
  type: TYPE_TB
- en: '|  | PDF XPS EPUB MOBI FB2 CBZ SVG TXT |'
  prefs: []
  type: TYPE_TB
- en: '|  | JPG/JPEG, PNG, BMP, GIF, TIFF, PNM, PGM, PBM, PPM, PAM, JXR, JPX/JP2,
    PSDJPG/JPEG, PNG, PNM, PGM, PBM, PPM, PAM, PSD, PS |'
  prefs: []
  type: TYPE_TB
- en: How to Open a File
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To open a file, do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Opening with a Wrong File Extension
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have a document with a wrong file extension for its type, you can still
    correctly open it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Assume that *“some.file”* is actually an **XPS**. Open it like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF itself does not try to determine the file type from the file contents.
    **You** are responsible for supplying the file type information in some way –
    either implicitly, via the file extension, or explicitly as shown with the `filetype`
    parameter. There are pure Python packages like [filetype](https://pypi.org/project/filetype/)
    that help you doing this. Also consult the [Document](document.html#document)
    chapter for a full description.
  prefs: []
  type: TYPE_NORMAL
- en: If PyMuPDF encounters a file with an unknown / missing extension, it will try
    to open it as a PDF. So in these cases there is no need for additional precautions.
    Similarly, for memory documents, you can just specify `doc=pymupdf.open(stream=mem_area)`
    to open it as a PDF document.
  prefs: []
  type: TYPE_NORMAL
- en: If you attempt to open an unsupported file then PyMuPDF will throw a file data
    error.
  prefs: []
  type: TYPE_NORMAL
- en: Opening with a Wrong File Extension
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have a document with a wrong file extension for its type, you can still
    correctly open it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Assume that *“some.file”* is actually an **XPS**. Open it like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: PyMuPDF itself does not try to determine the file type from the file contents.
    **You** are responsible for supplying the file type information in some way –
    either implicitly, via the file extension, or explicitly as shown with the `filetype`
    parameter. There are pure Python packages like [filetype](https://pypi.org/project/filetype/)
    that help you doing this. Also consult the [Document](document.html#document)
    chapter for a full description.
  prefs: []
  type: TYPE_NORMAL
- en: If PyMuPDF encounters a file with an unknown / missing extension, it will try
    to open it as a PDF. So in these cases there is no need for additional precautions.
    Similarly, for memory documents, you can just specify `doc=pymupdf.open(stream=mem_area)`
    to open it as a PDF document.
  prefs: []
  type: TYPE_NORMAL
- en: If you attempt to open an unsupported file then PyMuPDF will throw a file data
    error.
  prefs: []
  type: TYPE_NORMAL
- en: Opening Files as Text
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PyMuPDF has the capability to open any plain text file as a document. In order
    to do this you should provide the `filetype` parameter for the `pymupdf.open`
    function as `"txt"`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: In this way you are able to open a variety of file types and perform the typical
    **non-PDF** specific features like text searching, text extracting and page rendering.
    Obviously, once you have rendered your `txt` content, then saving as PDF or merging
    with other PDF files is no problem.
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Opening a `C#` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Opening an `XML` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Opening a `JSON` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: And so on!
  prefs: []
  type: TYPE_NORMAL
- en: As you can imagine many text based file formats can be *very simply opened*
    and *interpreted* by PyMuPDF. This can make data analysis and extraction for a
    wide range of previously unavailable files suddenly possible.
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: Examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Opening a `C#` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Opening an `XML` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Opening a `JSON` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: And so on!
  prefs: []
  type: TYPE_NORMAL
- en: As you can imagine many text based file formats can be *very simply opened*
    and *interpreted* by PyMuPDF. This can make data analysis and extraction for a
    wide range of previously unavailable files suddenly possible.
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
- en: Opening a `C#` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Opening an `XML` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Opening a `JSON` file
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: And so on!
  prefs: []
  type: TYPE_NORMAL
- en: As you can imagine many text based file formats can be *very simply opened*
    and *interpreted* by PyMuPDF. This can make data analysis and extraction for a
    wide range of previously unavailable files suddenly possible.
  prefs: []
  type: TYPE_NORMAL
- en: Do you have any feedback on this page?
  prefs: []
  type: TYPE_NORMAL
- en: '* * *'
  prefs: []
  type: TYPE_NORMAL
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  prefs: []
  type: TYPE_NORMAL
- en: This documentation covers all versions up to 1.24.4.
  prefs: []
  type: TYPE_NORMAL
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  prefs: []
  type: TYPE_NORMAL
