- en: Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: 原文：[https://docs.sqlalchemy.org/en/20/intro.html](https://docs.sqlalchemy.org/en/20/intro.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sqlalchemy.org/en/20/intro.html](https://docs.sqlalchemy.org/en/20/intro.html)
- en: 'The SQLAlchemy SQL Toolkit and Object Relational Mapper is a comprehensive
    set of tools for working with databases and Python. It has several distinct areas
    of functionality which can be used individually or combined together. Its major
    components are illustrated below, with component dependencies organized into layers:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy SQL 工具包和对象关系映射器是一套全面的用于处理数据库和 Python 的工具集。它有几个不同的功能区域，可以单独使用或组合在一起。其主要组件如下图所示，组件依赖关系组织成层次结构：
- en: '![_images/sqla_arch_small.png](../Images/c88b81f4a190846335f16b421dda67b0.png)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![_images/sqla_arch_small.png](../Images/c88b81f4a190846335f16b421dda67b0.png)'
- en: Above, the two most significant front-facing portions of SQLAlchemy are the
    **Object Relational Mapper (ORM)** and the **Core**.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 上面，SQLAlchemy 最重要的两个面向用户的部分是**对象关系映射器（ORM）**和**核心（Core）**。
- en: Core contains the breadth of SQLAlchemy’s SQL and database integration and description
    services, the most prominent part of this being the **SQL Expression Language**.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 核心部分包含了 SQLAlchemy 的 SQL 和数据库集成以及描述服务，其中最突出的部分是**SQL 表达式语言**。
- en: The SQL Expression Language is a toolkit on its own, independent of the ORM
    package, which provides a system of constructing SQL expressions represented by
    composable objects, which can then be “executed” against a target database within
    the scope of a specific transaction, returning a result set. Inserts, updates
    and deletes (i.e. [DML](glossary.html#term-DML)) are achieved by passing SQL expression
    objects representing these statements along with dictionaries that represent parameters
    to be used with each statement.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: SQL 表达式语言是一个独立于 ORM 包的工具包，它提供了一种构建 SQL 表达式的系统，这些表达式由可组合的对象表示，然后可以在特定事务范围内“执行”到目标数据库中，返回一个结果集。通过传递表示这些语句的
    SQL 表达式对象以及表示要与每个语句一起使用的参数的字典，可以实现插入、更新和删除（即[DML](glossary.html#term-DML)）。
- en: The ORM builds upon Core to provide a means of working with a domain object
    model mapped to a database schema. When using the ORM, SQL statements are constructed
    in mostly the same way as when using Core, however the task of DML, which here
    refers to the persistence of business objects in a database, is automated using
    a pattern called [unit of work](glossary.html#term-unit-of-work), which translates
    changes in state against mutable objects into INSERT, UPDATE and DELETE constructs
    which are then invoked in terms of those objects. SELECT statements are also augmented
    by ORM-specific automations and object-centric querying capabilities.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: ORM 在 Core 的基础上构建了一种用于处理映射到数据库模式的域对象模型的手段。当使用 ORM 时，SQL 语句的构造方式与使用 Core 时基本相同，但
    DML 任务（在这里指的是将业务对象持久化到数据库中）是使用一种称为[工作单元](glossary.html#term-unit-of-work)的模式自动化的，该模式将可变对象的状态变化转换为
    INSERT、UPDATE 和 DELETE 构造，并以这些对象的术语调用这些构造。SELECT 语句也通过 ORM 特定的自动化和对象中心的查询功能进行增强。
- en: Whereas working with Core and the SQL Expression language presents a schema-centric
    view of the database, along with a programming paradigm that is oriented around
    immutability, the ORM builds on top of this a domain-centric view of the database
    with a programming paradigm that is more explicitly object-oriented and reliant
    upon mutability. Since a relational database is itself a mutable service, the
    difference is that Core/SQL Expression language is command oriented whereas the
    ORM is state oriented.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 而使用 Core 和 SQL 表达式语言工作呈现了数据库的模式中心视图，以及以不可变性为导向的编程范式，ORM 在此基础上构建了一个更加明确面向对象的数据库领域视图，具有更多显式面向对象的编程范式，并依赖于可变性。由于关系型数据库本身是一个可变的服务，区别在于
    Core/SQL 表达式语言是命令导向的，而 ORM 是状态导向的。
- en: '## Documentation Overview'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '## 文档概览'
- en: 'The documentation is separated into four sections:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 文档分为四个部分：
- en: '[SQLAlchemy Unified Tutorial](tutorial/index.html#unified-tutorial) - this
    all-new tutorial for the 1.4/2.0 series of SQLAlchemy introduces the entire library
    holistically, starting from a description of Core and working more and more towards
    ORM-specific concepts. New users, as well as users coming from the 1.x series
    of SQLAlchemy, should start here.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLAlchemy 统一教程](tutorial/index.html#unified-tutorial) - 这个全新的教程适用于 1.4/2.0
    系列的 SQLAlchemy，全面介绍了整个库，从 Core 的描述开始，逐渐深入到 ORM 特定的概念。新用户以及从 SQLAlchemy 1.x 系列转来的用户应该从这里开始。'
- en: '[SQLAlchemy ORM](orm/index.html) - In this section, reference documentation
    for the ORM is presented.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLAlchemy ORM](orm/index.html) - 在这一部分中，提供了 ORM 的参考文档。'
- en: '[SQLAlchemy Core](core/index.html) - Here, reference documentation for everything
    else within Core is presented. SQLAlchemy engine, connection, and pooling services
    are also described here.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLAlchemy 核心](core/index.html) - 这里提供了 Core 中的其他所有内容的参考文档。SQLAlchemy 引擎、连接和池服务也在这里描述。'
- en: '[Dialects](dialects/index.html) - Provides reference documentation for all
    [dialect](glossary.html#term-dialect) implementations, including [DBAPI](glossary.html#term-DBAPI)
    specifics.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方言](dialects/index.html) - 提供所有 [方言](glossary.html#term-dialect) 实现的参考文档，包括
    [DBAPI](glossary.html#term-DBAPI) 具体内容。'
- en: Code Examples
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码示例
- en: Working code examples, mostly regarding the ORM, are included in the SQLAlchemy
    distribution. A description of all the included example applications is at [ORM
    Examples](orm/examples.html).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 分发包含可用于大多数 ORM 的工作代码示例。所有包含的示例应用程序的描述位于 [ORM 示例](orm/examples.html)。
- en: There is also a wide variety of examples involving both core SQLAlchemy constructs
    as well as the ORM on the wiki. See [Theatrum Chemicum](https://www.sqlalchemy.org/trac/wiki/UsageRecipes).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 wiki 上还有各种各样的示例，涉及到核心 SQLAlchemy 结构以及 ORM。请参阅 [Theatrum Chemicum](https://www.sqlalchemy.org/trac/wiki/UsageRecipes)。
- en: '## Installation Guide'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '## 安装指南'
- en: Supported Platforms
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持的平台
- en: 'SQLAlchemy supports the following platforms:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 支持以下平台：
- en: cPython 3.7 and higher
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cPython 3.7 及更高版本
- en: Python-3 compatible versions of [PyPy](http://pypy.org/)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容 Python-3 的 [PyPy](http://pypy.org/) 版本
- en: 'Changed in version 2.0: SQLAlchemy now targets Python 3.7 and above.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从 2.0 版本开始更改：SQLAlchemy 现在的目标是 Python 3.7 及以上版本。
- en: AsyncIO Support
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异步 IO 支持
- en: SQLAlchemy’s `asyncio` support depends upon the [greenlet](https://pypi.org/project/greenlet/)
    project. This dependency will be installed by default on common machine platforms,
    however is not supported on every architecture and also may not install by default
    on less common architectures. See the section [Asyncio Platform Installation Notes
    (Including Apple M1)](orm/extensions/asyncio.html#asyncio-install) for additional
    details on ensuring asyncio support is present.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 的 `asyncio` 支持依赖于 [greenlet](https://pypi.org/project/greenlet/)
    项目。这个依赖关系将默认安装在常见的机器平台上，但不支持每个架构，并且在不常见的架构上也可能不会默认安装。请参阅 [异步 IO 平台安装说明（包括 Apple
    M1）](orm/extensions/asyncio.html#asyncio-install) 部分，了解确保存在 asyncio 支持的额外详细信息。
- en: Supported Installation Methods
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持的安装方法
- en: SQLAlchemy installation is via standard Python methodologies that are based
    on [setuptools](https://pypi.org/project/setuptools/), either by referring to
    `setup.py` directly or by using [pip](https://pypi.org/project/pip/) or other
    setuptools-compatible approaches.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 的安装是通过基于 [setuptools](https://pypi.org/project/setuptools/) 的标准 Python
    方法进行的，可以直接引用 `setup.py` 或使用 [pip](https://pypi.org/project/pip/) 或其他兼容 setuptools
    的方法。
- en: Install via pip
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过 pip 安装
- en: 'When `pip` is available, the distribution can be downloaded from PyPI and installed
    in one step:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `pip` 可用时，可以从 PyPI 下载分发包，并在一步中进行安装：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This command will download the latest **released** version of SQLAlchemy from
    the [Python Cheese Shop](https://pypi.org/project/SQLAlchemy) and install it to
    your system. For most common platforms, a Python Wheel file will be downloaded
    which provides native Cython / C extensions prebuilt.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从 [Python Cheese Shop](https://pypi.org/project/SQLAlchemy) 下载最新的**发布**版本的
    SQLAlchemy 并安装到您的系统上。对于大多数常见平台，将下载提供原生 Cython / C 扩展的 Python Wheel 文件。
- en: 'In order to install the latest **prerelease** version, such as `2.0.0b1`, pip
    requires that the `--pre` flag be used:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装最新的**预发行**版本，例如`2.0.0b1`，pip 需要使用 `--pre` 标志：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Where above, if the most recent version is a prerelease, it will be installed
    instead of the latest released version.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述情况下，如果最新版本是预发行版本，则会安装该版本而不是最新发布的版本。
- en: Installing manually from the source distribution
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手动从源分发安装
- en: 'When not installing from pip, the source distribution may be installed using
    the `setup.py` script:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当不使用 pip 安装时，可以使用 `setup.py` 脚本安装源分发：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The source install is platform agnostic and will install on any platform regardless
    of whether or not Cython / C build tools are installed. As the next section [Building
    the Cython Extensions](#c-extensions) details, `setup.py` will attempt to build
    using Cython / C if possible but will fall back to a pure Python installation
    otherwise.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 源安装与平台无关，无论 Cython / C 构建工具是否安装，都将安装在任何平台上。 正如下一节 [构建 Cython 扩展](#c-extensions)
    所述，`setup.py` 将尝试在可能的情况下使用 Cython / C 进行构建，否则将回退到纯 Python 安装。
- en: '### Building the Cython Extensions'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '### 构建 Cython 扩展'
- en: SQLAlchemy includes [Cython](https://cython.org/) extensions which provide an
    extra speed boost within various areas, with a current emphasis on the speed of
    Core result sets.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 包含 [Cython](https://cython.org/) 扩展，为各个领域提供额外的速度提升，目前重点是 Core 结果集的速度。
- en: 'Changed in version 2.0: The SQLAlchemy C extensions have been rewritten using
    Cython.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 2.0 开始更改：SQLAlchemy C 扩展已使用 Cython 重新编写。
- en: '`setup.py` will automatically build the extensions if an appropriate platform
    is detected, assuming the Cython package is installed. A complete manual build
    looks like:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检测到合适的平台，则 `setup.py` 将自动构建扩展，假设 Cython 包已安装。 完整的手动构建如下所示：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Source builds may also be performed using [**PEP 517**](https://peps.python.org/pep-0517/)
    techniques, such as using [build](https://pypi.org/project/build/):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 源构建也可以使用 [**PEP 517**](https://peps.python.org/pep-0517/) 技术执行，例如使用 [build](https://pypi.org/project/build/)：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If the build of the Cython extensions fails due to Cython not being installed,
    a missing compiler or other issue, the setup process will output a warning message
    and re-run the build without the Cython extensions upon completion, reporting
    final status.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于未安装 Cython、缺少编译器或其他问题而导致 Cython 扩展的构建失败，则设置过程将输出警告消息，并在完成后重新运行不包含 Cython
    扩展的构建，报告最终状态。
- en: 'To run the build/install without even attempting to compile the Cython extensions,
    the `DISABLE_SQLALCHEMY_CEXT` environment variable may be specified. The use case
    for this is either for special testing circumstances, or in the rare case of compatibility/build
    issues not overcome by the usual “rebuild” mechanism:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要在甚至不尝试编译 Cython 扩展的情况下运行构建/安装，可以指定 `DISABLE_SQLALCHEMY_CEXT` 环境变量。 这样做的用例要么是为了特殊的测试情况，要么是在通常的“重新构建”机制无法解决的兼容性/构建问题的情况下：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Installing a Database API
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装数据库 API
- en: SQLAlchemy is designed to operate with a [DBAPI](glossary.html#term-DBAPI) implementation
    built for a particular database, and includes support for the most popular databases.
    The individual database sections in [Dialects](dialects/index.html) enumerate
    the available DBAPIs for each database, including external links.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 设计用于与为特定数据库构建的 [DBAPI](glossary.html#term-DBAPI) 实现一起运行，并支持最流行的数据库。
    [方言](dialects/index.html) 中的个别数据库部分列举了每个数据库的可用 DBAPI，包括外部链接。
- en: Checking the Installed SQLAlchemy Version
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查已安装的 SQLAlchemy 版本
- en: 'This documentation covers SQLAlchemy version 2.0\. If you’re working on a system
    that already has SQLAlchemy installed, check the version from your Python prompt
    like this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档涵盖了 SQLAlchemy 版本 2.0。 如果您正在使用已安装 SQLAlchemy 的系统，请像这样从您的 Python 提示符检查版本：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Next Steps
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下一步
- en: 'With SQLAlchemy installed, new and old users alike can [Proceed to the SQLAlchemy
    Tutorial](tutorial/index.html#unified-tutorial).  ## 1.x to 2.0 Migration'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '安装了 SQLAlchemy 后，新用户和老用户都可以[继续阅读 SQLAlchemy 教程](tutorial/index.html#unified-tutorial)。
    ## 1.x 到 2.0 迁移'
- en: 'Notes on the new API released in SQLAlchemy 2.0 is available here at [SQLAlchemy
    2.0 - Major Migration Guide](changelog/migration_20.html).  ## Documentation Overview'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 可在 [SQLAlchemy 2.0 - 主要迁移指南](changelog/migration_20.html) 这里找到关于 SQLAlchemy
    2.0 新 API 的说明。
- en: 'The documentation is separated into four sections:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 文档分为四个部分：
- en: '[SQLAlchemy Unified Tutorial](tutorial/index.html#unified-tutorial) - this
    all-new tutorial for the 1.4/2.0 series of SQLAlchemy introduces the entire library
    holistically, starting from a description of Core and working more and more towards
    ORM-specific concepts. New users, as well as users coming from the 1.x series
    of SQLAlchemy, should start here.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLAlchemy 统一教程](tutorial/index.html#unified-tutorial) - 这个全新的针对 1.4/2.0 系列
    SQLAlchemy 的教程从 Core 的描述开始，逐渐深入 ORM 特定的概念。 新用户以及从 SQLAlchemy 1.x 系列转来的用户应该从这里开始。'
- en: '[SQLAlchemy ORM](orm/index.html) - In this section, reference documentation
    for the ORM is presented.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLAlchemy ORM](orm/index.html) - 本节介绍了 ORM 的参考文档。'
- en: '[SQLAlchemy Core](core/index.html) - Here, reference documentation for everything
    else within Core is presented. SQLAlchemy engine, connection, and pooling services
    are also described here.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SQLAlchemy 核心](core/index.html) - 这里提供了核心内的其他所有内容的参考文档。SQLAlchemy 引擎、连接和池服务也在此处描述。'
- en: '[Dialects](dialects/index.html) - Provides reference documentation for all
    [dialect](glossary.html#term-dialect) implementations, including [DBAPI](glossary.html#term-DBAPI)
    specifics.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[方言](dialects/index.html) - 提供了所有 [方言](glossary.html#term-dialect) 实现的参考文档，包括
    [DBAPI](glossary.html#term-DBAPI) 具体细节。'
- en: Code Examples
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码示例
- en: Working code examples, mostly regarding the ORM, are included in the SQLAlchemy
    distribution. A description of all the included example applications is at [ORM
    Examples](orm/examples.html).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 分发包中包含了工作代码示例，主要涉及 ORM。所有包含的示例应用的描述请参阅 [ORM 示例](orm/examples.html)。
- en: There is also a wide variety of examples involving both core SQLAlchemy constructs
    as well as the ORM on the wiki. See [Theatrum Chemicum](https://www.sqlalchemy.org/trac/wiki/UsageRecipes).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多涉及核心 SQLAlchemy 构造和 ORM 的示例在维基上。请参阅 [炼金剧场](https://www.sqlalchemy.org/trac/wiki/UsageRecipes)。
- en: '## Installation Guide'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '## 安装指南'
- en: Supported Platforms
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持的平台
- en: 'SQLAlchemy supports the following platforms:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 支持以下平台：
- en: cPython 3.7 and higher
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cPython 3.7 及更高版本
- en: Python-3 compatible versions of [PyPy](http://pypy.org/)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyPy](http://pypy.org/) 的 Python-3 兼容版本'
- en: 'Changed in version 2.0: SQLAlchemy now targets Python 3.7 and above.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 2.0 开始更改：SQLAlchemy 现在面向 Python 3.7 及以上版本。
- en: AsyncIO Support
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 异步IO支持
- en: SQLAlchemy’s `asyncio` support depends upon the [greenlet](https://pypi.org/project/greenlet/)
    project. This dependency will be installed by default on common machine platforms,
    however is not supported on every architecture and also may not install by default
    on less common architectures. See the section [Asyncio Platform Installation Notes
    (Including Apple M1)](orm/extensions/asyncio.html#asyncio-install) for additional
    details on ensuring asyncio support is present.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 的 `asyncio` 支持取决于 [greenlet](https://pypi.org/project/greenlet/)
    项目。此依赖项默认情况下会安装在常见的机器平台上，但不支持每个体系结构，并且在不太常见的体系结构上也可能不会默认安装。有关确保存在 asyncio 支持的详细信息，请参阅
    [Asyncio 平台安装说明（包括 Apple M1）](orm/extensions/asyncio.html#asyncio-install) 部分。
- en: Supported Installation Methods
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持的安装方法
- en: SQLAlchemy installation is via standard Python methodologies that are based
    on [setuptools](https://pypi.org/project/setuptools/), either by referring to
    `setup.py` directly or by using [pip](https://pypi.org/project/pip/) or other
    setuptools-compatible approaches.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 的安装是通过基于 [setuptools](https://pypi.org/project/setuptools/) 的标准 Python
    方法进行的，可以直接参考 `setup.py` 或使用 [pip](https://pypi.org/project/pip/) 或其他与 setuptools
    兼容的方法。
- en: Install via pip
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过 pip 安装
- en: 'When `pip` is available, the distribution can be downloaded from PyPI and installed
    in one step:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `pip` 可用时，可以从 PyPI 下载分发包，并在一步中安装：
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: This command will download the latest **released** version of SQLAlchemy from
    the [Python Cheese Shop](https://pypi.org/project/SQLAlchemy) and install it to
    your system. For most common platforms, a Python Wheel file will be downloaded
    which provides native Cython / C extensions prebuilt.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从 [Python 奶酪商店](https://pypi.org/project/SQLAlchemy) 下载最新的**已发布**版本的 SQLAlchemy，并将其安装到您的系统上。对于大多数常见平台，将下载提供预构建的本机
    Cython / C 扩展的 Python Wheel 文件。
- en: 'In order to install the latest **prerelease** version, such as `2.0.0b1`, pip
    requires that the `--pre` flag be used:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装最新的**预发布**版本，例如 `2.0.0b1`，pip 要求必须使用 `--pre` 标志：
- en: '[PRE8]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Where above, if the most recent version is a prerelease, it will be installed
    instead of the latest released version.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述情况下，如果最新版本是预发布版本，则将安装该版本，而不是最新发布的版本。
- en: Installing manually from the source distribution
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 手动从源代码分发包安装
- en: 'When not installing from pip, the source distribution may be installed using
    the `setup.py` script:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当不从 pip 安装时，可以使用 `setup.py` 脚本安装源代码分发包：
- en: '[PRE9]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The source install is platform agnostic and will install on any platform regardless
    of whether or not Cython / C build tools are installed. As the next section [Building
    the Cython Extensions](#c-extensions) details, `setup.py` will attempt to build
    using Cython / C if possible but will fall back to a pure Python installation
    otherwise.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码安装不受平台限制，可以在任何平台上安装，无论是否安装了 Cython / C 构建工具。正如下一节[构建 Cython 扩展](#c-extensions)所述，`setup.py`将尝试使用
    Cython / C 进行构建，但如果不行，将退而求其次安装纯 Python 版本。
- en: '### Building the Cython Extensions'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '### 构建 Cython 扩展'
- en: SQLAlchemy includes [Cython](https://cython.org/) extensions which provide an
    extra speed boost within various areas, with a current emphasis on the speed of
    Core result sets.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 包含 [Cython](https://cython.org/) 扩展，这些扩展在各个领域提供了额外的速度提升，目前重点是核心结果集的速度。
- en: 'Changed in version 2.0: The SQLAlchemy C extensions have been rewritten using
    Cython.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2.0 版本中的变更：SQLAlchemy 的 C 扩展已使用 Cython 重新编写。
- en: '`setup.py` will automatically build the extensions if an appropriate platform
    is detected, assuming the Cython package is installed. A complete manual build
    looks like:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检测到合适的平台，则`setup.py`将自动构建扩展，假设已安装了 Cython 包。 完整的手动构建如下所示：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Source builds may also be performed using [**PEP 517**](https://peps.python.org/pep-0517/)
    techniques, such as using [build](https://pypi.org/project/build/):'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以使用 [**PEP 517**](https://peps.python.org/pep-0517/) 技术执行源构建，例如使用 [build](https://pypi.org/project/build/)：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: If the build of the Cython extensions fails due to Cython not being installed,
    a missing compiler or other issue, the setup process will output a warning message
    and re-run the build without the Cython extensions upon completion, reporting
    final status.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于 Cython 未安装、缺少编译器或其他问题而导致 Cython 扩展的构建失败，则设置过程将输出警告消息，并在完成后重新运行构建而不包括 Cython
    扩展，报告最终状态。
- en: 'To run the build/install without even attempting to compile the Cython extensions,
    the `DISABLE_SQLALCHEMY_CEXT` environment variable may be specified. The use case
    for this is either for special testing circumstances, or in the rare case of compatibility/build
    issues not overcome by the usual “rebuild” mechanism:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在即使不尝试编译 Cython 扩展的情况下运行构建/安装时，可以指定`DISABLE_SQLALCHEMY_CEXT`环境变量。 这种情况的用例要么是为了特殊的测试环境，要么是在通常的“重建”机制无法解决的兼容性/构建问题的情况下：
- en: '[PRE12]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Installing a Database API
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装数据库 API
- en: SQLAlchemy is designed to operate with a [DBAPI](glossary.html#term-DBAPI) implementation
    built for a particular database, and includes support for the most popular databases.
    The individual database sections in [Dialects](dialects/index.html) enumerate
    the available DBAPIs for each database, including external links.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 被设计为与针对特定数据库构建的 [DBAPI](glossary.html#term-DBAPI) 实现一起运行，并支持最流行的数据库。
    [方言](dialects/index.html) 中的各个数据库部分列举了每个数据库的可用 DBAPI，包括外部链接。
- en: Checking the Installed SQLAlchemy Version
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查已安装的 SQLAlchemy 版本
- en: 'This documentation covers SQLAlchemy version 2.0\. If you’re working on a system
    that already has SQLAlchemy installed, check the version from your Python prompt
    like this:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档涵盖了 SQLAlchemy 版本 2.0。 如果您正在使用已安装 SQLAlchemy 的系统上工作，请像这样从您的 Python 提示符检查版本：
- en: '[PRE13]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Next Steps
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下一步
- en: With SQLAlchemy installed, new and old users alike can [Proceed to the SQLAlchemy
    Tutorial](tutorial/index.html#unified-tutorial).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 SQLAlchemy 后，新用户和旧用户都可以 [继续进行 SQLAlchemy 教程](tutorial/index.html#unified-tutorial)。
- en: Supported Platforms
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持的平台
- en: 'SQLAlchemy supports the following platforms:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 支持以下平台：
- en: cPython 3.7 and higher
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: cPython 3.7 及更高版本
- en: Python-3 compatible versions of [PyPy](http://pypy.org/)
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyPy](http://pypy.org/) 的 Python-3 兼容版本'
- en: 'Changed in version 2.0: SQLAlchemy now targets Python 3.7 and above.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2.0 版本中的变更：SQLAlchemy 现在针对 Python 3.7 及以上版本。
- en: AsyncIO Support
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: AsyncIO 支持
- en: SQLAlchemy’s `asyncio` support depends upon the [greenlet](https://pypi.org/project/greenlet/)
    project. This dependency will be installed by default on common machine platforms,
    however is not supported on every architecture and also may not install by default
    on less common architectures. See the section [Asyncio Platform Installation Notes
    (Including Apple M1)](orm/extensions/asyncio.html#asyncio-install) for additional
    details on ensuring asyncio support is present.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 的 `asyncio` 支持取决于 [greenlet](https://pypi.org/project/greenlet/)
    项目。 这个依赖关系将默认安装在常见的机器平台上，但不是每个架构都支持，也可能不会默认安装在不太常见的架构上。 有关确保 asyncio 支持存在的详细信息，请参阅
    [Asyncio 平台安装说明（包括 Apple M1）](orm/extensions/asyncio.html#asyncio-install) 部分。
- en: Supported Installation Methods
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 支持的安装方法
- en: SQLAlchemy installation is via standard Python methodologies that are based
    on [setuptools](https://pypi.org/project/setuptools/), either by referring to
    `setup.py` directly or by using [pip](https://pypi.org/project/pip/) or other
    setuptools-compatible approaches.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 的安装是通过基于 [setuptools](https://pypi.org/project/setuptools/) 的标准 Python
    方法进行的，可以直接参考`setup.py`，也可以使用 [pip](https://pypi.org/project/pip/) 或其他与 setuptools
    兼容的方法。
- en: Install via pip
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过 pip 安装
- en: 'When `pip` is available, the distribution can be downloaded from PyPI and installed
    in one step:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当存在`pip`时，可以从 PyPI 下载分发并一步安装：
- en: '[PRE14]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This command will download the latest **released** version of SQLAlchemy from
    the [Python Cheese Shop](https://pypi.org/project/SQLAlchemy) and install it to
    your system. For most common platforms, a Python Wheel file will be downloaded
    which provides native Cython / C extensions prebuilt.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从 [Python Cheese Shop](https://pypi.org/project/SQLAlchemy) 下载最新的 **发布**
    版本的 SQLAlchemy，并将其安装到您的系统中。对于大多数常见平台，将下载提供本机 Cython / C 扩展预构建的 Python Wheel 文件。
- en: 'In order to install the latest **prerelease** version, such as `2.0.0b1`, pip
    requires that the `--pre` flag be used:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安装最新的 **预发布** 版本，如 `2.0.0b1`，pip 要求使用 `--pre` 标志：
- en: '[PRE15]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Where above, if the most recent version is a prerelease, it will be installed
    instead of the latest released version.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述情况下，如果最新版本是预发布版本，则将安装该版本而不是最新发布版本。
- en: Installing manually from the source distribution
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从源分发手动安装
- en: 'When not installing from pip, the source distribution may be installed using
    the `setup.py` script:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 当不使用 pip 安装时，可以使用 `setup.py` 脚本安装源分发：
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The source install is platform agnostic and will install on any platform regardless
    of whether or not Cython / C build tools are installed. As the next section [Building
    the Cython Extensions](#c-extensions) details, `setup.py` will attempt to build
    using Cython / C if possible but will fall back to a pure Python installation
    otherwise.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 源安装是平台无关的，将在任何平台上安装，无论是否安装了 Cython / C 构建工具。如下一节 [构建 Cython 扩展](#c-extensions)
    详细说明，`setup.py` 将尝试使用 Cython / C 进行构建，但否则将退回到纯 Python 安装。
- en: '### Building the Cython Extensions'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '### 构建 Cython 扩展'
- en: SQLAlchemy includes [Cython](https://cython.org/) extensions which provide an
    extra speed boost within various areas, with a current emphasis on the speed of
    Core result sets.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 包括提供额外速度提升的 [Cython](https://cython.org/) 扩展，在各个领域都有当前重点放在核心结果集的速度上。
- en: 'Changed in version 2.0: The SQLAlchemy C extensions have been rewritten using
    Cython.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本 2.0 开始更改：SQLAlchemy C 扩展已使用 Cython 重写。
- en: '`setup.py` will automatically build the extensions if an appropriate platform
    is detected, assuming the Cython package is installed. A complete manual build
    looks like:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果检测到适当的平台，`setup.py` 将自动构建扩展，假设安装了 Cython 包。完整的手动构建如下：
- en: '[PRE17]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Source builds may also be performed using [**PEP 517**](https://peps.python.org/pep-0517/)
    techniques, such as using [build](https://pypi.org/project/build/):'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 源构建也可以使用 [**PEP 517**](https://peps.python.org/pep-0517/) 技术执行，例如使用 [build](https://pypi.org/project/build/)：
- en: '[PRE18]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If the build of the Cython extensions fails due to Cython not being installed,
    a missing compiler or other issue, the setup process will output a warning message
    and re-run the build without the Cython extensions upon completion, reporting
    final status.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 Cython 扩展构建失败，原因可能是 Cython 未安装、缺少编译器或其他问题，设置过程将输出警告消息，并在完成后重新运行构建，报告最终状态而不包括
    Cython 扩展。
- en: 'To run the build/install without even attempting to compile the Cython extensions,
    the `DISABLE_SQLALCHEMY_CEXT` environment variable may be specified. The use case
    for this is either for special testing circumstances, or in the rare case of compatibility/build
    issues not overcome by the usual “rebuild” mechanism:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 若要在甚至不尝试编译 Cython 扩展的情况下运行构建/安装，可以指定 `DISABLE_SQLALCHEMY_CEXT` 环境变量。这样做的用例是特殊测试情况，或者在通常的“重新构建”机制无法克服的兼容性/构建问题的罕见情况下：
- en: '[PRE19]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Installing a Database API
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装数据库 API
- en: SQLAlchemy is designed to operate with a [DBAPI](glossary.html#term-DBAPI) implementation
    built for a particular database, and includes support for the most popular databases.
    The individual database sections in [Dialects](dialects/index.html) enumerate
    the available DBAPIs for each database, including external links.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: SQLAlchemy 设计用于与为特定数据库构建的 [DBAPI](glossary.html#term-DBAPI) 实现一起运行，并支持最流行的数据库。[方言](dialects/index.html)中的各个数据库部分列举了每个数据库的可用
    DBAPI，包括外部链接。
- en: Checking the Installed SQLAlchemy Version
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 检查已安装的 SQLAlchemy 版本
- en: 'This documentation covers SQLAlchemy version 2.0\. If you’re working on a system
    that already has SQLAlchemy installed, check the version from your Python prompt
    like this:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档涵盖了 SQLAlchemy 2.0 版本。如果你正在使用已安装了 SQLAlchemy 的系统，请在 Python 提示符中检查版本，如下所示：
- en: '[PRE20]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Next Steps
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下一步
- en: With SQLAlchemy installed, new and old users alike can [Proceed to the SQLAlchemy
    Tutorial](tutorial/index.html#unified-tutorial).
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 安装了 SQLAlchemy 后，新用户和老用户都可以[继续进行 SQLAlchemy 教程](tutorial/index.html#unified-tutorial)。
- en: '## 1.x to 2.0 Migration'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '## 1.x 到 2.0 迁移'
- en: Notes on the new API released in SQLAlchemy 2.0 is available here at [SQLAlchemy
    2.0 - Major Migration Guide](changelog/migration_20.html).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 新发布的 SQLAlchemy 2.0 版本的 API 注意事项可以在[SQLAlchemy 2.0 - 主要迁移指南](changelog/migration_20.html)这里找到。
