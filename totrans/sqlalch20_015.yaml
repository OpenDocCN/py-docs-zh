- en: ORM Mapped Class Configuration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://docs.sqlalchemy.org/en/20/orm/mapper_config.html](https://docs.sqlalchemy.org/en/20/orm/mapper_config.html)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Detailed reference for ORM configuration, not including relationships, which
    are detailed at [Relationship Configuration](relationships.html).
  prefs: []
  type: TYPE_NORMAL
- en: For a quick look at a typical ORM configuration, start with [ORM Quick Start](quickstart.html#orm-quickstart).
  prefs: []
  type: TYPE_NORMAL
- en: For an introduction to the concept of object relational mapping as implemented
    in SQLAlchemy, it’s first introduced in the [SQLAlchemy Unified Tutorial](../tutorial/index.html#unified-tutorial)
    at [Using ORM Declarative Forms to Define Table Metadata](../tutorial/metadata.html#tutorial-orm-table-metadata).
  prefs: []
  type: TYPE_NORMAL
- en: '[ORM Mapped Class Overview](mapping_styles.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[ORM Mapping Styles](mapping_styles.html#orm-mapping-styles)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative Mapping](mapping_styles.html#declarative-mapping)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Imperative Mapping](mapping_styles.html#imperative-mapping)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapped Class Essential Components](mapping_styles.html#mapped-class-essential-components)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The class to be mapped](mapping_styles.html#the-class-to-be-mapped)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The table, or other from clause object](mapping_styles.html#the-table-or-other-from-clause-object)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[The properties dictionary](mapping_styles.html#the-properties-dictionary)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other mapper configuration parameters](mapping_styles.html#other-mapper-configuration-parameters)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapped Class Behavior](mapping_styles.html#mapped-class-behavior)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Default Constructor](mapping_styles.html#default-constructor)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Maintaining Non-Mapped State Across Loads](mapping_styles.html#maintaining-non-mapped-state-across-loads)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Runtime Introspection of Mapped classes, Instances and Mappers](mapping_styles.html#runtime-introspection-of-mapped-classes-instances-and-mappers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Inspection of Mapper objects](mapping_styles.html#inspection-of-mapper-objects)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Inspection of Mapped Instances](mapping_styles.html#inspection-of-mapped-instances)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping Classes with Declarative](declarative_mapping.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative Mapping Styles](declarative_styles.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using a Declarative Base Class](declarative_styles.html#using-a-declarative-base-class)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative Mapping using a Decorator (no declarative base)](declarative_styles.html#declarative-mapping-using-a-decorator-no-declarative-base)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Table Configuration with Declarative](declarative_tables.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative Table with `mapped_column()`](declarative_tables.html#declarative-table-with-mapped-column)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Annotated Declarative Table (Type Annotated Forms for `mapped_column()`)](declarative_tables.html#using-annotated-declarative-table-type-annotated-forms-for-mapped-column)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Accessing Table and Metadata](declarative_tables.html#accessing-table-and-metadata)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative Table Configuration](declarative_tables.html#declarative-table-configuration)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Explicit Schema Name with Declarative Table](declarative_tables.html#explicit-schema-name-with-declarative-table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Setting Load and Persistence Options for Declarative Mapped Columns](declarative_tables.html#setting-load-and-persistence-options-for-declarative-mapped-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Naming Declarative Mapped Columns Explicitly](declarative_tables.html#naming-declarative-mapped-columns-explicitly)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Appending additional columns to an existing Declarative mapped class](declarative_tables.html#appending-additional-columns-to-an-existing-declarative-mapped-class)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative with Imperative Table (a.k.a. Hybrid Declarative)](declarative_tables.html#declarative-with-imperative-table-a-k-a-hybrid-declarative)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Alternate Attribute Names for Mapping Table Columns](declarative_tables.html#alternate-attribute-names-for-mapping-table-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Applying Load, Persistence and Mapping Options for Imperative Table Columns](declarative_tables.html#applying-load-persistence-and-mapping-options-for-imperative-table-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping Declaratively with Reflected Tables](declarative_tables.html#mapping-declaratively-with-reflected-tables)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using DeferredReflection](declarative_tables.html#using-deferredreflection)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Automap](declarative_tables.html#using-automap)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Automating Column Naming Schemes from Reflected Tables](declarative_tables.html#automating-column-naming-schemes-from-reflected-tables)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping to an Explicit Set of Primary Key Columns](declarative_tables.html#mapping-to-an-explicit-set-of-primary-key-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping a Subset of Table Columns](declarative_tables.html#mapping-a-subset-of-table-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapper Configuration with Declarative](declarative_config.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Defining Mapped Properties with Declarative](declarative_config.html#defining-mapped-properties-with-declarative)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapper Configuration Options with Declarative](declarative_config.html#mapper-configuration-options-with-declarative)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Constructing mapper arguments dynamically](declarative_config.html#constructing-mapper-arguments-dynamically)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other Declarative Mapping Directives](declarative_config.html#other-declarative-mapping-directives)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`__declare_last__()`](declarative_config.html#declare-last)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`__declare_first__()`](declarative_config.html#declare-first)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`metadata`](declarative_config.html#metadata)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`__abstract__`](declarative_config.html#abstract)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`__table_cls__`](declarative_config.html#table-cls)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Composing Mapped Hierarchies with Mixins](declarative_mixins.html)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Augmenting the Base](declarative_mixins.html#augmenting-the-base)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mixing in Columns](declarative_mixins.html#mixing-in-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mixing in Relationships](declarative_mixins.html#mixing-in-relationships)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mixing in `_orm.column_property()` and other `_orm.MapperProperty` classes](declarative_mixins.html#mixing-in-orm-column-property-and-other-orm-mapperproperty-classes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Mixins and Base Classes with Mapped Inheritance Patterns](declarative_mixins.html#using-mixins-and-base-classes-with-mapped-inheritance-patterns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `_orm.declared_attr()` with inheriting `Table` and `Mapper` arguments](declarative_mixins.html#using-orm-declared-attr-with-inheriting-table-and-mapper-arguments)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using `_orm.declared_attr()` to generate table-specific inheriting columns](declarative_mixins.html#using-orm-declared-attr-to-generate-table-specific-inheriting-columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Combining Table/Mapper Arguments from Multiple Mixins](declarative_mixins.html#combining-table-mapper-arguments-from-multiple-mixins)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Creating Indexes and Constraints with Naming Conventions on Mixins](declarative_mixins.html#creating-indexes-and-constraints-with-naming-conventions-on-mixins)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Integration with dataclasses and attrs](dataclasses.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Declarative Dataclass Mapping](dataclasses.html#declarative-dataclass-mapping)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Class level feature configuration](dataclasses.html#class-level-feature-configuration)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Attribute Configuration](dataclasses.html#attribute-configuration)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Column Defaults](dataclasses.html#column-defaults)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Integration with Annotated](dataclasses.html#integration-with-annotated)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using mixins and abstract superclasses](dataclasses.html#using-mixins-and-abstract-superclasses)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationship Configuration](dataclasses.html#relationship-configuration)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Non-Mapped Dataclass Fields](dataclasses.html#using-non-mapped-dataclass-fields)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Integrating with Alternate Dataclass Providers such as Pydantic](dataclasses.html#integrating-with-alternate-dataclass-providers-such-as-pydantic)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Applying ORM Mappings to an existing dataclass (legacy dataclass use)](dataclasses.html#applying-orm-mappings-to-an-existing-dataclass-legacy-dataclass-use)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping pre-existing dataclasses using Declarative With Imperative Table](dataclasses.html#mapping-pre-existing-dataclasses-using-declarative-with-imperative-table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping pre-existing dataclasses using Declarative-style fields](dataclasses.html#mapping-pre-existing-dataclasses-using-declarative-style-fields)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Declarative Mixins with pre-existing dataclasses](dataclasses.html#using-declarative-mixins-with-pre-existing-dataclasses)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping pre-existing dataclasses using Imperative Mapping](dataclasses.html#mapping-pre-existing-dataclasses-using-imperative-mapping)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Applying ORM mappings to an existing attrs class](dataclasses.html#applying-orm-mappings-to-an-existing-attrs-class)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping attrs with Declarative “Imperative Table”](dataclasses.html#mapping-attrs-with-declarative-imperative-table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping attrs with Imperative Mapping](dataclasses.html#mapping-attrs-with-imperative-mapping)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[SQL Expressions as Mapped Attributes](mapped_sql_expr.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using a Hybrid](mapped_sql_expr.html#using-a-hybrid)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using column_property](mapped_sql_expr.html#using-column-property)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Adding column_property() to an existing Declarative mapped class](mapped_sql_expr.html#adding-column-property-to-an-existing-declarative-mapped-class)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Composing from Column Properties at Mapping Time](mapped_sql_expr.html#composing-from-column-properties-at-mapping-time)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Column Deferral with `column_property()`](mapped_sql_expr.html#using-column-deferral-with-column-property)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using a plain descriptor](mapped_sql_expr.html#using-a-plain-descriptor)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Query-time SQL expressions as mapped attributes](mapped_sql_expr.html#query-time-sql-expressions-as-mapped-attributes)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Changing Attribute Behavior](mapped_attributes.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simple Validators](mapped_attributes.html#simple-validators)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`validates()`](mapped_attributes.html#sqlalchemy.orm.validates)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Custom Datatypes at the Core Level](mapped_attributes.html#using-custom-datatypes-at-the-core-level)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Descriptors and Hybrids](mapped_attributes.html#using-descriptors-and-hybrids)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Synonyms](mapped_attributes.html#synonyms)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`synonym()`](mapped_attributes.html#sqlalchemy.orm.synonym)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Operator Customization](mapped_attributes.html#operator-customization)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Composite Column Types](composites.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Working with Mapped Composite Column Types](composites.html#working-with-mapped-composite-column-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Other mapping forms for composites](composites.html#other-mapping-forms-for-composites)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Map columns directly, then pass to composite](composites.html#map-columns-directly-then-pass-to-composite)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Map columns directly, pass attribute names to composite](composites.html#map-columns-directly-pass-attribute-names-to-composite)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Imperative mapping and imperative table](composites.html#imperative-mapping-and-imperative-table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Using Legacy Non-Dataclasses](composites.html#using-legacy-non-dataclasses)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Tracking In-Place Mutations on Composites](composites.html#tracking-in-place-mutations-on-composites)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Redefining Comparison Operations for Composites](composites.html#redefining-comparison-operations-for-composites)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Nesting Composites](composites.html#nesting-composites)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Composite API](composites.html#composite-api)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`composite()`](composites.html#sqlalchemy.orm.composite)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping Class Inheritance Hierarchies](inheritance.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Joined Table Inheritance](inheritance.html#joined-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationships with Joined Inheritance](inheritance.html#relationships-with-joined-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Loading Joined Inheritance Mappings](inheritance.html#loading-joined-inheritance-mappings)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Single Table Inheritance](inheritance.html#single-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Resolving Column Conflicts with `use_existing_column`](inheritance.html#resolving-column-conflicts-with-use-existing-column)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationships with Single Table Inheritance](inheritance.html#relationships-with-single-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Building Deeper Hierarchies with `polymorphic_abstract`](inheritance.html#building-deeper-hierarchies-with-polymorphic-abstract)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Loading Single Inheritance Mappings](inheritance.html#loading-single-inheritance-mappings)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Concrete Table Inheritance](inheritance.html#concrete-table-inheritance)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Concrete Polymorphic Loading Configuration](inheritance.html#concrete-polymorphic-loading-configuration)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Abstract Concrete Classes](inheritance.html#abstract-concrete-classes)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Classical and Semi-Classical Concrete Polymorphic Configuration](inheritance.html#classical-and-semi-classical-concrete-polymorphic-configuration)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Relationships with Concrete Inheritance](inheritance.html#relationships-with-concrete-inheritance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Loading Concrete Inheritance Mappings](inheritance.html#loading-concrete-inheritance-mappings)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Non-Traditional Mappings](nonstandard_mappings.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping a Class against Multiple Tables](nonstandard_mappings.html#mapping-a-class-against-multiple-tables)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Mapping a Class against Arbitrary Subqueries](nonstandard_mappings.html#mapping-a-class-against-arbitrary-subqueries)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Multiple Mappers for One Class](nonstandard_mappings.html#multiple-mappers-for-one-class)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Configuring a Version Counter](versioning.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Simple Version Counting](versioning.html#simple-version-counting)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Custom Version Counters / Types](versioning.html#custom-version-counters-types)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Server Side Version Counters](versioning.html#server-side-version-counters)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Programmatic or Conditional Version Counters](versioning.html#programmatic-or-conditional-version-counters)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Class Mapping API](mapping_api.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry`](mapping_api.html#sqlalchemy.orm.registry)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.__init__()`](mapping_api.html#sqlalchemy.orm.registry.__init__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.as_declarative_base()`](mapping_api.html#sqlalchemy.orm.registry.as_declarative_base)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.configure()`](mapping_api.html#sqlalchemy.orm.registry.configure)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.dispose()`](mapping_api.html#sqlalchemy.orm.registry.dispose)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.generate_base()`](mapping_api.html#sqlalchemy.orm.registry.generate_base)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.map_declaratively()`](mapping_api.html#sqlalchemy.orm.registry.map_declaratively)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.map_imperatively()`](mapping_api.html#sqlalchemy.orm.registry.map_imperatively)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.mapped()`](mapping_api.html#sqlalchemy.orm.registry.mapped)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.mapped_as_dataclass()`](mapping_api.html#sqlalchemy.orm.registry.mapped_as_dataclass)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.mappers`](mapping_api.html#sqlalchemy.orm.registry.mappers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`registry.update_type_annotation_map()`](mapping_api.html#sqlalchemy.orm.registry.update_type_annotation_map)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`add_mapped_attribute()`](mapping_api.html#sqlalchemy.orm.add_mapped_attribute)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`column_property()`](mapping_api.html#sqlalchemy.orm.column_property)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`declarative_base()`](mapping_api.html#sqlalchemy.orm.declarative_base)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`declarative_mixin()`](mapping_api.html#sqlalchemy.orm.declarative_mixin)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`as_declarative()`](mapping_api.html#sqlalchemy.orm.as_declarative)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`mapped_column()`](mapping_api.html#sqlalchemy.orm.mapped_column)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`declared_attr`](mapping_api.html#sqlalchemy.orm.declared_attr)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`declared_attr.cascading`](mapping_api.html#sqlalchemy.orm.declared_attr.cascading)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`declared_attr.directive`](mapping_api.html#sqlalchemy.orm.declared_attr.directive)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase`](mapping_api.html#sqlalchemy.orm.DeclarativeBase)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.__mapper__`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.__mapper__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.__mapper_args__`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.__mapper_args__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.__table__`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.__table__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.__table_args__`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.__table_args__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.__tablename__`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.__tablename__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.metadata`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.metadata)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBase.registry`](mapping_api.html#sqlalchemy.orm.DeclarativeBase.registry)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.__mapper__`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.__mapper__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.__mapper_args__`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.__mapper_args__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.__table__`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.__table__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.__table_args__`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.__table_args__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.__tablename__`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.__tablename__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.metadata`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.metadata)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`DeclarativeBaseNoMeta.registry`](mapping_api.html#sqlalchemy.orm.DeclarativeBaseNoMeta.registry)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`has_inherited_table()`](mapping_api.html#sqlalchemy.orm.has_inherited_table)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`synonym_for()`](mapping_api.html#sqlalchemy.orm.synonym_for)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`object_mapper()`](mapping_api.html#sqlalchemy.orm.object_mapper)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`class_mapper()`](mapping_api.html#sqlalchemy.orm.class_mapper)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`configure_mappers()`](mapping_api.html#sqlalchemy.orm.configure_mappers)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`clear_mappers()`](mapping_api.html#sqlalchemy.orm.clear_mappers)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`identity_key()`](mapping_api.html#sqlalchemy.orm.util.identity_key)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`polymorphic_union()`](mapping_api.html#sqlalchemy.orm.polymorphic_union)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`orm_insert_sentinel()`](mapping_api.html#sqlalchemy.orm.orm_insert_sentinel)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`reconstructor()`](mapping_api.html#sqlalchemy.orm.reconstructor)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper`](mapping_api.html#sqlalchemy.orm.Mapper)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.__init__()`](mapping_api.html#sqlalchemy.orm.Mapper.__init__)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.add_properties()`](mapping_api.html#sqlalchemy.orm.Mapper.add_properties)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.add_property()`](mapping_api.html#sqlalchemy.orm.Mapper.add_property)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.all_orm_descriptors`](mapping_api.html#sqlalchemy.orm.Mapper.all_orm_descriptors)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.attrs`](mapping_api.html#sqlalchemy.orm.Mapper.attrs)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.base_mapper`](mapping_api.html#sqlalchemy.orm.Mapper.base_mapper)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.c`](mapping_api.html#sqlalchemy.orm.Mapper.c)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.cascade_iterator()`](mapping_api.html#sqlalchemy.orm.Mapper.cascade_iterator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.class_`](mapping_api.html#sqlalchemy.orm.Mapper.class_)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.class_manager`](mapping_api.html#sqlalchemy.orm.Mapper.class_manager)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.column_attrs`](mapping_api.html#sqlalchemy.orm.Mapper.column_attrs)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.columns`](mapping_api.html#sqlalchemy.orm.Mapper.columns)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.common_parent()`](mapping_api.html#sqlalchemy.orm.Mapper.common_parent)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.composites`](mapping_api.html#sqlalchemy.orm.Mapper.composites)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.concrete`](mapping_api.html#sqlalchemy.orm.Mapper.concrete)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.configured`](mapping_api.html#sqlalchemy.orm.Mapper.configured)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.entity`](mapping_api.html#sqlalchemy.orm.Mapper.entity)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.get_property()`](mapping_api.html#sqlalchemy.orm.Mapper.get_property)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.get_property_by_column()`](mapping_api.html#sqlalchemy.orm.Mapper.get_property_by_column)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.identity_key_from_instance()`](mapping_api.html#sqlalchemy.orm.Mapper.identity_key_from_instance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.identity_key_from_primary_key()`](mapping_api.html#sqlalchemy.orm.Mapper.identity_key_from_primary_key)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.identity_key_from_row()`](mapping_api.html#sqlalchemy.orm.Mapper.identity_key_from_row)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.inherits`](mapping_api.html#sqlalchemy.orm.Mapper.inherits)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.is_mapper`](mapping_api.html#sqlalchemy.orm.Mapper.is_mapper)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.is_sibling()`](mapping_api.html#sqlalchemy.orm.Mapper.is_sibling)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.isa()`](mapping_api.html#sqlalchemy.orm.Mapper.isa)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.iterate_properties`](mapping_api.html#sqlalchemy.orm.Mapper.iterate_properties)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.local_table`](mapping_api.html#sqlalchemy.orm.Mapper.local_table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.mapped_table`](mapping_api.html#sqlalchemy.orm.Mapper.mapped_table)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.mapper`](mapping_api.html#sqlalchemy.orm.Mapper.mapper)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.non_primary`](mapping_api.html#sqlalchemy.orm.Mapper.non_primary)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.persist_selectable`](mapping_api.html#sqlalchemy.orm.Mapper.persist_selectable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.polymorphic_identity`](mapping_api.html#sqlalchemy.orm.Mapper.polymorphic_identity)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.polymorphic_iterator()`](mapping_api.html#sqlalchemy.orm.Mapper.polymorphic_iterator)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.polymorphic_map`](mapping_api.html#sqlalchemy.orm.Mapper.polymorphic_map)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.polymorphic_on`](mapping_api.html#sqlalchemy.orm.Mapper.polymorphic_on)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.primary_key`](mapping_api.html#sqlalchemy.orm.Mapper.primary_key)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.primary_key_from_instance()`](mapping_api.html#sqlalchemy.orm.Mapper.primary_key_from_instance)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.primary_mapper()`](mapping_api.html#sqlalchemy.orm.Mapper.primary_mapper)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.relationships`](mapping_api.html#sqlalchemy.orm.Mapper.relationships)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.selectable`](mapping_api.html#sqlalchemy.orm.Mapper.selectable)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.self_and_descendants`](mapping_api.html#sqlalchemy.orm.Mapper.self_and_descendants)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.single`](mapping_api.html#sqlalchemy.orm.Mapper.single)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.synonyms`](mapping_api.html#sqlalchemy.orm.Mapper.synonyms)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.tables`](mapping_api.html#sqlalchemy.orm.Mapper.tables)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.validators`](mapping_api.html#sqlalchemy.orm.Mapper.validators)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`Mapper.with_polymorphic_mappers`](mapping_api.html#sqlalchemy.orm.Mapper.with_polymorphic_mappers)'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MappedAsDataclass`](mapping_api.html#sqlalchemy.orm.MappedAsDataclass)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[`MappedClassProtocol`](mapping_api.html#sqlalchemy.orm.MappedClassProtocol)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
