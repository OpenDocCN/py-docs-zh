["```py\nclass Annot\n```", "```py\nget_pixmap(matrix=pymupdf.Identity, dpi=None, colorspace=pymupdf.csRGB, alpha=False)\n```", "```py\nget_text(opt, clip=None, flags=None)\n```", "```py\nget_textbox(rect)\n```", "```py\nset_info(info=None, content=None, title=None, creationDate=None, modDate=None, subject=None)\n```", "```py\nset_line_ends(start, end)\n```", "```py\nset_oc(xref)\n```", "```py\nget_oc()\n```", "```py\nset_irt_xref(xref)\n```", "```py\nset_open(value)\n```", "```py\nset_popup(rect)\n```", "```py\nset_opacity(value)\n```", "```py\nblendmode\n```", "```py\nset_blendmode(blendmode)\n```", "```py\nset_name(name)\n```", "```py\nset_rect(rect)\n```", "```py\nset_rotation(angle)\n```", "```py\nset_border(border=None, width=None, style=None, dashes=None, clouds=None)\n```", "```py\nset_flags(flags)\n```", "```py\nset_colors(colors=None, stroke=None, fill=None)\n```", "```py\ndelete_responses()\n```", "```py\nupdate(opacity=None, blend_mode=None, fontsize=0, text_color=None, border_color=None, fill_color=None, cross_out=True, rotate=-1)\n```", "```py\nfile_info\n```", "```py\nget_file()\n```", "```py\nupdate_file(buffer=None, filename=None, ufilename=None, desc=None)\n```", "```py\nget_sound()\n```", "```py\nopacity\n```", "```py\nparent\n```", "```py\nrotation\n```", "```py\nrect\n```", "```py\nnext\n```", "```py\ntype\n```", "```py\ninfo\n```", "```py\nflags\n```", "```py\nline_ends\n```", "```py\nvertices\n```", "```py\ncolors\n```", "```py\nxref\n```", "```py\nirt_xref\n```", "```py\npopup_xref\n```", "```py\nhas_popup\n```", "```py\nis_open\n```", "```py\npopup_rect\n```", "```py\nrect_delta\n```", "```py\nborder\n```", "```py\ndoc = pymupdf.open(\"circle-in.pdf\")\npage = doc[0]                          # page 0\nannot = page.first_annot                # get the annotation\nannot.set_border(dashes=[3])           # set dashes to \"3 on, 3 off ...\"\n\n# set stroke and fill color to some blue\nannot.set_colors({\"stroke\":(0, 0, 1), \"fill\":(0.75, 0.8, 0.95)})\ninfo = annot.info                      # get info dict\ninfo[\"title\"] = \"Jorj X. McKie\"        # set author\n\n# text in popup window ...\ninfo[\"content\"] = \"I changed border and colors and enlarged the image by 20%.\"\ninfo[\"subject\"] = \"Demonstration of PyMuPDF\"     # some PDF viewers also show this\nannot.set_info(info)                   # update info dict\nr = annot.rect                         # take annot rect\nr.x1 = r.x0 + r.width  * 1.2           # new location has same top-left\nr.y1 = r.y0 + r.height * 1.2           # but 20% longer sides\nannot.set_rect(r)                      # update rectangle\nannot.update()                         # update the annot's appearance\ndoc.save(\"circle-out.pdf\")             # save \n```", "```py\ndoc = pymupdf.open(\"circle-in.pdf\")\npage = doc[0]                          # page 0\nannot = page.first_annot                # get the annotation\nannot.set_border(dashes=[3])           # set dashes to \"3 on, 3 off ...\"\n\n# set stroke and fill color to some blue\nannot.set_colors({\"stroke\":(0, 0, 1), \"fill\":(0.75, 0.8, 0.95)})\ninfo = annot.info                      # get info dict\ninfo[\"title\"] = \"Jorj X. McKie\"        # set author\n\n# text in popup window ...\ninfo[\"content\"] = \"I changed border and colors and enlarged the image by 20%.\"\ninfo[\"subject\"] = \"Demonstration of PyMuPDF\"     # some PDF viewers also show this\nannot.set_info(info)                   # update info dict\nr = annot.rect                         # take annot rect\nr.x1 = r.x0 + r.width  * 1.2           # new location has same top-left\nr.y1 = r.y0 + r.height * 1.2           # but 20% longer sides\nannot.set_rect(r)                      # update rectangle\nannot.update()                         # update the annot's appearance\ndoc.save(\"circle-out.pdf\")             # save \n```"]