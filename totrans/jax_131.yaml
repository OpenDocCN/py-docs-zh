- en: jax.typing module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jax.typing 模块
- en: 原文：[`jax.readthedocs.io/en/latest/jax.typing.html`](https://jax.readthedocs.io/en/latest/jax.typing.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/jax.typing.html`](https://jax.readthedocs.io/en/latest/jax.typing.html)
- en: The JAX typing module is where JAX-specific static type annotations live. This
    submodule is a work in progress; to see the proposal behind the types exported
    here, see [`jax.readthedocs.io/en/latest/jep/12049-type-annotations.html`](https://jax.readthedocs.io/en/latest/jep/12049-type-annotations.html).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 类型注解模块是 JAX 特定静态类型注解的存放地。这个子模块仍在开发中；要查看这里导出的类型背后的提案，请参阅[`jax.readthedocs.io/en/latest/jep/12049-type-annotations.html`](https://jax.readthedocs.io/en/latest/jep/12049-type-annotations.html)。
- en: 'The currently-available types are:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当前可用的类型包括：
- en: '`jax.Array`: annotation for any JAX array or tracer (i.e. representations of
    arrays within JAX transforms).'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jax.Array`: 适用于任何 JAX 数组或跟踪器的注解（即 JAX 变换中的数组表示）。'
- en: '`jax.typing.ArrayLike`: annotation for any value that is safe to implicitly
    cast to a JAX array; this includes `jax.Array`, [`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(in NumPy v2.0)"), as well as Python builtin numeric values (e.g. [`int`](https://docs.python.org/3/library/functions.html#int
    "(in Python v3.12)"), [`float`](https://docs.python.org/3/library/functions.html#float
    "(in Python v3.12)"), etc.) and numpy scalar values (e.g. `numpy.int32`, `numpy.flota64`,
    etc.)'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jax.typing.ArrayLike`: 适用于任何安全隐式转换为 JAX 数组的值；这包括 `jax.Array`、[`numpy.ndarray`](https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray
    "(在 NumPy v2.0)")，以及 Python 内置数值类型（例如[`int`](https://docs.python.org/3/library/functions.html#int
    "(在 Python v3.12)")、[`float`](https://docs.python.org/3/library/functions.html#float
    "(在 Python v3.12)") 等）和 numpy 标量值（例如 `numpy.int32`、`numpy.float64` 等）。'
- en: '`jax.typing.DTypeLike`: annotation for any value that can be cast to a JAX-compatible
    dtype; this includes strings (e.g. ‘float32’, ‘int32’), scalar types (e.g. float,
    np.float32), dtypes (e.g. np.dtype(‘float32’)), or objects with a dtype attribute
    (e.g. jnp.float32, jnp.int32).'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`jax.typing.DTypeLike`: 适用于可以转换为 JAX 兼容 dtype 的任何值；这包括字符串（例如 ''float32''、''int32''）、标量类型（例如
    float、np.float32）、dtype（例如 np.dtype(''float32'')）、或具有 dtype 属性的对象（例如 jnp.float32、jnp.int32）。'
- en: We may add additional types here in future releases.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能在将来的版本中添加其他类型。
- en: JAX Typing Best Practices
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JAX 类型注解最佳实践
- en: When annotating JAX arrays in public API functions, we recommend using `ArrayLike`
    for array inputs, and `Array` for array outputs.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在公共 API 函数中注释 JAX 数组时，我们建议使用 `ArrayLike` 来标注数组输入，使用 `Array` 来标注数组输出。
- en: 'For example, your function might look like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您的函数可能如下所示：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Most of JAX’s public APIs follow this pattern. Note in particular that we recommend
    JAX functions to not accept sequences such as [`list`](https://docs.python.org/3/library/stdtypes.html#list
    "(in Python v3.12)") or [`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple
    "(in Python v3.12)") in place of arrays, as this can cause extra overhead in JAX
    transforms like `jit()` and can behave in unexpected ways with batch-wise transforms
    like `vmap()` or `jax.pmap()`. For more information on this, see [Non-array inputs
    NumPy vs JAX](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#non-array-inputs-numpy-vs-jax)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 的大多数公共 API 遵循这种模式。特别需要注意的是，我们建议 JAX 函数不要接受序列，如[`list`](https://docs.python.org/3/library/stdtypes.html#list
    "(在 Python v3.12)")或[`tuple`](https://docs.python.org/3/library/stdtypes.html#tuple
    "(在 Python v3.12)")，而应该接受数组，因为这样可以避免在像 `jit()` 这样的 JAX 变换中产生额外的开销，并且在类似批处理变换 `vmap()`
    或 `jax.pmap()` 中可能会表现出意外行为。更多信息，请参阅[NumPy vs JAX 中的非数组输入](https://jax.readthedocs.io/en/latest/notebooks/Common_Gotchas_in_JAX.html#non-array-inputs-numpy-vs-jax)。
- en: List of Members
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成员列表
- en: '| `ArrayLike` | Type annotation for JAX array-like objects. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `ArrayLike` | 适用于 JAX 数组类似对象的类型注解。 |'
- en: '| `DTypeLike` | alias of [`str`](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") &#124; [`type`](https://docs.python.org/3/library/functions.html#type
    "(in Python v3.12)")[[`Any`](https://docs.python.org/3/library/typing.html#typing.Any
    "(in Python v3.12)")] &#124; `dtype` &#124; `SupportsDType` |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `DTypeLike` | 别名为[`str`](https://docs.python.org/3/library/stdtypes.html#str
    "(在 Python v3.12)") &#124; [`type`](https://docs.python.org/3/library/functions.html#type
    "(在 Python v3.12)")[[`Any`](https://docs.python.org/3/library/typing.html#typing.Any
    "(在 Python v3.12)")] &#124; `dtype` &#124; `SupportsDType` |'
