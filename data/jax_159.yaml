- en: jax.experimental.sparse.bcoo_update_layout
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jax.experimental.sparse.bcoo_update_layout
- en: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_update_layout.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_update_layout.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_update_layout.html`](https://jax.readthedocs.io/en/latest/_autosummary/jax.experimental.sparse.bcoo_update_layout.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Update the storage layout (i.e. n_batch & n_dense) of a BCOO matrix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 BCOO 矩阵的存储布局（即 n_batch 和 n_dense）。
- en: In many cases this can be done without introducing undue storage overhead. However,
    increasing `mat.n_batch` or `mat.n_dense` will lead to very inefficient storage,
    with many explicitly-stored zeros, unless the new batch or dense dimensions have
    size 0 or 1\. In such cases, `bcoo_update_layout` will raise a `SparseEfficiencyError`.
    This can be silenced by specifying the `on_inefficient` argument.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，可以在不引入不必要的存储开销的情况下完成此操作。然而，增加 `mat.n_batch` 或 `mat.n_dense` 将导致存储效率非常低下，许多零值都是显式存储的，除非新的批处理或密集维度的大小为
    0 或 1。在这种情况下，`bcoo_update_layout` 将引发 `SparseEfficiencyError`。可以通过指定 `on_inefficient`
    参数来消除此警告。
- en: 'Parameters:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**mat** (*BCOO*) – BCOO array'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**mat**（*BCOO*） – BCOO 数组'
- en: '**n_batch** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)") *|* *None*) – optional(int) the number of batch dimensions in
    the output matrix. If None, then n_batch = mat.n_batch.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**n_batch**（[*int*](https://docs.python.org/3/library/functions.html#int "(在
    Python v3.12 中)") *|* *None*） – 可选参数（整数），输出矩阵中批处理维度的数量。如果为 None，则 n_batch = mat.n_batch。'
- en: '**n_dense** ([*int*](https://docs.python.org/3/library/functions.html#int "(in
    Python v3.12)") *|* *None*) – optional(int) the number of dense dimensions in
    the output matrix. If None, then n_dense = mat.n_dense.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**n_dense**（[*int*](https://docs.python.org/3/library/functions.html#int "(在
    Python v3.12 中)") *|* *None*） – 可选参数（整数），输出矩阵中密集维度的数量。如果为 None，则 n_dense = mat.n_dense。'
- en: '**on_inefficient** ([*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(in Python v3.12)") *|* *None*) – optional(string), one of `[''error'', ''warn'',
    None]`. Specify the behavior in case of an inefficient reconfiguration. This is
    defined as a reconfiguration where the size of the resulting representation is
    much larger than the size of the input representation.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**on_inefficient**（[*str*](https://docs.python.org/3/library/stdtypes.html#str
    "(在 Python v3.12 中)") *|* *None*） – 可选参数（字符串），其中之一 `[''error'', ''warn'', None]`。指定在重新配置效率低下的情况下的行为。这被定义为结果表示的大小远大于输入表示的情况。'
- en: 'Returns:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: BCOO array
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: BCOO 数组
- en: A BCOO array representing the same sparse array as the input, with the specified
    layout. `mat_out.todense()` will match `mat.todense()` up to appropriate precision.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 表示与输入相同的稀疏数组的 BCOO 数组，具有指定的布局。 `mat_out.todense()` 将与 `mat.todense()` 在适当的精度上匹配。
- en: 'Return type:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: mat_out
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: mat_out
