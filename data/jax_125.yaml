- en: jax.nn.initializers module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jax.nn.initializers 模块
- en: 原文：[`jax.readthedocs.io/en/latest/jax.nn.initializers.html`](https://jax.readthedocs.io/en/latest/jax.nn.initializers.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/jax.nn.initializers.html`](https://jax.readthedocs.io/en/latest/jax.nn.initializers.html)
- en: Common neural network layer initializers, consistent with definitions used in
    Keras and Sonnet.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与Keras和Sonnet中定义一致的常见神经网络层初始化器。
- en: Initializers
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始化器
- en: This module provides common neural network layer initializers, consistent with
    definitions used in Keras and Sonnet.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块提供了与Keras和Sonnet中定义一致的常见神经网络层初始化器。
- en: 'An initializer is a function that takes three arguments: `(key, shape, dtype)`
    and returns an array with dimensions `shape` and data type `dtype`. Argument `key`
    is a PRNG key (e.g. from `jax.random.key()`), used to generate random numbers
    to initialize the array.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化器是一个函数，接受三个参数：`(key, shape, dtype)`，并返回一个具有形状`shape`和数据类型`dtype`的数组。参数`key`是一个PRNG密钥（例如来自`jax.random.key()`），用于生成初始化数组的随机数。
- en: '| `constant`(value[, dtype]) | Builds an initializer that returns arrays full
    of a constant `value`. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `constant`(value[, dtype]) | 构建一个返回常数值数组的初始化器。 |'
- en: '| `delta_orthogonal`([scale, column_axis, dtype]) | Builds an initializer for
    delta orthogonal kernels. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `delta_orthogonal`([scale, column_axis, dtype]) | 构建一个用于增量正交核的初始化器。 |'
- en: '| `glorot_normal`([in_axis, out_axis, ...]) | Builds a Glorot normal initializer
    (aka Xavier normal initializer). |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `glorot_normal`([in_axis, out_axis, ...]) | 构建一个Glorot正态初始化器（又称Xavier正态初始化器）。
    |'
- en: '| `glorot_uniform`([in_axis, out_axis, ...]) | Builds a Glorot uniform initializer
    (aka Xavier uniform initializer). |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `glorot_uniform`([in_axis, out_axis, ...]) | 构建一个Glorot均匀初始化器（又称Xavier均匀初始化器）。
    |'
- en: '| `he_normal`([in_axis, out_axis, batch_axis, dtype]) | Builds a He normal
    initializer (aka Kaiming normal initializer). |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `he_normal`([in_axis, out_axis, batch_axis, dtype]) | 构建一个He正态初始化器（又称Kaiming正态初始化器）。
    |'
- en: '| `he_uniform`([in_axis, out_axis, batch_axis, ...]) | Builds a He uniform
    initializer (aka Kaiming uniform initializer). |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `he_uniform`([in_axis, out_axis, batch_axis, ...]) | 构建一个He均匀初始化器（又称Kaiming均匀初始化器）。
    |'
- en: '| `lecun_normal`([in_axis, out_axis, ...]) | Builds a Lecun normal initializer.
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `lecun_normal`([in_axis, out_axis, ...]) | 构建一个Lecun正态初始化器。 |'
- en: '| `lecun_uniform`([in_axis, out_axis, ...]) | Builds a Lecun uniform initializer.
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `lecun_uniform`([in_axis, out_axis, ...]) | 构建一个Lecun均匀初始化器。 |'
- en: '| `normal`([stddev, dtype]) | Builds an initializer that returns real normally-distributed
    random arrays. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `normal`([stddev, dtype]) | 构建一个返回实数正态分布随机数组的初始化器。 |'
- en: '| `ones`(key, shape[, dtype]) | An initializer that returns a constant array
    full of ones. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `ones`(key, shape[, dtype]) | 返回一个填充为一的常数数组的初始化器。 |'
- en: '| `orthogonal`([scale, column_axis, dtype]) | Builds an initializer that returns
    uniformly distributed orthogonal matrices. |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `orthogonal`([scale, column_axis, dtype]) | 构建一个返回均匀分布正交矩阵的初始化器。 |'
- en: '| `truncated_normal`([stddev, dtype, lower, upper]) | Builds an initializer
    that returns truncated-normal random arrays. |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `truncated_normal`([stddev, dtype, lower, upper]) | 构建一个返回截断正态分布随机数组的初始化器。
    |'
- en: '| `uniform`([scale, dtype]) | Builds an initializer that returns real uniformly-distributed
    random arrays. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| `uniform`([scale, dtype]) | 构建一个返回实数均匀分布随机数组的初始化器。 |'
- en: '| `variance_scaling`(scale, mode, distribution) | Initializer that adapts its
    scale to the shape of the weights tensor. |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `variance_scaling`(scale, mode, distribution) | 初始化器，根据权重张量的形状调整其尺度。 |'
- en: '| `zeros`(key, shape[, dtype]) | An initializer that returns a constant array
    full of zeros. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `zeros`(key, shape[, dtype]) | 返回一个填充零的常数数组的初始化器。 |'
