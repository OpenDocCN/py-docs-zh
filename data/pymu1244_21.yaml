- en: Common Issues and their Solutions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见问题及其解决方案
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/recipes-common-issues-and-their-solutions.html](https://pymupdf.readthedocs.io/en/latest/recipes-common-issues-and-their-solutions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/recipes-common-issues-and-their-solutions.html](https://pymupdf.readthedocs.io/en/latest/recipes-common-issues-and-their-solutions.html)
- en: '## How To Dynamically Clean Up Corrupt PDFs'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何动态清理损坏的 PDF 文档'
- en: This shows a potential use of PyMuPDF with another Python PDF library (the excellent
    pure Python package [pdfrw](https://pypi.python.org/pypi/pdfrw) is used here as
    an example).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这展示了 PyMuPDF 与另一个 Python PDF 库的潜在用法（这里使用了优秀的纯 Python 包 [pdfrw](https://pypi.python.org/pypi/pdfrw)
    作为示例）。
- en: 'If a clean, non-corrupt / decompressed PDF is needed, one could dynamically
    invoke PyMuPDF to recover from many problems like so:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要干净的、非损坏/解压缩的 PDF，可以动态调用 PyMuPDF 以解决许多问题，比如：
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: With the command line utility *pdftk* ([available](https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/)
    for Windows only, but reported to also run under [Wine](https://www.winehq.org/))
    a similar result can be achieved, see [here](http://www.overthere.co.uk/2013/07/22/improving-pypdf2-with-pdftk/).
    However, you must invoke it as a separate process via *subprocess.Popen*, using
    stdin and stdout as communication vehicles.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用命令行实用程序 *pdftk*（[仅适用](https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/)
    于 Windows，但据报道也可在 [Wine](https://www.winehq.org/) 下运行），可以达到类似的结果，请参见 [此处](http://www.overthere.co.uk/2013/07/22/improving-pypdf2-with-pdftk/)。但是，您必须通过
    *subprocess.Popen* 作为独立进程调用它，使用 stdin 和 stdout 作为通信工具。
- en: How to Convert Any Document to PDF
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何将任何文档转换为 PDF
- en: Here is a script that converts any PyMuPDF [supported document](how-to-open-a-file.html#supported-file-types)
    to a PDF. These include XPS, EPUB, FB2, CBZ and image formats, including multi-page
    TIFF images.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个将任何 PyMuPDF [支持的文档](how-to-open-a-file.html#supported-file-types) 转换为 PDF
    的脚本。这些包括 XPS、EPUB、FB2、CBZ 和包括多页 TIFF 图像在内的图像格式。
- en: 'It features maintaining any metadata, table of contents and links contained
    in the source document:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 它支持维护源文档中包含的任何元数据、目录和链接：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: How to Deal with Messages Issued by MuPDF
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何处理 MuPDF 发出的消息
- en: Since PyMuPDF v1.16.0, **error messages** issued by the underlying MuPDF library
    are being redirected to the Python standard device *sys.stderr*. So you can handle
    them like any other output going to this devices.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 自 PyMuPDF v1.16.0 起，由底层 MuPDF 库发出的 **错误消息** 被重定向到 Python 标准设备 *sys.stderr*。因此，您可以像处理任何其他输出一样处理它们。
- en: In addition, these messages go to the internal buffer together with any MuPDF
    warnings – see below.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这些消息与任何 MuPDF 警告一起进入内部缓冲区，详情见下文。
- en: We always prefix these messages with an identifying string *“mupdf:”*. If you
    prefer to not see recoverable MuPDF errors at all, issue the command `pymupdf.TOOLS.mupdf_display_errors(False)`.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终使用识别字符串 *“mupdf:”* 作为这些消息的前缀。如果您不想看到可恢复的 MuPDF 错误消息，可以执行命令 `pymupdf.TOOLS.mupdf_display_errors(False)`。
- en: MuPDF warnings continue to be stored in an internal buffer and can be viewed
    using [`Tools.mupdf_warnings()`](tools.html#Tools.mupdf_warnings "Tools.mupdf_warnings").
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: MuPDF 警告继续存储在内部缓冲区中，并可以使用 [`Tools.mupdf_warnings()`](tools.html#Tools.mupdf_warnings
    "Tools.mupdf_warnings") 查看。
- en: Please note that MuPDF errors may or may not lead to Python exceptions. In other
    words, you may see error messages from which MuPDF can recover and continue processing.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，MuPDF 错误可能会导致或不会导致 Python 异常。换句话说，您可能会看到 MuPDF 可以恢复并继续处理的错误消息。
- en: 'Example output for a **recoverable error**. We are opening a damaged PDF, but
    MuPDF is able to repair it and gives us a little information on what happened.
    Then we illustrate how to find out whether the document can later be saved incrementally.
    Checking the [`Document.is_dirty`](document.html#Document.is_dirty "Document.is_dirty")
    attribute at this point also indicates that during `pymupdf.open` the document
    had to be repaired:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 可恢复错误的示例输出。我们打开了一个损坏的 PDF，但是 MuPDF 能够修复它，并给出了一些关于发生情况的信息。然后，我们说明如何查看文档是否可以后续增量保存。在这一点上，通过检查
    [`Document.is_dirty`](document.html#Document.is_dirty "Document.is_dirty") 属性，也表明在
    `pymupdf.open` 期间必须修复文档：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Example output for an **unrecoverable error**:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 无法恢复错误的示例输出：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Changing Annotations: Unexpected Behaviour'
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改注释：意外行为
- en: Problem
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: 'There are two scenarios:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 存在两种情况：
- en: '**Updating** an annotation with PyMuPDF which was created by some other software.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 PyMuPDF **更新** 由其他软件创建的注释。
- en: '**Creating** an annotation with PyMuPDF and later changing it with some other
    software.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 PyMuPDF **创建** 注释，稍后用其他软件更改它。
- en: In both cases you may experience unintended changes, like a different annotation
    icon or text font, the fill color or line dashing have disappeared, line end symbols
    have changed their size or even have disappeared too, etc.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，可能会发生意外更改，如不同的注释图标或文本字体，填充颜色或线型消失，线段末端符号大小变化甚至消失等等。
- en: Cause
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Annotation maintenance is handled differently by each PDF maintenance application.
    Some annotation types may not be supported, or not be supported fully or some
    details may be handled in a different way than in another application. **There
    is no standard.**
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 每个PDF维护应用程序处理注释维护的方式不同。某些注释类型可能不受支持，或者不完全支持，或者某些细节可能以与另一个应用程序不同的方式处理。**没有标准。**
- en: 'Almost always a PDF application also comes with its own icons (file attachments,
    sticky notes and stamps) and its own set of supported text fonts. For example:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个PDF应用程序都配有自己的图标（文件附件、便笺和印章）以及自己支持的文本字体集。例如：
- en: '(Py-) MuPDF only supports these 5 basic fonts for ‘FreeText’ annotations: Helvetica,
    Times-Roman, Courier, ZapfDingbats and Symbol – no italics / no bold variations.
    When changing a ‘FreeText’ annotation created by some other app, its font will
    probably not be recognized nor accepted and be replaced by Helvetica.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （Py-）MuPDF仅支持这5种基本字体的‘FreeText’注释：Helvetica、Times-Roman、Courier、ZapfDingbats和Symbol
    - 没有斜体/粗体变体。当更改由其他应用程序创建的‘FreeText’注释时，其字体可能不会被识别或接受，会被替换为Helvetica。
- en: PyMuPDF supports all PDF text markers (highlight, underline, strikeout, squiggly),
    but these types cannot be updated with Adobe Acrobat Reader.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF支持所有PDF文本标记（高亮、下划线、删除线、波浪线），但这些类型无法在Adobe Acrobat Reader中更新。
- en: 'In most cases there also exists limited support for line dashing which causes
    existing dashes to be replaced by straight lines. For example:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，对线段破折号的支持也有限，这会导致现有的虚线被直线替换。例如：
- en: PyMuPDF fully supports all line dashing forms, while other viewers only accept
    a limited subset.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF完全支持所有线段破折号形式，而其他查看器仅接受有限的子集。
- en: Solutions
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Unfortunately there is not much you can do in most of these cases.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在大多数情况下，你无能为力。
- en: Stay with the same software for **creating and changing** an annotation.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用相同软件来**创建和更改**注释。
- en: 'When using PyMuPDF to change an “alien” annotation, try to **avoid** [`Annot.update()`](annot.html#Annot.update
    "Annot.update"). The following methods **can be used without it,** so that the
    original appearance should be maintained:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当使用PyMuPDF更改“外部”注释时，尽量**避免**使用[`Annot.update()`](annot.html#Annot.update "Annot.update")。以下方法**无需此操作**，可以保持原始外观：
- en: '[`Annot.set_rect()`](annot.html#Annot.set_rect "Annot.set_rect") (location
    changes)'
  id: totrans-38
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_rect()`](annot.html#Annot.set_rect "Annot.set_rect")（位置变更）'
- en: ''
  id: totrans-39
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-40
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_flags()`](annot.html#Annot.set_flags "Annot.set_flags") (annotation
    behaviour)'
  id: totrans-41
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_flags()`](annot.html#Annot.set_flags "Annot.set_flags")（注释行为）'
- en: ''
  id: totrans-42
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-43
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_info()`](annot.html#Annot.set_info "Annot.set_info") (meta information,
    except changes to *content*)'
  id: totrans-44
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_info()`](annot.html#Annot.set_info "Annot.set_info")（元信息，除*内容*之外的更改）'
- en: ''
  id: totrans-45
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-46
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_popup()`](annot.html#Annot.set_popup "Annot.set_popup") (create
    popup or change its rect)'
  id: totrans-47
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_popup()`](annot.html#Annot.set_popup "Annot.set_popup")（创建弹出窗口或更改其矩形）'
- en: ''
  id: totrans-48
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-49
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Annot.set_optional_content()` (add / remove reference to optional content
    information)'
  id: totrans-50
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Annot.set_optional_content()`（添加/移除可选内容信息的引用）'
- en: ''
  id: totrans-51
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-52
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_open()`](annot.html#Annot.set_open "Annot.set_open")'
  id: totrans-53
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_open()`](annot.html#Annot.set_open "Annot.set_open")'
- en: ''
  id: totrans-54
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-55
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.update_file()`](annot.html#Annot.update_file "Annot.update_file") (file
    attachment changes)'
  id: totrans-56
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.update_file()`](annot.html#Annot.update_file "Annot.update_file")（文件附件更改）'
- en: Missing or Unreadable Extracted Text
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 丢失或无法读取的提取文本
- en: 'Fairly often, text extraction does not work text as you would expect: text
    may be missing, or may not appear in the reading sequence visible on your screen,
    or contain garbled characters (like a ? or a “TOFU” symbol), etc. This can be
    caused by a number of different problems.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 文本提取经常不按预期工作：文本可能丢失，或者不会出现在屏幕上可见的阅读顺序中，或者包含乱码字符（如问号或“TOFU”符号）等。这可能由多种不同问题引起。
- en: 'Problem: no text is extracted'
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：未提取到任何文本
- en: Your PDF viewer does display text, but you cannot select it with your cursor,
    and text extraction delivers nothing.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你的PDF查看器显示文本，但无法用光标选择它，文本提取结果为空。
- en: Cause
  id: totrans-61
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: You may be looking at an image embedded in the PDF page (e.g. a scanned PDF).
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能在PDF页面中看到嵌入的图像（例如扫描的PDF）。
- en: The PDF creator used no font, but **simulated** text by painting it, using little
    lines and curves. E.g. a capital “D” could be painted by a line “|” and a left-open
    semi-circle, an “o” by an ellipse, and so on.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PDF 创建者未使用字体，而是通过绘制使用小线条和曲线来模拟文本。例如，一个大写的“D”可能是通过一条“|”和一个左开放的半圆绘制，一个“o”可能是通过一个椭圆绘制，依此类推。
- en: Solution
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use an OCR software like [OCRmyPDF](https://pypi.org/project/ocrmypdf/) to insert
    a hidden text layer underneath the visible page. The resulting PDF should behave
    as expected.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 OCR 软件如 [OCRmyPDF](https://pypi.org/project/ocrmypdf/) 在可见页面下方插入隐藏文本层。生成的
    PDF 应如预期般运行。
- en: 'Problem: unreadable text'
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：无法阅读的文本
- en: Text extraction does not deliver the text in readable order, duplicates some
    text, or is otherwise garbled.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 文本提取未按可读顺序交付文本，重复某些文本或以其他方式混乱。
- en: Cause
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: The single characters are readable as such (no “<?>” symbols), but the sequence
    in which the text is **coded in the file** deviates from the reading order. The
    motivation behind may be technical or protection of data against unwanted copies.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单个字符可读取（无“<?>”符号），但文件中的文本编码顺序与阅读顺序不符合。背后的动机可能是技术性的或用于保护数据免受未经授权的复制。
- en: Many “<?>” symbols occur, indicating MuPDF could not interpret these characters.
    The font may indeed be unsupported by MuPDF, or the PDF creator may haved used
    a font that displays readable text, but on purpose obfuscates the originating
    corresponding unicode character.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许多“<?>”符号出现，表明 MuPDF 无法解释这些字符。字体可能确实不受 MuPDF 支持，或者 PDF 创建者可能使用了一种显示可读文本但有意混淆对应
    Unicode 字符的字体。
- en: Solution
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use layout preserving text extraction: `python -m fitz gettext file.pdf`.'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用保留布局的文本提取：`python -m fitz gettext file.pdf`。
- en: If other text extraction tools also don’t work, then the only solution again
    is OCRing the page.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果其他文本提取工具也不起作用，那么唯一的解决方案还是对页面进行 OCR 处理。
- en: Do you have any feedback on this page?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您对本页面有什么反馈吗？
- en: '* * *'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不附带任何明示或暗示的担保。本软件根据许可证分发，未经许可不得复制、修改或分发。请参阅许可信息，详情请访问 [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    或联系美国加利福尼亚州旧金山 Mesa 街39号108A套房的 Artifex Software Inc. 以获取更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖所有版本，直至1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
- en: How To Dynamically Clean Up Corrupt PDFs
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何动态清理损坏的 PDF
- en: This shows a potential use of PyMuPDF with another Python PDF library (the excellent
    pure Python package [pdfrw](https://pypi.python.org/pypi/pdfrw) is used here as
    an example).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这展示了 PyMuPDF 与另一个 Python PDF 库（这里使用的优秀纯 Python 包 [pdfrw](https://pypi.python.org/pypi/pdfrw)
    仅作为示例）的潜在用途。
- en: 'If a clean, non-corrupt / decompressed PDF is needed, one could dynamically
    invoke PyMuPDF to recover from many problems like so:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要干净、非损坏/解压缩的 PDF，则可以动态调用 PyMuPDF 以解决诸多问题，例如：
- en: '[PRE4]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: With the command line utility *pdftk* ([available](https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/)
    for Windows only, but reported to also run under [Wine](https://www.winehq.org/))
    a similar result can be achieved, see [here](http://www.overthere.co.uk/2013/07/22/improving-pypdf2-with-pdftk/).
    However, you must invoke it as a separate process via *subprocess.Popen*, using
    stdin and stdout as communication vehicles.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 使用命令行实用工具 *pdftk*（仅适用于 Windows，但据报道也可在 [Wine](https://www.winehq.org/) 下运行），可以达到类似的效果，请参阅
    [此处](http://www.overthere.co.uk/2013/07/22/improving-pypdf2-with-pdftk/)。但是，您必须通过
    *subprocess.Popen* 作为单独的进程调用它，使用 stdin 和 stdout 作为通信工具。
- en: How to Convert Any Document to PDF
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何将任何文档转换为 PDF
- en: Here is a script that converts any PyMuPDF [supported document](how-to-open-a-file.html#supported-file-types)
    to a PDF. These include XPS, EPUB, FB2, CBZ and image formats, including multi-page
    TIFF images.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个将任何 PyMuPDF [支持的文档](how-to-open-a-file.html#supported-file-types) 转换为 PDF
    的脚本。这些文档包括 XPS、EPUB、FB2、CBZ 和图像格式，包括多页 TIFF 图像。
- en: 'It features maintaining any metadata, table of contents and links contained
    in the source document:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 它具有维护源文档中包含的任何元数据、目录和链接的功能：
- en: '[PRE5]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How to Deal with Messages Issued by MuPDF
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何处理MuPDF发出的消息
- en: Since PyMuPDF v1.16.0, **error messages** issued by the underlying MuPDF library
    are being redirected to the Python standard device *sys.stderr*. So you can handle
    them like any other output going to this devices.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 自PyMuPDF v1.16.0以来，由底层MuPDF库发出的 **错误消息** 已重定向到Python标准设备 *sys.stderr*。因此，您可以像处理此设备上的任何其他输出一样处理它们。
- en: In addition, these messages go to the internal buffer together with any MuPDF
    warnings – see below.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这些消息与MuPDF警告一起发送到内部缓冲区 – 请参阅下文。
- en: We always prefix these messages with an identifying string *“mupdf:”*. If you
    prefer to not see recoverable MuPDF errors at all, issue the command `pymupdf.TOOLS.mupdf_display_errors(False)`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终用标识字符串 *“mupdf:”* 前缀这些消息。如果您希望根本不看到可恢复的MuPDF错误，请发出命令 `pymupdf.TOOLS.mupdf_display_errors(False)`。
- en: MuPDF warnings continue to be stored in an internal buffer and can be viewed
    using [`Tools.mupdf_warnings()`](tools.html#Tools.mupdf_warnings "Tools.mupdf_warnings").
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: MuPDF警告继续存储在内部缓冲区中，并且可以使用[`Tools.mupdf_warnings()`](tools.html#Tools.mupdf_warnings
    "Tools.mupdf_warnings")查看。
- en: Please note that MuPDF errors may or may not lead to Python exceptions. In other
    words, you may see error messages from which MuPDF can recover and continue processing.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，MuPDF的错误可能会导致Python异常，也可能不会。换句话说，您可能会看到MuPDF可以恢复并继续处理的错误消息。
- en: 'Example output for a **recoverable error**. We are opening a damaged PDF, but
    MuPDF is able to repair it and gives us a little information on what happened.
    Then we illustrate how to find out whether the document can later be saved incrementally.
    Checking the [`Document.is_dirty`](document.html#Document.is_dirty "Document.is_dirty")
    attribute at this point also indicates that during `pymupdf.open` the document
    had to be repaired:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**可恢复错误**的示例输出。我们正在打开一个受损的PDF，但MuPDF能够修复它，并且为我们提供了一些关于发生了什么的信息。然后，我们说明如何查明文档是否可以随后以增量方式保存。在此时检查[`Document.is_dirty`](document.html#Document.is_dirty
    "Document.is_dirty")属性还表明，`pymupdf.open`期间必须对文档进行修复：'
- en: '[PRE6]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Example output for an **unrecoverable error**:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**不可恢复错误**的示例输出：'
- en: '[PRE7]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Changing Annotations: Unexpected Behaviour'
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改注释：意外行为
- en: Problem
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: 'There are two scenarios:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 存在两种场景：
- en: '**Updating** an annotation with PyMuPDF which was created by some other software.'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用PyMuPDF **更新**由其他软件创建的注释。
- en: '**Creating** an annotation with PyMuPDF and later changing it with some other
    software.'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用PyMuPDF **创建** 注释，然后使用其他软件更改它。
- en: In both cases you may experience unintended changes, like a different annotation
    icon or text font, the fill color or line dashing have disappeared, line end symbols
    have changed their size or even have disappeared too, etc.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，您可能会遇到意外的变化，比如不同的注释图标或文本字体，填充颜色或线条虚线消失，线条末尾符号的大小已更改或甚至也已消失等。
- en: Cause
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Annotation maintenance is handled differently by each PDF maintenance application.
    Some annotation types may not be supported, or not be supported fully or some
    details may be handled in a different way than in another application. **There
    is no standard.**
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 每个PDF维护应用程序对注释维护的处理方式各不相同。某些注释类型可能不受支持，或者支持不完全，或者某些细节可能与其他应用程序处理方式不同。**没有标准**。
- en: 'Almost always a PDF application also comes with its own icons (file attachments,
    sticky notes and stamps) and its own set of supported text fonts. For example:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个PDF应用程序还配有自己的图标（文件附件、便笺和图章）和一组支持的文本字体。例如：
- en: '(Py-) MuPDF only supports these 5 basic fonts for ‘FreeText’ annotations: Helvetica,
    Times-Roman, Courier, ZapfDingbats and Symbol – no italics / no bold variations.
    When changing a ‘FreeText’ annotation created by some other app, its font will
    probably not be recognized nor accepted and be replaced by Helvetica.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （Py-）MuPDF仅支持‘FreeText’注释的这5种基本字体：Helvetica，Times-Roman，Courier，ZapfDingbats和Symbol
    – 没有斜体/加粗变体。当更改由其他应用程序创建的‘FreeText’注释时，其字体可能不会被识别或接受，并被Helvetica替换。
- en: PyMuPDF supports all PDF text markers (highlight, underline, strikeout, squiggly),
    but these types cannot be updated with Adobe Acrobat Reader.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF支持所有PDF文本标记（高亮、下划线、删除线、波浪线），但这些类型无法与Adobe Acrobat Reader一起更新。
- en: 'In most cases there also exists limited support for line dashing which causes
    existing dashes to be replaced by straight lines. For example:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，线条虚线的支持也是有限的，这导致现有虚线被直线替换。例如：
- en: PyMuPDF fully supports all line dashing forms, while other viewers only accept
    a limited subset.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF完全支持所有线条虚线形式，而其他查看器只接受有限的子集。
- en: Solutions
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Unfortunately there is not much you can do in most of these cases.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在大多数情况下，您无法做太多事情。
- en: Stay with the same software for **creating and changing** an annotation.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建议您使用相同的软件**创建和更改**注释。
- en: 'When using PyMuPDF to change an “alien” annotation, try to **avoid** [`Annot.update()`](annot.html#Annot.update
    "Annot.update"). The following methods **can be used without it,** so that the
    original appearance should be maintained:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当使用PyMuPDF更改一个“外来”注释时，请尽量**避免**使用[`Annot.update()`](annot.html#Annot.update
    "Annot.update")。以下方法**可以在没有它的情况下使用**，以保持原始外观：
- en: '[`Annot.set_rect()`](annot.html#Annot.set_rect "Annot.set_rect") (location
    changes)'
  id: totrans-115
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_rect()`](annot.html#Annot.set_rect "Annot.set_rect")（位置更改）'
- en: ''
  id: totrans-116
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-117
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_flags()`](annot.html#Annot.set_flags "Annot.set_flags") (annotation
    behaviour)'
  id: totrans-118
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_flags()`](annot.html#Annot.set_flags "Annot.set_flags")（注释行为）'
- en: ''
  id: totrans-119
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-120
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_info()`](annot.html#Annot.set_info "Annot.set_info") (meta information,
    except changes to *content*)'
  id: totrans-121
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_info()`](annot.html#Annot.set_info "Annot.set_info")（元信息，除了*内容*更改）'
- en: ''
  id: totrans-122
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-123
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_popup()`](annot.html#Annot.set_popup "Annot.set_popup") (create
    popup or change its rect)'
  id: totrans-124
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_popup()`](annot.html#Annot.set_popup "Annot.set_popup")（创建弹出窗口或更改其矩形）'
- en: ''
  id: totrans-125
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-126
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Annot.set_optional_content()` (add / remove reference to optional content
    information)'
  id: totrans-127
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Annot.set_optional_content()`（添加/删除可选内容信息的引用）'
- en: ''
  id: totrans-128
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-129
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_open()`](annot.html#Annot.set_open "Annot.set_open")'
  id: totrans-130
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_open()`](annot.html#Annot.set_open "Annot.set_open")'
- en: ''
  id: totrans-131
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-132
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.update_file()`](annot.html#Annot.update_file "Annot.update_file") (file
    attachment changes)'
  id: totrans-133
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.update_file()`](annot.html#Annot.update_file "Annot.update_file")（文件附件更改）'
- en: Problem
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题
- en: 'There are two scenarios:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种情况：
- en: '**Updating** an annotation with PyMuPDF which was created by some other software.'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用PyMuPDF更新由其他软件创建的注释。
- en: '**Creating** an annotation with PyMuPDF and later changing it with some other
    software.'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用PyMuPDF创建注释，然后使用其他软件更改它。
- en: In both cases you may experience unintended changes, like a different annotation
    icon or text font, the fill color or line dashing have disappeared, line end symbols
    have changed their size or even have disappeared too, etc.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两种情况下，您可能会遇到意外的更改，比如不同的注释图标或文本字体，填充颜色或线条虚线已经消失，线段终止符号改变了大小甚至也消失了，等等。
- en: Cause
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: Annotation maintenance is handled differently by each PDF maintenance application.
    Some annotation types may not be supported, or not be supported fully or some
    details may be handled in a different way than in another application. **There
    is no standard.**
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 每个PDF维护应用程序都以不同的方式处理注释维护。某些注释类型可能不受支持，或者支持不完全，或者某些细节可能以与另一个应用程序不同的方式处理。**没有标准**。
- en: 'Almost always a PDF application also comes with its own icons (file attachments,
    sticky notes and stamps) and its own set of supported text fonts. For example:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个PDF应用程序都配备了自己的图标（文件附件、便笺和印章）和自己支持的文本字体。例如：
- en: '(Py-) MuPDF only supports these 5 basic fonts for ‘FreeText’ annotations: Helvetica,
    Times-Roman, Courier, ZapfDingbats and Symbol – no italics / no bold variations.
    When changing a ‘FreeText’ annotation created by some other app, its font will
    probably not be recognized nor accepted and be replaced by Helvetica.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （Py-）MuPDF仅支持这5种基本字体用于“FreeText”注释：Helvetica、Times-Roman、Courier、ZapfDingbats和Symbol
    – 没有斜体/粗体变体。当更改其他应用程序创建的“FreeText”注释时，其字体可能无法识别或接受，并被替换为Helvetica。
- en: PyMuPDF supports all PDF text markers (highlight, underline, strikeout, squiggly),
    but these types cannot be updated with Adobe Acrobat Reader.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF支持所有PDF文本标记（高亮、下划线、删除线、波浪线），但这些类型无法使用Adobe Acrobat Reader更新。
- en: 'In most cases there also exists limited support for line dashing which causes
    existing dashes to be replaced by straight lines. For example:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数情况下，线条虚线也存在有限的支持，这会导致现有的虚线被直线替换。例如：
- en: PyMuPDF fully supports all line dashing forms, while other viewers only accept
    a limited subset.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF完全支持所有线条虚线形式，而其他查看器只接受有限的子集。
- en: Solutions
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Unfortunately there is not much you can do in most of these cases.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在大多数情况下，您无法做太多事情。
- en: Stay with the same software for **creating and changing** an annotation.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 建议您使用相同的软件**创建和更改**注释。
- en: 'When using PyMuPDF to change an “alien” annotation, try to **avoid** [`Annot.update()`](annot.html#Annot.update
    "Annot.update"). The following methods **can be used without it,** so that the
    original appearance should be maintained:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当使用 PyMuPDF 更改一个“外来”的注释时，请尽量**避免**使用 [`Annot.update()`](annot.html#Annot.update
    "Annot.update")。以下方法**可以在没有它的情况下**使用，以便保持原始外观：
- en: '[`Annot.set_rect()`](annot.html#Annot.set_rect "Annot.set_rect") (location
    changes)'
  id: totrans-150
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_rect()`](annot.html#Annot.set_rect "Annot.set_rect")（位置更改）'
- en: ''
  id: totrans-151
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-152
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_flags()`](annot.html#Annot.set_flags "Annot.set_flags") (annotation
    behaviour)'
  id: totrans-153
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_flags()`](annot.html#Annot.set_flags "Annot.set_flags")（注释行为）'
- en: ''
  id: totrans-154
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-155
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_info()`](annot.html#Annot.set_info "Annot.set_info") (meta information,
    except changes to *content*)'
  id: totrans-156
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_info()`](annot.html#Annot.set_info "Annot.set_info")（元信息，不包括*内容*的更改）'
- en: ''
  id: totrans-157
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-158
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_popup()`](annot.html#Annot.set_popup "Annot.set_popup") (create
    popup or change its rect)'
  id: totrans-159
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_popup()`](annot.html#Annot.set_popup "Annot.set_popup")（创建弹出窗口或更改其位置）'
- en: ''
  id: totrans-160
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-161
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`Annot.set_optional_content()` (add / remove reference to optional content
    information)'
  id: totrans-162
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Annot.set_optional_content()`（添加/删除可选内容信息）'
- en: ''
  id: totrans-163
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-164
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.set_open()`](annot.html#Annot.set_open "Annot.set_open")'
  id: totrans-165
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.set_open()`](annot.html#Annot.set_open "Annot.set_open")'
- en: ''
  id: totrans-166
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-167
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '[`Annot.update_file()`](annot.html#Annot.update_file "Annot.update_file") (file
    attachment changes)'
  id: totrans-168
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Annot.update_file()`](annot.html#Annot.update_file "Annot.update_file")（文件附件更改）'
- en: Missing or Unreadable Extracted Text
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未提取到或无法读取的文本
- en: 'Fairly often, text extraction does not work text as you would expect: text
    may be missing, or may not appear in the reading sequence visible on your screen,
    or contain garbled characters (like a ? or a “TOFU” symbol), etc. This can be
    caused by a number of different problems.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 文本提取经常不按您期望的方式工作：可能缺少文本，或者在屏幕上可见的阅读顺序中没有出现，或者包含乱码字符（如？或“TOFU”符号）等。这可能由多种不同的问题引起。
- en: 'Problem: no text is extracted'
  id: totrans-171
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：未提取到文本
- en: Your PDF viewer does display text, but you cannot select it with your cursor,
    and text extraction delivers nothing.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 您的PDF查看器显示文本，但无法用鼠标选择它，文本提取结果为空。
- en: Cause
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: You may be looking at an image embedded in the PDF page (e.g. a scanned PDF).
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能您正在查看嵌入在PDF页面中的图像（例如扫描的PDF）。
- en: The PDF creator used no font, but **simulated** text by painting it, using little
    lines and curves. E.g. a capital “D” could be painted by a line “|” and a left-open
    semi-circle, an “o” by an ellipse, and so on.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PDF创建者未使用字体，而是通过绘制使用小线条和曲线来**模拟**文本。例如，一个大写的“D”可以通过一条竖线“|”和一个左开的半圆来绘制，“o”可以通过一个椭圆来绘制，等等。
- en: Solution
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use an OCR software like [OCRmyPDF](https://pypi.org/project/ocrmypdf/) to insert
    a hidden text layer underneath the visible page. The resulting PDF should behave
    as expected.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 使用像[OCRmyPDF](https://pypi.org/project/ocrmypdf/)这样的OCR软件，在可见页面下方插入一个隐藏文本层。生成的PDF应该按预期方式工作。
- en: 'Problem: unreadable text'
  id: totrans-178
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：不可读文本
- en: Text extraction does not deliver the text in readable order, duplicates some
    text, or is otherwise garbled.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 文本提取未按可读顺序提供文本，重复了一些文本，或者其他情况下乱码。
- en: Cause
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: The single characters are readable as such (no “<?>” symbols), but the sequence
    in which the text is **coded in the file** deviates from the reading order. The
    motivation behind may be technical or protection of data against unwanted copies.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单个字符可直接阅读（没有“<?>”符号），但**文件中编码的顺序**与阅读顺序不同。这背后的动机可能是技术性的或为了保护数据免受未经授权的复制。
- en: Many “<?>” symbols occur, indicating MuPDF could not interpret these characters.
    The font may indeed be unsupported by MuPDF, or the PDF creator may haved used
    a font that displays readable text, but on purpose obfuscates the originating
    corresponding unicode character.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许多“<?>”符号出现，表明MuPDF无法解释这些字符。字体可能确实不受MuPDF支持，或者PDF创建者可能使用了一种显示可读文本但故意混淆原始对应Unicode字符的字体。
- en: Solution
  id: totrans-183
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use layout preserving text extraction: `python -m fitz gettext file.pdf`.'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用保留布局的文本提取：`python -m fitz gettext file.pdf`。
- en: If other text extraction tools also don’t work, then the only solution again
    is OCRing the page.
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果其他文本提取工具也不起作用，那么唯一的解决方案再次是对页面进行OCR。
- en: Do you have any feedback on this page?
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 对本页面有任何反馈吗？
- en: '* * *'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不提供任何明示或暗示的担保。本软件根据许可证分发，并且未经明确授权不得复制、修改或分发。有关详细信息，请参阅许可信息，网址为[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)，或联系美国旧金山94129号，Mesa街39号108A套房的Artifex
    Software Inc.。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档覆盖所有版本，直至1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
- en: 'Problem: no text is extracted'
  id: totrans-191
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：未提取任何文本
- en: Your PDF viewer does display text, but you cannot select it with your cursor,
    and text extraction delivers nothing.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 您的PDF查看器显示文本，但您不能用光标选择它，且文本提取无效。
- en: Cause
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: You may be looking at an image embedded in the PDF page (e.g. a scanned PDF).
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可能在PDF页面中嵌入了图像（例如扫描过的PDF）。
- en: The PDF creator used no font, but **simulated** text by painting it, using little
    lines and curves. E.g. a capital “D” could be painted by a line “|” and a left-open
    semi-circle, an “o” by an ellipse, and so on.
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PDF创建者未使用任何字体，而是通过绘制使用小线条和曲线来**模拟**文本。例如，大写字母“D”可以由一条竖线“|”和一个左开弧组成，“o”可以由一个椭圆组成，依此类推。
- en: Solution
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: Use an OCR software like [OCRmyPDF](https://pypi.org/project/ocrmypdf/) to insert
    a hidden text layer underneath the visible page. The resulting PDF should behave
    as expected.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 使用OCR软件像[OCRmyPDF](https://pypi.org/project/ocrmypdf/)在可见页面下插入一个隐藏的文本层。生成的PDF应按预期工作。
- en: 'Problem: unreadable text'
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：无法阅读的文本
- en: Text extraction does not deliver the text in readable order, duplicates some
    text, or is otherwise garbled.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 文本提取未按可读顺序提供文本，复制了部分文本，或者内容混乱。
- en: Cause
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 原因
- en: The single characters are readable as such (no “<?>” symbols), but the sequence
    in which the text is **coded in the file** deviates from the reading order. The
    motivation behind may be technical or protection of data against unwanted copies.
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些单个字符可读性良好（无“<?>”符号），但**文件中编码的**文本顺序与阅读顺序不同。其动机可能是技术性的或为了保护数据免受未经授权的复制。
- en: Many “<?>” symbols occur, indicating MuPDF could not interpret these characters.
    The font may indeed be unsupported by MuPDF, or the PDF creator may haved used
    a font that displays readable text, but on purpose obfuscates the originating
    corresponding unicode character.
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 出现许多“<?>”符号，表明MuPDF无法解释这些字符。该字体可能确实不受MuPDF支持，或者PDF创建者可能使用了一种显示可读文本但故意混淆原始对应Unicode字符的字体。
- en: Solution
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use layout preserving text extraction: `python -m fitz gettext file.pdf`.'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用保留布局的文本提取：`python -m fitz gettext file.pdf`。
- en: If other text extraction tools also don’t work, then the only solution again
    is OCRing the page.
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果其他文本提取工具也无法正常工作，则唯一的解决方案是再次对页面进行OCR处理。
- en: Do you have any feedback on this page?
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 对本页有任何反馈意见吗？
- en: '* * *'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不提供任何明示或暗示的担保。本软件根据许可证分发，并且未经明确授权不得复制、修改或分发。有关详细信息，请参阅许可信息，网址为[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)，或联系美国旧金山94129号，Mesa街39号108A套房的Artifex
    Software Inc.。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档覆盖所有版本，直至1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
