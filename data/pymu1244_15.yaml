- en: Stories
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故事
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/recipes-stories.html](https://pymupdf.readthedocs.io/en/latest/recipes-stories.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/recipes-stories.html](https://pymupdf.readthedocs.io/en/latest/recipes-stories.html)
- en: This document showcases some typical use cases for [Stories](tutorial.html#workingwithstories).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了一些典型的[故事](tutorial.html#workingwithstories)使用案例。
- en: 'As mentioned in the [tutorial](tutorial.html#workingwithstories), stories may
    be created using up to three input sources: HTML, CSS and Archives – all of which
    are optional and which, respectively, can be provided programmatically.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 如教程中所述，故事可以使用最多三个输入源创建：HTML、CSS和存档 - 所有这些都是可选的，并且可以分别以编程方式提供。
- en: The following examples will showcase combinations for using these inputs.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例将展示使用这些输入的组合。
- en: Note
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Many of these recipe’s source code are included as examples in the `docs` folder.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这些配方的许多源代码都包含在`docs`文件夹中作为示例。
- en: '## How to Add a Line of Text with Some Formatting'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何添加一行带有一些格式的文本'
- en: 'Here is the inevitable “Hello World” example. We will show two variants:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是不可避免的“Hello World”示例。我们将展示两种变体：
- en: Create using existing HTML source [[1]](#f1), that may come from anywhere.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用现有HTML源创建[[1]](#f1)，可以来自任何地方。
- en: Create using the Python API.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Python API创建。
- en: '* * *'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Variant using an existing HTML source [[1]](#f1) – which in this case is defined
    as a constant in the script:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用现有HTML源[[1]](#f1)的变体 - 在这种情况下，已在脚本中定义为常量：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The above effect (sans-serif and blue text) could have been achieved by using
    a separate CSS source like so:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 上述效果（无衬线和蓝色文本）可以通过使用单独的CSS源文件来实现，如下所示：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '* * *'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'The Python API variant – everything is created programmatically:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Python API变体 - 一切都是以编程方式创建的：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Both variants will produce the same output PDF.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 两个变体将产生相同的输出PDF。
- en: '* * *  ## How to use Images'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何使用图像'
- en: Images can be referenced in the provided HTML source, or the reference to a
    desired image can also be stored via the Python API. In any case, this requires
    using an [Archive](archive-class.html#archive), which refers to the place where
    the image can be found.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图像可以在提供的HTML源中引用，或者也可以通过Python API存储对所需图像的引用。无论哪种情况，这都需要使用[Archive](archive-class.html#archive)，该存档引用了可以找到图像的位置。
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Images with the binary content embedded in the HTML source are **not supported**
    by stories.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML源中嵌入二进制内容的图像不受故事支持。
- en: 'We extend our “Hello World” example from above and display an image of our
    planet right after the text. Assuming the image has the name “world.jpg” and is
    present in the script’s folder, then this is the modified version of the above
    Python API variant:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将上面的“Hello World”示例扩展，并在文本后显示我们星球的图像。假设图像名称为“world.jpg”，并且位于脚本文件夹中，则这是上述Python
    API变体的修改版本：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '* * *  ## How to Read External HTML and CSS for a Story'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何阅读故事的外部HTML和CSS'
- en: These cases are fairly straightforward.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这些情况相当简单。
- en: 'As a general recommendation, HTML and CSS sources should be **read as binary
    files** and decoded before using them in a story. The Python `pathlib.Path` provides
    convenient ways to do this:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一般建议，应该将HTML和CSS源文件**作为二进制文件读取**并在在故事中使用之前进行解码。Python的`pathlib.Path`提供了方便的方法来实现这一点：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '* * *  ## How to Output Database Content with Story Templates'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何使用故事模板输出数据库内容'
- en: This script demonstrates how to report SQL database content using an **HTML
    template**.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本演示了如何使用**HTML模板**报告SQL数据库内容。
- en: 'The example SQL database contains two tables:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 示例SQL数据库包含两个表：
- en: Table “films” contains one row per film with the fields **“title”**, **“director”**
    and (release) **“year”**.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表“films”每部电影都包含一行，其中包含字段**“title”**，**“director”**和（发布）**“year”**。
- en: Table “actors” contains one row per actor and film title (fields (actor) **“name”**
    and (film) **“title”**).
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表“actors”每部电影和演员名称都包含一行（字段（演员）**“name”**和（电影）**“title”**）。
- en: The story DOM consists of a template for one film, which reports film data together
    with a list of casted actors.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 故事DOM由一个电影模板组成，该模板将电影数据与演员列表一起报告。
- en: '**Files:**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/filmfestival-sql.py`'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/filmfestival-sql.py`'
- en: '`docs/samples/filmfestival-sql.db`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/filmfestival-sql.db`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '* * *  ## How to Integrate with Existing PDFs'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何与现有PDF集成'
- en: Because a [DocumentWriter](document-writer-class.html#documentwriter) can only
    write to a new file, stories cannot be placed on existing pages. This script demonstrates
    a circumvention of this restriction.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 因为[DocumentWriter](document-writer-class.html#documentwriter)只能写入新文件，无法将故事放置在现有页面上。此脚本演示了绕过此限制的方法。
- en: The basic idea is letting [DocumentWriter](document-writer-class.html#documentwriter)
    output to a PDF in memory. Once the story has finished, we re-open this memory
    PDF and put its pages to desired locations on **existing** pages via method [`Page.show_pdf_page()`](page.html#Page.show_pdf_page
    "Page.show_pdf_page").
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 基本思路是让[DocumentWriter](document-writer-class.html#documentwriter)输出到内存中的PDF。故事完成后，我们重新打开这个内存PDF，并将其页面放置到期望的位置上现有页面通过方法[`Page.show_pdf_page()`](page.html#Page.show_pdf_page
    "Page.show_pdf_page")。
- en: '**Files:**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/showpdf-page.py`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/showpdf-page.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '* * *  ## How to Make Multi-Columned Layouts and Access Fonts from Package
    [pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何制作多列布局并从[pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)包访问字体'
- en: This script outputs an article (taken from Wikipedia) that contains text and
    multiple images and uses a 2-column page layout.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本输出一篇文章（来自维基百科），包含文本和多个图像，并使用双列页面布局。
- en: In addition, two “Ubuntu” font families from package [pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)
    are used instead of defaulting to Base-14 fonts.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，使用了来自[pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)包中的两个“Ubuntu”字体系列，而不是默认的Base-14字体。
- en: Yet another feature used here is that all data – the images and the article
    HTML – are jointly stored in a ZIP file.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用的另一个特性是所有数据 - 图像和文章HTML - 都联合存储在ZIP文件中。
- en: '**Files:**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/quickfox.py`'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox.py`'
- en: '`docs/samples/quickfox.zip`'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox.zip`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '* * *  ## How to Make a Layout which Wraps Around a Predefined “no go area”
    Layout'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何创建围绕预定义“禁止区域”布局的布局'
- en: This is a demo script using PyMuPDF’s Story class to output text as a PDF with
    a two-column page layout.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个演示脚本，使用PyMuPDF的Story类将文本输出为PDF，采用双列页面布局。
- en: 'The script demonstrates the following features:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本展示了以下功能：
- en: Layout text around images of an existing (“target”) PDF.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 围绕现有（“目标”）PDF的图像布局文本。
- en: Based on a few global parameters, areas on each page are identified, that can
    be used to receive text layouted by a Story.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于几个全局参数，每页的区域被识别出来，可用于接收Story布局的文本。
- en: 'These global parameters are not stored anywhere in the target PDF and must
    therefore be provided in some way:'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些全局参数不会存储在目标PDF中，因此必须以某种方式提供：
- en: The width of the border(s) on each page.
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每页边框的宽度。
- en: The fontsize to use for text. This value determines whether the provided text
    will fit in the empty spaces of the (fixed) pages of target PDF. It cannot be
    predicted in any way. The script ends with an exception if target PDF has not
    enough pages, and prints a warning message if not all pages receive at least some
    text. In both cases, the FONTSIZE value can be changed (a float value).
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于文本的字体大小。此值决定提供的文本是否适合目标PDF的空白处。无法以任何方式预测。如果目标PDF的页面不足，脚本会以异常结束，并在不是所有页面至少接收到一些文本时打印警告消息。在这两种情况下，可以更改字体大小值（浮点值）。
- en: Use of a 2-column page layout for the text.
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于文本的双列页面布局。
- en: The layout creates a temporary (memory) PDF. Its produced page content (the
    text) is used to overlay the corresponding target page. If text requires more
    pages than are available in target PDF, an exception is raised. If not all target
    pages receive at least some text, a warning is printed.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布局创建一个临时（内存）PDF。其生成的页面内容（文本）用于覆盖对应的目标页面。如果文本需要的页数超过目标PDF中可用的页数，则会引发异常。如果不是所有目标页面至少接收到一些文本，则会打印警告。
- en: The script reads “image-no-go.pdf” in its own folder. This is the “target” PDF.
    It contains 2 pages with each 2 images (from the original article), which are
    positioned at places that create a broad overall test coverage. Otherwise the
    pages are empty.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本在自己的文件夹中读取“image-no-go.pdf”。这是“目标”PDF。它包含了每页2个图像（来自原始文章），这些图像的位置创建了广泛的整体测试覆盖。否则页面为空白。
- en: The script produces “quickfox-image-no-go.pdf” which contains the original pages
    and image positions, but with the original article text laid out around them.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此脚本生成了“quickfox-image-no-go.pdf”，其中包含原始页面和图像位置，但周围布局了原始文章文本。
- en: '**Files:**'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/quickfox-image-no-go.py`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox-image-no-go.py`'
- en: '`docs/samples/quickfox-image-no-go.pdf`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox-image-no-go.pdf`'
- en: '`docs/samples/quickfox.zip`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox.zip`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE8]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '* * *  ## How to Output an HTML Table'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何输出HTML表格'
- en: 'Outputting HTML tables is supported as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 支持如下输出HTML表格：
- en: Flat table layouts are supported (“rows x columns”), no support of the “colspan”
    / “rowspan” attributes.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持扁平的表格布局（“行数 x 列数”），不支持“colspan” / “rowspan”属性。
- en: Table header tag *th* supports attribute “scope” with values “row” or “col”.
    Applicable text will be bold by default.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表头标签*th*支持属性“scope”，取值为“row”或“col”。适用文本默认为粗体。
- en: Column widths are computed automatically based on column content. They cannot
    be directly set.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列宽度根据列内容自动计算，不能直接设置。
- en: Table **cells may contain images** which will be considered in the column width
    calculation magic.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格**单元格可能包含图像**，这将考虑在列宽度计算魔法中。
- en: Row heights are computed automatically based on row content - leading to multi-line
    rows where needed.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行高根据行内容自动计算，导致需要时多行显示。
- en: The potentially multiple lines of a table row will always be kept together on
    one page (respectively “where” rectangle) and not be splitted.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表行的潜在多行将始终保持在一页上（即“where”矩形），不会分割。
- en: Table header rows are only **shown on the first page / “where” rectangle.**
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表头行仅显示在第一页 / “where”矩形上。
- en: The “style” attribute is ignored when given directly in HTML table elements.
    Styling for a table and its elements must happen separately, in CSS source or
    within the *style* tag.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接在HTML表元素中给出的“style”属性将被忽略。表格及其元素的样式必须分别在CSS源或*style*标签中定义。
- en: Styling for *tr* elements is not supported and ignored. Therefore, a table-wide
    grid or alternating row background colors are not supported. One of the following
    example scripts however shows an easy way to deal with this limitation.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持也将忽略对*tr*元素的样式设置。因此，不支持表格整体网格或交替行背景颜色。以下示例脚本中的一个展示了如何轻松处理此限制。
- en: '**Files:**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/table01.py` This script reflects basic features.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/table01.py` 该脚本反映了基本功能。'
- en: <details><summary>See recipe</summary></details>
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`docs/samples/national-capitals.py` Advanced script extending table output
    options using simple additional code:'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/national-capitals.py` 使用简单的额外代码扩展表格输出选项的高级脚本：'
- en: Multi-page output simulating **repeating header rows**
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟**重复页眉行**的多页输出
- en: ''
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Alternating table row background colors
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交替的表格行背景颜色
- en: ''
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Table rows and columns delimited by gridlines
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格行和列由网格线分隔
- en: ''
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Table rows dynamically generated / filled with data from an SQL database
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表行动态生成 / 填充来自SQL数据库的数据
- en: <details><summary>See recipe</summary></details>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE10]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '* * *  ## How to Create a Simple Grid Layout'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何创建简单的网格布局'
- en: By creating a sequence of [Story](story-class.html#story) objects within a grid
    created via the [make_table](functions.html#functions-make-table) function a developer
    can create grid layouts as required.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员可以通过在[make_table](functions.html#functions-make-table)函数创建的网格中创建一系列[Story](story-class.html#story)对象，按需创建网格布局。
- en: '**Files:**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/simple-grid.py`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/simple-grid.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE11]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '* * *  ## How to Generate a Table of Contents'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何生成目录'
- en: This script lists the source code of all Python scripts that live in the script’s
    directory.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本列出了存储在脚本目录中的所有Python脚本的源代码。
- en: '**Files:**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/code-printer.py`'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/code-printer.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE12]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'It features the following capabilities:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 其特点包括以下功能：
- en: Automatic generation of a Table of Contents (TOC) on separately numbered pages
    at the start of the document - using a specialized [Story](story-class.html#story).
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档开始处自动生成的目录（TOC），在单独编号的页面上。使用专门的[Story](story-class.html#story)。
- en: 'Use of 3 separate [Story](story-class.html#story) objects per page: header
    story, footer story and the story for printing the Python sources.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每页使用3个单独的[Story](story-class.html#story)对象：页眉故事、页脚故事和用于打印Python源码的故事。
- en: The page **footer is automatically changed** to show the name of the current
    Python file.
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页脚自动更改以显示当前Python文件的名称。
- en: Use of [`Story.element_positions()`](story-class.html#Story.element_positions
    "Story.element_positions") to collect the data for the TOC and for the dynamic
    adjustment of page footers. This is an example of a **bidirectional communication**
    between the story output process and the script.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`Story.element_positions()`](story-class.html#Story.element_positions "Story.element_positions")收集TOC数据以及动态调整页脚。这是故事输出过程与脚本之间**双向通信**的示例。
- en: The main PDF with the Python sources is being written to memory by its [DocumentWriter](document-writer-class.html#documentwriter).
    Another [Story](story-class.html#story) / [DocumentWriter](document-writer-class.html#documentwriter)
    pair is then used to create a (memory) PDF for the TOC pages. Finally, both these
    PDFs are joined and the result stored to disk.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主PDF及其Python源代码由其[DocumentWriter](document-writer-class.html#documentwriter)写入到内存中。然后，另一对[Story](story-class.html#story)
    / [DocumentWriter](document-writer-class.html#documentwriter)用于创建（内存中的）TOC页PDF。最后，这两个PDF被合并，并将结果存储到磁盘上。
- en: '* * *  ## How to Display a List from JSON Data'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 如何显示来自JSON数据的列表'
- en: This example takes some JSON data input which it uses to populate a [Story](story-class.html#story).
    It also contains some visual text formatting and shows how to add links.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 本示例接受一些JSON数据输入，用于填充[Story](story-class.html#story)。它还包含一些视觉文本格式化，并展示了如何添加链接。
- en: '**Files:**'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/json-example.py`'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/json-example.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE13]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '* * *  ## Using the Alternative `Story.write*()` functions'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 使用备用的`Story.write*()`函数'
- en: The `Story.write*()` functions provide a different way to use the [Story](story-class.html#story)
    functionality, removing the need for calling code to implement a loop that calls
    [`Story.place()`](story-class.html#Story.place "Story.place") and [`Story.draw()`](story-class.html#Story.draw
    "Story.draw") etc, at the expense of having to provide at least a `rectfn()` callback.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`Story.write*()`函数提供了一种不同的使用[Story](story-class.html#story)功能的方式，消除了调用代码实现调用[`Story.place()`](story-class.html#Story.place
    "Story.place")和[`Story.draw()`](story-class.html#Story.draw "Story.draw")等的循环的需要，但需要至少提供一个`rectfn()`回调函数。'
- en: '### How to do Basic Layout with [`Story.write()`](story-class.html#Story.write
    "Story.write")'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '### 如何使用[`Story.write()`](story-class.html#Story.write "Story.write")进行基本布局'
- en: This script lays out multiple copies of its own source code, into four rectangles
    per page.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本将其自身源代码的多个副本布局到每页的四个矩形中。
- en: '**Files:**'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write.py`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE14]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '* * *  ### How to do Iterative Layout for a Table of Contents with [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ### 如何使用[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")进行目录的迭代布局'
- en: This script creates html content dynamically, adding a contents section based
    on ElementPosition items that have non-zero `.heading` values.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本动态创建HTML内容，基于具有非零`.heading`值的ElementPosition项目添加内容部分。
- en: The contents section is at the start of the document, so modifications to the
    contents can change page numbers in the rest of the document, which in turn can
    cause page numbers in the contents section to be incorrect.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 目录部分位于文档开头，因此目录的修改可能会改变文档其余部分的页码，进而导致目录部分中的页码不正确。
- en: So the script uses [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized") to repeatedly lay things out until things are stable.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，该脚本使用[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")来重复布局，直到达到稳定状态。
- en: '**Files:**'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write-stabilized.py`'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write-stabilized.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE15]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '* * *  ### How to do Iterative Layout and Create PDF Links with `Story.write_stabilized_links()`'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ### 如何使用`Story.write_stabilized_links()`进行迭代布局并创建PDF链接'
- en: This script is similar to the one described in “How to use [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")” above, except that the generated PDF also contains
    links that correspond to the internal links in the original html.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本与上述“如何使用[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")”中描述的脚本类似，唯一不同之处在于生成的PDF还包含与原始HTML中的内部链接对应的链接。
- en: 'This is done by using `Story.write_stabilized_links()`; this is slightly different
    from [`Story.write_stabilized()`](story-class.html#Story.write_stabilized "Story.write_stabilized"):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过使用`Story.write_stabilized_links()`完成的；这与[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")稍有不同：
- en: It does not take a [DocumentWriter](document-writer-class.html#documentwriter)
    `writer` arg.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要[DocumentWriter](document-writer-class.html#documentwriter) `writer`参数。
- en: It returns a PDF [Document](document.html#document) instance.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它返回一个PDF [Document](document.html#document)实例。
- en: '[The reasons for this are a little involved; for example a [DocumentWriter](document-writer-class.html#documentwriter)
    is not necessarily a PDF writer, so doesn’t really work in a PDF-specific API.]'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '[这样做的原因有点复杂；例如，[DocumentWriter](document-writer-class.html#documentwriter)并不一定是PDF写入器，因此不能真正在PDF特定的API中使用。]'
- en: '**Files:**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write-stabilized-links.py`'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write-stabilized-links.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE16]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '* * *'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Footnotes
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 脚注
- en: Do you have any feedback on this page?
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 对此页面有任何反馈吗？
- en: '* * *'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不附带任何明示或暗示的保证。此软件根据许可证分发，未经许可不得复制、修改或分发。有关详细信息，请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)，或联系位于美国旧金山CA
    94129 Mesa Street 39号108A套房的Artifex Software Inc。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档覆盖所有版本直至1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ## How to Add a Line of Text with Some Formatting'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord标志](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ## 如何添加带有一些格式的文本行'
- en: 'Here is the inevitable “Hello World” example. We will show two variants:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是不可避免的“Hello World”示例。我们将展示两种变体：
- en: Create using existing HTML source [[1]](#f1), that may come from anywhere.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建使用现有的HTML源码[[1]](#f1)，可以来自任何地方。
- en: Create using the Python API.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Python API创建。
- en: '* * *'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'Variant using an existing HTML source [[1]](#f1) – which in this case is defined
    as a constant in the script:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 使用现有HTML源码的变体[[1]](#f1) – 在这种情况下被定义为脚本中的常量：
- en: '[PRE17]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The above effect (sans-serif and blue text) could have been achieved by using
    a separate CSS source like so:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过像这样使用单独的CSS源文件来实现上述效果（无衬线字体和蓝色文本）：
- en: '[PRE18]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '* * *'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: 'The Python API variant – everything is created programmatically:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Python API变体 – 一切都是通过程序创建的：
- en: '[PRE19]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Both variants will produce the same output PDF.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 两种变体将产生相同的输出PDF。
- en: '* * *'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to use Images'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何使用图片'
- en: Images can be referenced in the provided HTML source, or the reference to a
    desired image can also be stored via the Python API. In any case, this requires
    using an [Archive](archive-class.html#archive), which refers to the place where
    the image can be found.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图像可以在提供的HTML源码中引用，或者可以通过Python API存储对所需图像的引用。无论哪种方式，都需要使用一个[Archive](archive-class.html#archive)，这指的是可以找到图像的位置。
- en: Note
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Images with the binary content embedded in the HTML source are **not supported**
    by stories.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在HTML源码中嵌入二进制内容的图像**不受支持**。
- en: 'We extend our “Hello World” example from above and display an image of our
    planet right after the text. Assuming the image has the name “world.jpg” and is
    present in the script’s folder, then this is the modified version of the above
    Python API variant:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从上面扩展我们的“Hello World”示例，并在文本后显示我们星球的图像。假设图像名称为“world.jpg”并位于脚本文件夹中，则以上Python
    API变体的修改版本如下：
- en: '[PRE20]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '* * *'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Read External HTML and CSS for a Story'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何读取故事的外部HTML和CSS'
- en: These cases are fairly straightforward.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这些情况都相当简单。
- en: 'As a general recommendation, HTML and CSS sources should be **read as binary
    files** and decoded before using them in a story. The Python `pathlib.Path` provides
    convenient ways to do this:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一般建议，应将HTML和CSS源文件**作为二进制文件**读取并在使用之前解码。Python的`pathlib.Path`提供了方便的方法来实现这一点：
- en: '[PRE21]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '* * *'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Output Database Content with Story Templates'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何使用故事模板输出数据库内容'
- en: This script demonstrates how to report SQL database content using an **HTML
    template**.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这个脚本演示了如何使用**HTML模板**报告SQL数据库内容。
- en: 'The example SQL database contains two tables:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例 SQL 数据库包含两个表：
- en: Table “films” contains one row per film with the fields **“title”**, **“director”**
    and (release) **“year”**.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表“films”包含每部电影的一行，字段包括**“title”**、**“director”**和（发布）**“year”**。
- en: Table “actors” contains one row per actor and film title (fields (actor) **“name”**
    and (film) **“title”**).
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表“actors”包含每个演员和电影标题的一行（字段（演员）**“name”**和（电影）**“title”**）。
- en: The story DOM consists of a template for one film, which reports film data together
    with a list of casted actors.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 故事 DOM 包括一个电影模板，其中报告了与一组演员的电影数据。
- en: '**Files:**'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/filmfestival-sql.py`'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/filmfestival-sql.py`'
- en: '`docs/samples/filmfestival-sql.db`'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/filmfestival-sql.db`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE22]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '* * *'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Integrate with Existing PDFs'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何与现有的 PDF 整合'
- en: Because a [DocumentWriter](document-writer-class.html#documentwriter) can only
    write to a new file, stories cannot be placed on existing pages. This script demonstrates
    a circumvention of this restriction.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 因为[DocumentWriter](document-writer-class.html#documentwriter)只能写入新文件，所以无法将故事放置在现有页面上。此脚本演示了如何绕过此限制。
- en: The basic idea is letting [DocumentWriter](document-writer-class.html#documentwriter)
    output to a PDF in memory. Once the story has finished, we re-open this memory
    PDF and put its pages to desired locations on **existing** pages via method [`Page.show_pdf_page()`](page.html#Page.show_pdf_page
    "Page.show_pdf_page").
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 基本思路是让[DocumentWriter](document-writer-class.html#documentwriter)将输出到内存中的 PDF。一旦故事完成，我们重新打开此内存
    PDF，并通过方法[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")将其页面放置到现有页面的所需位置。
- en: '**Files:**'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/showpdf-page.py`'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/showpdf-page.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE23]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '* * *'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Make Multi-Columned Layouts and Access Fonts from Package [pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何制作多栏布局并从包[pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)中访问字体'
- en: This script outputs an article (taken from Wikipedia) that contains text and
    multiple images and uses a 2-column page layout.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本输出一篇文章（摘自维基百科），包含文本和多个图像，并使用两栏页面布局。
- en: In addition, two “Ubuntu” font families from package [pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)
    are used instead of defaulting to Base-14 fonts.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，使用包[pymupdf-fonts](https://github.com/pymupdf/pymupdf-fonts)中的两个“Ubuntu”字体系列，而不是默认的
    Base-14 字体。
- en: Yet another feature used here is that all data – the images and the article
    HTML – are jointly stored in a ZIP file.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 此处使用的另一个功能是将所有数据 - 图像和文章 HTML - 共同存储在 ZIP 文件中。
- en: '**Files:**'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/quickfox.py`'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox.py`'
- en: '`docs/samples/quickfox.zip`'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox.zip`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看配方</summary></details>
- en: '[PRE24]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '* * *'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Make a Layout which Wraps Around a Predefined “no go area” Layout'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何制作布局以包围预定义的“不适合区域”布局'
- en: This is a demo script using PyMuPDF’s Story class to output text as a PDF with
    a two-column page layout.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个演示脚本，使用 PyMuPDF 的 Story 类将文本输出为具有两栏页面布局的 PDF。
- en: 'The script demonstrates the following features:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本演示了以下功能：
- en: Layout text around images of an existing (“target”) PDF.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将文本布局在现有（“目标”）PDF 的图像周围。
- en: Based on a few global parameters, areas on each page are identified, that can
    be used to receive text layouted by a Story.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于几个全局参数，识别每个页面上可用于接收由 Story 布局的文本的区域。
- en: 'These global parameters are not stored anywhere in the target PDF and must
    therefore be provided in some way:'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些全局参数未存储在目标 PDF 中，因此必须以某种方式提供：
- en: The width of the border(s) on each page.
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个页面上边框的宽度。
- en: The fontsize to use for text. This value determines whether the provided text
    will fit in the empty spaces of the (fixed) pages of target PDF. It cannot be
    predicted in any way. The script ends with an exception if target PDF has not
    enough pages, and prints a warning message if not all pages receive at least some
    text. In both cases, the FONTSIZE value can be changed (a float value).
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于文本的字体大小。该值决定提供的文本是否适合目标 PDF 的（固定）页面上的空白处。无法以任何方式预测。如果目标 PDF 页面不足，脚本将以异常结束，并且如果不是所有页面至少接收到一些文本，则打印警告消息。在这两种情况下，可以更改
    FONTSIZE 的值（浮点数值）。
- en: Use of a 2-column page layout for the text.
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于文本的两栏页面布局。
- en: The layout creates a temporary (memory) PDF. Its produced page content (the
    text) is used to overlay the corresponding target page. If text requires more
    pages than are available in target PDF, an exception is raised. If not all target
    pages receive at least some text, a warning is printed.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此布局创建一个临时（内存）PDF。其生成的页面内容（文本）用于覆盖相应的目标页面。如果文本需要的页面比目标 PDF 中可用的页面多，将引发异常。如果并非所有目标页面都至少接收到一些文本，则会打印警告。
- en: The script reads “image-no-go.pdf” in its own folder. This is the “target” PDF.
    It contains 2 pages with each 2 images (from the original article), which are
    positioned at places that create a broad overall test coverage. Otherwise the
    pages are empty.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此脚本在其自己的文件夹中读取“image-no-go.pdf”。这是“目标”PDF。它包含 2 页，每页有 2 张图片（来自原始文章），它们被定位在创建广泛的整体测试覆盖范围的地方。否则页面为空白。
- en: The script produces “quickfox-image-no-go.pdf” which contains the original pages
    and image positions, but with the original article text laid out around them.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此脚本生成了“quickfox-image-no-go.pdf”，其中包含原始页面和图像位置，但文本围绕它们布局。
- en: '**Files:**'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/quickfox-image-no-go.py`'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox-image-no-go.py`'
- en: '`docs/samples/quickfox-image-no-go.pdf`'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox-image-no-go.pdf`'
- en: '`docs/samples/quickfox.zip`'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/quickfox.zip`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看步骤</summary></details>
- en: '[PRE25]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '* * *'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Output an HTML Table'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何输出 HTML 表格'
- en: 'Outputting HTML tables is supported as follows:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 输出 HTML 表格的支持如下：
- en: Flat table layouts are supported (“rows x columns”), no support of the “colspan”
    / “rowspan” attributes.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持平面表格布局（“行 x 列”），不支持“colspan”/“rowspan”属性。
- en: Table header tag *th* supports attribute “scope” with values “row” or “col”.
    Applicable text will be bold by default.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表头标签 *th* 支持带有值“row”或“col”的“scope”属性。适用的文本将默认为粗体。
- en: Column widths are computed automatically based on column content. They cannot
    be directly set.
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列宽度根据列内容自动计算。它们不能直接设置。
- en: Table **cells may contain images** which will be considered in the column width
    calculation magic.
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格**单元格可能包含图片**，这将被考虑在列宽度计算魔法中。
- en: Row heights are computed automatically based on row content - leading to multi-line
    rows where needed.
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 行高根据行内容自动计算 - 导致需要时出现多行行。
- en: The potentially multiple lines of a table row will always be kept together on
    one page (respectively “where” rectangle) and not be splitted.
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格行的潜在多行将始终保持在一页（相应的“位置”矩形）上，并且不会被分割。
- en: Table header rows are only **shown on the first page / “where” rectangle.**
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表头行仅在第一页/“位置”矩形上**显示**。
- en: The “style” attribute is ignored when given directly in HTML table elements.
    Styling for a table and its elements must happen separately, in CSS source or
    within the *style* tag.
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当直接在 HTML 表格元素中给出时，“style”属性将被忽略。表格及其元素的样式必须分别在 CSS 源或*style*标签中进行。
- en: Styling for *tr* elements is not supported and ignored. Therefore, a table-wide
    grid or alternating row background colors are not supported. One of the following
    example scripts however shows an easy way to deal with this limitation.
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持和忽略*tr*元素的样式。因此，不支持整个表格范围的网格或交替行背景颜色。然而，以下示例脚本之一展示了处理此限制的简单方法。
- en: '**Files:**'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/table01.py` This script reflects basic features.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/table01.py` 这个脚本反映了基本特性。'
- en: <details><summary>See recipe</summary></details>
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看步骤</summary></details>
- en: '[PRE26]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '`docs/samples/national-capitals.py` Advanced script extending table output
    options using simple additional code:'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/national-capitals.py` 通过简单的附加代码扩展了表格输出选项的高级脚本：'
- en: Multi-page output simulating **repeating header rows**
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟**重复标题行**的多页输出
- en: ''
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Alternating table row background colors
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 交替的表格行背景颜色
- en: ''
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-257
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Table rows and columns delimited by gridlines
  id: totrans-258
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格行和列由网格线分隔
- en: ''
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Table rows dynamically generated / filled with data from an SQL database
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表格行动态生成/填充来自 SQL 数据库的数据
- en: <details><summary>See recipe</summary></details>
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看步骤</summary></details>
- en: '[PRE27]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '* * *'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Create a Simple Grid Layout'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何创建简单的网格布局'
- en: By creating a sequence of [Story](story-class.html#story) objects within a grid
    created via the [make_table](functions.html#functions-make-table) function a developer
    can create grid layouts as required.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在通过 [make_table](functions.html#functions-make-table) 函数创建的网格内创建 [Story](story-class.html#story)
    对象的序列，开发人员可以根据需要创建网格布局。
- en: '**Files:**'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/simple-grid.py`'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/simple-grid.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看步骤</summary></details>
- en: '[PRE28]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '* * *'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Generate a Table of Contents'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何生成目录'
- en: This script lists the source code of all Python scripts that live in the script’s
    directory.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本列出了驻留在脚本目录中的所有 Python 脚本的源代码。
- en: '**Files:**'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/code-printer.py`'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/code-printer.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE29]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'It features the following capabilities:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 它具有以下功能：
- en: Automatic generation of a Table of Contents (TOC) on separately numbered pages
    at the start of the document - using a specialized [Story](story-class.html#story).
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在文档开头的单独编号页上自动生成目录（TOC），使用专门的[故事](story-class.html#story)。
- en: 'Use of 3 separate [Story](story-class.html#story) objects per page: header
    story, footer story and the story for printing the Python sources.'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每页使用 3 个单独的[故事](story-class.html#story)对象：页眉故事、页脚故事和打印 Python 源代码的故事。
- en: The page **footer is automatically changed** to show the name of the current
    Python file.
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页脚自动更改以显示当前 Python 文件的名称。
- en: Use of [`Story.element_positions()`](story-class.html#Story.element_positions
    "Story.element_positions") to collect the data for the TOC and for the dynamic
    adjustment of page footers. This is an example of a **bidirectional communication**
    between the story output process and the script.
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`Story.element_positions()`](story-class.html#Story.element_positions "Story.element_positions")来收集
    TOC 的数据，并用于页面页脚的动态调整。这是故事输出过程和脚本之间**双向通信**的一个示例。
- en: The main PDF with the Python sources is being written to memory by its [DocumentWriter](document-writer-class.html#documentwriter).
    Another [Story](story-class.html#story) / [DocumentWriter](document-writer-class.html#documentwriter)
    pair is then used to create a (memory) PDF for the TOC pages. Finally, both these
    PDFs are joined and the result stored to disk.
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主 PDF 使用其[文档编写器](document-writer-class.html#documentwriter)将 Python 源代码写入内存。然后使用另一对[故事](story-class.html#story)
    / [文档编写器](document-writer-class.html#documentwriter)创建 TOC 页面的（内存）PDF。最后，将这两个
    PDF 合并并将结果存储到磁盘。
- en: '* * *'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## How to Display a List from JSON Data'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '## 如何显示来自 JSON 数据的列表'
- en: This example takes some JSON data input which it uses to populate a [Story](story-class.html#story).
    It also contains some visual text formatting and shows how to add links.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例使用一些 JSON 数据输入来填充[故事](story-class.html#story)，还包含一些视觉文本格式化，并显示如何添加链接。
- en: '**Files:**'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/json-example.py`'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/json-example.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE30]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '* * *'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Using the Alternative `Story.write*()` functions'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '## 使用备用的`Story.write*()`函数'
- en: The `Story.write*()` functions provide a different way to use the [Story](story-class.html#story)
    functionality, removing the need for calling code to implement a loop that calls
    [`Story.place()`](story-class.html#Story.place "Story.place") and [`Story.draw()`](story-class.html#Story.draw
    "Story.draw") etc, at the expense of having to provide at least a `rectfn()` callback.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`Story.write*()` 函数提供了使用[故事](story-class.html#story)功能的另一种方法，无需调用代码来实现调用[`Story.place()`](story-class.html#Story.place
    "Story.place")和[`Story.draw()`](story-class.html#Story.draw "Story.draw")等的循环，代价是必须提供至少一个`rectfn()`回调。'
- en: '### How to do Basic Layout with [`Story.write()`](story-class.html#Story.write
    "Story.write")'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '### 如何使用[`Story.write()`](story-class.html#Story.write "Story.write")进行基本布局'
- en: This script lays out multiple copies of its own source code, into four rectangles
    per page.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将其自身源代码布局到每页的四个矩形中。
- en: '**Files:**'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write.py`'
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE31]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '* * *  ### How to do Iterative Layout for a Table of Contents with [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ### 如何使用[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")进行迭代布局表格目录'
- en: This script creates html content dynamically, adding a contents section based
    on ElementPosition items that have non-zero `.heading` values.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本动态创建 HTML 内容，基于具有非零`.heading`值的 ElementPosition 项目添加内容部分。
- en: The contents section is at the start of the document, so modifications to the
    contents can change page numbers in the rest of the document, which in turn can
    cause page numbers in the contents section to be incorrect.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 文档开头是内容部分，因此对内容的修改可能会更改文档其余部分的页码，从而可能导致内容部分的页码不正确。
- en: So the script uses [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized") to repeatedly lay things out until things are stable.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，脚本使用[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")重复布局，直到稳定。
- en: '**Files:**'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write-stabilized.py`'
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write-stabilized.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE32]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '* * *  ### How to do Iterative Layout and Create PDF Links with `Story.write_stabilized_links()`'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ### 如何使用迭代布局并使用 `Story.write_stabilized_links()` 创建 PDF 链接'
- en: This script is similar to the one described in “How to use [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")” above, except that the generated PDF also contains
    links that correspond to the internal links in the original html.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本与上述“如何使用 [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")”中描述的脚本类似，但生成的 PDF 还包含与原始 HTML 中的内部链接相对应的链接。
- en: 'This is done by using `Story.write_stabilized_links()`; this is slightly different
    from [`Story.write_stabilized()`](story-class.html#Story.write_stabilized "Story.write_stabilized"):'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 `Story.write_stabilized_links()` 完成；这与 [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized") 稍有不同：
- en: It does not take a [DocumentWriter](document-writer-class.html#documentwriter)
    `writer` arg.
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不接受 [DocumentWriter](document-writer-class.html#documentwriter) `writer` 参数。
- en: It returns a PDF [Document](document.html#document) instance.
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它返回一个 PDF [Document](document.html#document) 实例。
- en: '[The reasons for this are a little involved; for example a [DocumentWriter](document-writer-class.html#documentwriter)
    is not necessarily a PDF writer, so doesn’t really work in a PDF-specific API.]'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '[这样做的原因有些复杂；例如 [DocumentWriter](document-writer-class.html#documentwriter)
    并不一定是 PDF 编写器，因此不适用于特定于 PDF 的 API。]'
- en: '**Files:**'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write-stabilized-links.py`'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write-stabilized-links.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE33]'
  id: totrans-317
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '* * *'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Footnotes
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 脚注
- en: Do you have any feedback on this page?
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 您对此页面有任何反馈吗？
- en: '* * *'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不附带任何明示或暗示的保证。此软件根据许可分发，未经授权不得复制、修改或分发。请参阅 [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    获取许可信息或联系位于美国加利福尼亚州旧金山市 Mesa Street, Suite 108A 的 Artifex Software Inc. 了解更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖所有版本，直到 1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ### How to do Basic Layout with [`Story.write()`](story-class.html#Story.write
    "Story.write")'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ### 如何使用 [`Story.write()`](story-class.html#Story.write "Story.write") 进行基本布局'
- en: This script lays out multiple copies of its own source code, into four rectangles
    per page.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本将其自身的源代码多次布局到每页四个矩形中。
- en: '**Files:**'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write.py`'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE34]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '* * *'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '### How to do Iterative Layout for a Table of Contents with [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '### 如何为目录创建迭代布局，并使用 [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")'
- en: This script creates html content dynamically, adding a contents section based
    on ElementPosition items that have non-zero `.heading` values.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本动态创建 HTML 内容，基于具有非零 `.heading` 值的 ElementPosition 项添加内容部分。
- en: The contents section is at the start of the document, so modifications to the
    contents can change page numbers in the rest of the document, which in turn can
    cause page numbers in the contents section to be incorrect.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 内容部分位于文档开头，因此对内容的修改可能会改变文档其余部分的页码，进而导致内容部分的页码不正确。
- en: So the script uses [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized") to repeatedly lay things out until things are stable.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，脚本使用 [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized") 来重复布局，直到稳定为止。
- en: '**Files:**'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write-stabilized.py`'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write-stabilized.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE35]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '* * *'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '### How to do Iterative Layout and Create PDF Links with `Story.write_stabilized_links()`'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '### 如何使用迭代布局并使用 `Story.write_stabilized_links()` 创建 PDF 链接'
- en: This script is similar to the one described in “How to use [`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")” above, except that the generated PDF also contains
    links that correspond to the internal links in the original html.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本类似于“如何使用[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")”中描述的脚本，但生成的PDF还包含与原始HTML中的内部链接相对应的链接。
- en: 'This is done by using `Story.write_stabilized_links()`; this is slightly different
    from [`Story.write_stabilized()`](story-class.html#Story.write_stabilized "Story.write_stabilized"):'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过使用`Story.write_stabilized_links()`完成的；这与[`Story.write_stabilized()`](story-class.html#Story.write_stabilized
    "Story.write_stabilized")略有不同：
- en: It does not take a [DocumentWriter](document-writer-class.html#documentwriter)
    `writer` arg.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不需要[DocumentWriter](document-writer-class.html#documentwriter) `writer` 参数。
- en: It returns a PDF [Document](document.html#document) instance.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它返回一个PDF [Document](document.html#document) 实例。
- en: '[The reasons for this are a little involved; for example a [DocumentWriter](document-writer-class.html#documentwriter)
    is not necessarily a PDF writer, so doesn’t really work in a PDF-specific API.]'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '[其中原因有些复杂；例如[DocumentWriter](document-writer-class.html#documentwriter) 不一定是PDF编写器，因此在PDF特定的API中并不适用。]'
- en: '**Files:**'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '**文件：**'
- en: '`docs/samples/story-write-stabilized-links.py`'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs/samples/story-write-stabilized-links.py`'
- en: <details><summary>See recipe</summary></details>
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: <details><summary>查看示例</summary></details>
- en: '[PRE36]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '* * *'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Footnotes
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 脚注
- en: Do you have any feedback on this page?
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 对本页面有任何反馈吗？
- en: '* * *'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 该软件按原样提供，不提供任何明示或暗示的担保。该软件在许可下分发，未经许可明确授权，不得复制、修改或分发。有关详细信息，请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)，或联系美国旧金山CA
    94129 Mesa街39号108A套房的Artifex Software Inc.。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖所有版本直到1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
