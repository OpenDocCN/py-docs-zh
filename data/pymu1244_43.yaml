- en: Shape
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 形状
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/shape.html](https://pymupdf.readthedocs.io/en/latest/shape.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/shape.html](https://pymupdf.readthedocs.io/en/latest/shape.html)
- en: '**This class is for PDF only.**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**此类仅适用于PDF。**'
- en: This class allows creating interconnected graphical elements on a PDF page.
    Its methods have the same meaning and name as the corresponding [Page](page.html#page)
    methods.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此类允许在PDF页面上创建互连的图形元素。其方法的含义和名称与对应的[Page](page.html#page)方法相同。
- en: In fact, each [Page](page.html#page) draw method is just a convenience wrapper
    for (1) one shape draw method, (2) the [`Shape.finish()`](#Shape.finish "Shape.finish")
    method, and (3) the [`Shape.commit()`](#Shape.commit "Shape.commit") method. For
    page text insertion, only the [`Shape.commit()`](#Shape.commit "Shape.commit")
    method is invoked. If many draw and text operations are executed for a page, you
    should always consider using a Shape object.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，每个[Page](page.html#page)绘制方法只是一个便利的包装器，包括（1）一个形状绘制方法，（2）[`Shape.finish()`](#Shape.finish
    "Shape.finish")方法，和（3）[`Shape.commit()`](#Shape.commit "Shape.commit")方法。对于页面文本插入，只调用了[`Shape.commit()`](#Shape.commit
    "Shape.commit")方法。如果为页面执行了许多绘制和文本操作，则应始终考虑使用Shape对象。
- en: Several draw methods can be executed in a row and each one of them will contribute
    to one drawing. Once the drawing is complete, the [`Shape.finish()`](#Shape.finish
    "Shape.finish") method must be invoked to apply color, dashing, width, morphing
    and other attributes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 可以连续执行几种绘制方法，每一种方法都将为一个绘制做出贡献。完成绘制后，必须调用[`Shape.finish()`](#Shape.finish "Shape.finish")方法来应用颜色、虚线、宽度、变形和其他属性。
- en: '**Draw** methods of this class (and [`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")) are logging the area they are covering in a rectangle
    ([`Shape.rect`](#Shape.rect "Shape.rect")). This property can for instance be
    used to set [`Page.cropbox_position`](page.html#Page.cropbox_position "Page.cropbox_position").'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**此类的绘制方法（以及[`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")）记录它们覆盖的区域在一个矩形内（[`Shape.rect`](#Shape.rect
    "Shape.rect")）。例如，此属性可用于设置[`Page.cropbox_position`](page.html#Page.cropbox_position
    "Page.cropbox_position")。**'
- en: '**Text insertions** [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")
    and [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox") implicitly
    execute a “finish” and therefore only require [`Shape.commit()`](#Shape.commit
    "Shape.commit") to become effective. As a consequence, both include parameters
    for controlling properties like colors, etc.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体（**Text insertions**）[`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")和[`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")隐式执行“完成”，因此只需要[`Shape.commit()`](#Shape.commit "Shape.commit")生效。因此，两者都包括控制属性如颜色等的参数。
- en: '| **Method / Attribute** | **Description** |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| **方法/属性** | **描述** |'
- en: '| --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [`Shape.commit()`](#Shape.commit "Shape.commit") | update the page’s contents
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.commit()`](#Shape.commit "Shape.commit") | 更新页面内容 |'
- en: '| [`Shape.draw_bezier()`](#Shape.draw_bezier "Shape.draw_bezier") | draw a
    cubic Bezier curve |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_bezier()`](#Shape.draw_bezier "Shape.draw_bezier") | 绘制三次贝塞尔曲线
    |'
- en: '| [`Shape.draw_circle()`](#Shape.draw_circle "Shape.draw_circle") | draw a
    circle around a point |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_circle()`](#Shape.draw_circle "Shape.draw_circle") | 绘制围绕点的圆
    |'
- en: '| [`Shape.draw_curve()`](#Shape.draw_curve "Shape.draw_curve") | draw a cubic
    Bezier using one helper point |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_curve()`](#Shape.draw_curve "Shape.draw_curve") | 绘制使用一个辅助点的三次贝塞尔曲线
    |'
- en: '| [`Shape.draw_line()`](#Shape.draw_line "Shape.draw_line") | draw a line |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_line()`](#Shape.draw_line "Shape.draw_line") | 绘制直线 |'
- en: '| [`Shape.draw_oval()`](#Shape.draw_oval "Shape.draw_oval") | draw an ellipse
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_oval()`](#Shape.draw_oval "Shape.draw_oval") | 绘制椭圆 |'
- en: '| [`Shape.draw_polyline()`](#Shape.draw_polyline "Shape.draw_polyline") | connect
    a sequence of points |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_polyline()`](#Shape.draw_polyline "Shape.draw_polyline") | 连接一系列点
    |'
- en: '| [`Shape.draw_quad()`](#Shape.draw_quad "Shape.draw_quad") | draw a quadrilateral
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_quad()`](#Shape.draw_quad "Shape.draw_quad") | 绘制四边形 |'
- en: '| [`Shape.draw_rect()`](#Shape.draw_rect "Shape.draw_rect") | draw a rectangle
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_rect()`](#Shape.draw_rect "Shape.draw_rect") | 绘制矩形 |'
- en: '| [`Shape.draw_sector()`](#Shape.draw_sector "Shape.draw_sector") | draw a
    circular sector or piece of pie |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_sector()`](#Shape.draw_sector "Shape.draw_sector") | 绘制圆形扇区或饼图
    |'
- en: '| [`Shape.draw_squiggle()`](#Shape.draw_squiggle "Shape.draw_squiggle") | draw
    a squiggly line |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_squiggle()`](#Shape.draw_squiggle "Shape.draw_squiggle") | 绘制波浪线
    |'
- en: '| [`Shape.draw_zigzag()`](#Shape.draw_zigzag "Shape.draw_zigzag") | draw a
    zigzag line |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_zigzag()`](#Shape.draw_zigzag "Shape.draw_zigzag") | 绘制之字形线条
    |'
- en: '| [`Shape.finish()`](#Shape.finish "Shape.finish") | finish a set of draw commands
    |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.finish()`](#Shape.finish "Shape.finish") | 完成一组绘图命令 |'
- en: '| [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text") | insert
    text lines |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text") | 插入文本行 |'
- en: '| [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")
    | fit text into a rectangle |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")
    | 将文本适配到矩形中 |'
- en: '| [`Shape.doc`](#Shape.doc "Shape.doc") | stores the page’s document |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.doc`](#Shape.doc "Shape.doc") | 存储页面文档 |'
- en: '| [`Shape.draw_cont`](#Shape.draw_cont "Shape.draw_cont") | draw commands since
    last [`Shape.finish()`](#Shape.finish "Shape.finish") |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.draw_cont`](#Shape.draw_cont "Shape.draw_cont") | 上次[`Shape.finish()`](#Shape.finish
    "Shape.finish")之后的绘图命令 |'
- en: '| [`Shape.height`](#Shape.height "Shape.height") | stores the page’s height
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.height`](#Shape.height "Shape.height") | 存储页面高度 |'
- en: '| [`Shape.lastPoint`](#Shape.lastPoint "Shape.lastPoint") | stores the current
    point |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.lastPoint`](#Shape.lastPoint "Shape.lastPoint") | 存储当前点 |'
- en: '| [`Shape.page`](#Shape.page "Shape.page") | stores the owning page |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.page`](#Shape.page "Shape.page") | 存储所属页面 |'
- en: '| [`Shape.rect`](#Shape.rect "Shape.rect") | rectangle surrounding drawings
    |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.rect`](#Shape.rect "Shape.rect") | 包围图形的矩形 |'
- en: '| [`Shape.text_cont`](#Shape.text_cont "Shape.text_cont") | accumulated text
    insertions |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.text_cont`](#Shape.text_cont "Shape.text_cont") | 累积文本插入 |'
- en: '| [`Shape.totalcont`](#Shape.totalcont "Shape.totalcont") | accumulated string
    to be stored in [`contents`](glossary.html#contents "contents") |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.totalcont`](#Shape.totalcont "Shape.totalcont") | 累积字符串，存储在[`contents`](glossary.html#contents
    "contents")中 |'
- en: '| [`Shape.width`](#Shape.width "Shape.width") | stores the page’s width |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`Shape.width`](#Shape.width "Shape.width") | 存储页面宽度 |'
- en: '**Class API**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**类 API**'
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Create a new drawing. During importing PyMuPDF, the *pymupdf.Page* object is
    being given the convenience method *new_shape()* to construct a *Shape* object.
    During instantiation, a check will be made whether we do have a PDF page. An exception
    is otherwise raised.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的图形。在导入PyMuPDF时，*pymupdf.Page*对象被赋予构造*Shape*对象的便利方法*new_shape()*。在实例化期间，将检查我们是否有PDF页面。否则会引发异常。
- en: 'Parameters:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**page** ([Page](page.html#page)) – an existing page of a PDF document.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**page** ([页面](page.html#page)) – PDF文档的现有页面。'
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Draw a line from [`point_like`](glossary.html#point_like "point_like") objects
    *p1* to *p2*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 从[`point_like`](glossary.html#point_like "point_like")对象*p1*到*p2*绘制线条。
- en: 'Parameters:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p1** (*point_like*) – starting point'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p1** (*类似点*) – 起始点'
- en: '**p2** (*point_like*) – end point'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p2** (*类似点*) – 终点'
- en: 'Return type:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the end point, *p2*.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 终点，*p2*。
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Draw a squiggly (wavy, undulated) line from [`point_like`](glossary.html#point_like
    "point_like") objects *p1* to *p2*. An integer number of full wave periods will
    always be drawn, one period having a length of *4 * breadth*. The breadth parameter
    will be adjusted as necessary to meet this condition. The drawn line will always
    turn “left” when leaving *p1* and always join *p2* from the “right”.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从[`point_like`](glossary.html#point_like "point_like")对象*p1*到*p2*绘制波浪线。始终会绘制整数个完整波浪周期，其中一个周期的长度为*4
    * breadth*。根据需要调整*breath*参数以满足此条件。绘制的线条在离开*p1*时总是向“左”转向，并且总是从“右”连接到*p2*。
- en: 'Parameters:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p1** (*point_like*) – starting point'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p1** (*类似点*) – 起始点'
- en: '**p2** (*point_like*) – end point'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p2** (*类似点*) – 终点'
- en: '**breadth** (*float*) – the amplitude of each wave. The condition *2 * breadth
    < abs(p2 - p1)* must be true to fit in at least one wave. See the following picture,
    which shows two points connected by one full period.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**breadth** (*浮点数*) – 每个波浪的振幅。条件*2 * breadth < abs(p2 - p1)*必须为真，以适配至少一个波浪。参见以下图片，显示由一个完整周期连接的两个点。'
- en: 'Return type:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the end point, *p2*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 终点，*p2*。
- en: '![_images/img-breadth.png](../Images/3ca7aa062fd3606be73e00d46f255e1f.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-breadth.png](../Images/3ca7aa062fd3606be73e00d46f255e1f.png)'
- en: Here is an example of three connected lines, forming a closed, filled triangle.
    Little arrows indicate the stroking direction.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个三条相连的线的示例，形成一个封闭的、填充的三角形。小箭头表示描边方向。
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![_images/img-squiggly.png](../Images/8352abec0c49f2c3fc3bb81964dbb29e.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-squiggly.png](../Images/8352abec0c49f2c3fc3bb81964dbb29e.png)'
- en: Note
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Waves drawn are **not** trigonometric (sine / cosine). If you need that, have
    a look at [draw.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/draw-sines/draw.py).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制的波浪线**不是**三角函数（正弦/余弦）。如果需要，请查看[draw.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/draw-sines/draw.py)。
- en: '[PRE5]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Draw a zigzag line from [`point_like`](glossary.html#point_like "point_like")
    objects *p1* to *p2*. Otherwise works exactly like [`Shape.draw_squiggle()`](#Shape.draw_squiggle
    "Shape.draw_squiggle").
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 从[`point_like`](glossary.html#point_like "point_like")对象*p1*到*p2*绘制一条锯齿线。否则，与[`Shape.draw_squiggle()`](#Shape.draw_squiggle
    "Shape.draw_squiggle")完全相同。
- en: 'Parameters:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p1** (*point_like*) – starting point'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p1**（*point_like*） – 起点'
- en: '**p2** (*point_like*) – end point'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p2**（*point_like*） – 终点'
- en: '**breadth** (*float*) – the amplitude of the movement. The condition *2 * breadth
    < abs(p2 - p1)* must be true to fit in at least one period.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**breadth**（*float*） – 运动的幅度。条件*2 * breadth < abs(p2 - p1)*必须为真，以至少适合一个周期。'
- en: 'Return type:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the end point, *p2*.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 终点，*p2*。
- en: '[PRE6]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Draw several connected lines between points contained in the sequence *points*.
    This can be used for creating arbitrary polygons by setting the last item equal
    to the first one.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在序列*points*中的点之间绘制多个连接线。通过将最后一个项目设置为第一个项目，可以用于创建任意多边形。
- en: 'Parameters:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**points** (*sequence*) – a sequence of [`point_like`](glossary.html#point_like
    "point_like") objects. Its length must at least be 2 (in which case it is equivalent
    to *draw_line()*).'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**points**（*sequence*） – 一系列[`point_like`](glossary.html#point_like "point_like")对象。其长度必须至少为2（在这种情况下等效于*draw_line()*）。'
- en: 'Return type:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '*points[-1]* – the last point in the argument sequence.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*points[-1]* – 参数序列中的最后一个点。'
- en: '[PRE7]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Draw a standard cubic Bézier curve from *p1* to *p4*, using *p2* and *p3* as
    control points.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从*p1*到*p4*绘制标准的立方贝塞尔曲线，使用*p2*和*p3*作为控制点。
- en: All arguments are [`point_like`](glossary.html#point_like "point_like") s.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 所有参数都是[`point_like`](glossary.html#point_like "point_like") s。
- en: 'Return type:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the end point, *p4*.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 终点，*p4*。
- en: Note
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The points do not need to be different – experiment a bit with some of them
    being equal!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 点不需要不同 – 尝试一些相等的情况！
- en: 'Example:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '![_images/img-drawBezier.png](../Images/34d4b6a9e74f8c3ede711e1f2d9ed51e.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-drawBezier.png](../Images/34d4b6a9e74f8c3ede711e1f2d9ed51e.png)'
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Draw an “ellipse” inside the given tetragon (quadrilateral). If it is a square,
    a regular circle is drawn, a general rectangle will result in an ellipse. If a
    quadrilateral is used instead, a plethora of shapes can be the result.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在给定的四边形（四边形）内绘制一个“椭圆”。如果是正方形，则绘制正规圆，一般矩形将导致椭圆。如果使用四边形，则可以得到大量的形状。
- en: The drawing starts and ends at the middle point of the line `bottom-left ->
    top-left` corners in an anti-clockwise movement.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图从底部左 -> 左上角线的中点开始并结束，以逆时针方向进行。
- en: 'Parameters:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**tetra** (*rect_like**,**quad_like*) –'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**tetra**（*rect_like**,**quad_like*） –'
- en: '[`rect_like`](glossary.html#rect_like "rect_like") or [`quad_like`](glossary.html#quad_like
    "quad_like").'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '[`rect_like`](glossary.html#rect_like "rect_like")或[`quad_like`](glossary.html#quad_like
    "quad_like")。'
- en: '*Changed in version 1.14.5:* Quads are now also supported.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*版本1.14.5中的更改：* 现在还支持四边形。'
- en: 'Return type:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the middle point of line `rect.bl -> rect.tl`, or resp. `quad.ll -> quad.ul`.
    Look at just a few examples here, or at the *quad-show?.py* scripts in the PyMuPDF-Utilities
    repository.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 线段`rect.bl -> rect.tl`或`quad.ll -> quad.ul`的中间点。这里仅仅看几个例子，或者在PyMuPDF-Utilities仓库的*quad-show?.py*脚本中查看。
- en: '[![_images/img-drawquad.jpg](../Images/9c121a77ecffa66c86ef3fb3a2083826.png)](_images/img-drawquad.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[![_images/img-drawquad.jpg](../Images/9c121a77ecffa66c86ef3fb3a2083826.png)](_images/img-drawquad.jpg)'
- en: '[PRE9]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Draw a circle given its center and radius. The drawing starts and ends at point
    `center - (radius, 0)` in an **anti-clockwise** movement. This point is the middle
    of the enclosing square’s left side.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 给定其中心和半径，绘制一个圆。绘图从点`center - (radius, 0)`开始并结束，以**逆时针**方向进行。此点是包围正方形左侧边中点。
- en: This is a shortcut for `draw_sector(center, start, 360, fullSector=False)`.
    To draw the same circle in a **clockwise** movement, use `-360` as degrees.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个快捷方式，用于`draw_sector(center, start, 360, fullSector=False)`。要以**顺时针**方向绘制相同的圆，请使用`-360`作为角度。
- en: 'Parameters:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**center** (*point_like*) – the center of the circle.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**center**（*point_like*） – 圆的中心。'
- en: '**radius** (*float*) – the radius of the circle. Must be positive.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**radius**（*float*） – 圆的半径。必须为正。'
- en: 'Return type:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '`Point(center.x - radius, center.y)`.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`Point(center.x - radius, center.y)`。'
- en: '[![_images/img-drawcircle.jpg](../Images/6b4229dd6288b4e2e3cf33d6ad89736c.png)](_images/img-drawcircle.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[![_images/img-drawcircle.jpg](../Images/6b4229dd6288b4e2e3cf33d6ad89736c.png)](_images/img-drawcircle.jpg)'
- en: '[PRE10]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'A special case of *draw_bezier()*: Draw a cubic Bezier curve from *p1* to *p3*.
    On each of the two lines `p1 -> p2` and `p3 -> p2` one control point is generated.
    Both control points will therefore be on the same side of the line `p1 -> p3`.
    This guaranties that the curve’s curvature does not change its sign. If the lines
    to p2 intersect with an angle of 90 degrees, then the resulting curve is a quarter
    ellipse (resp. quarter circle, if of same length).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*draw_bezier()* 的特例：从 *p1* 到 *p3* 绘制三次贝塞尔曲线。在线段 `p1 -> p2` 和 `p3 -> p2` 上生成一个控制点。因此，两个控制点都位于线段
    `p1 -> p3` 的同一侧。这保证了曲线的曲率不会改变其符号。如果到达 *p2* 的线段成90度角，则生成的曲线是一个四分之一椭圆（或同样长度的四分之一圆）。'
- en: All arguments are [`point_like`](glossary.html#point_like "point_like").
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 所有参数都是[`point_like`](glossary.html#point_like "point_like")。
- en: 'Return type:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the end point, *p3*. The following is a filled quarter ellipse segment. The
    yellow area is oriented **clockwise:**
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 端点 *p3*。以下是一个填充的四分之一椭圆段。黄色区域的方向为**顺时针**：
- en: '![_images/img-drawCurve.png](../Images/a071f2d2a7e17029b602243ebb20123a.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-drawCurve.png](../Images/a071f2d2a7e17029b602243ebb20123a.png)'
- en: '[PRE11]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Draw a circular sector, optionally connecting the arc to the circle’s center
    (like a piece of pie).
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制一个圆形扇区，可选地将弧连接到圆的中心（就像一个饼图片段）。
- en: 'Parameters:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**center** (*point_like*) – the center of the circle.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**center**（*point_like*） – 圆的中心。'
- en: '**point** (*point_like*) – one of the two end points of the pie’s arc segment.
    The other one is calculated from the *angle*.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**point**（*point_like*） – 饼图弧段的两个端点之一。另一个端点由 *angle* 计算得出。'
- en: '**angle** (*float*) – the angle of the sector in degrees. Used to calculate
    the other end point of the arc. Depending on its sign, the arc is drawn anti-clockwise
    (positive) or clockwise.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**angle**（*float*） – 扇形的角度（以度为单位）。用于计算弧的另一个端点。根据其符号，弧可能逆时针绘制（正）或顺时针绘制。'
- en: '**fullSector** (*bool*) – whether to draw connecting lines from the ends of
    the arc to the circle center. If a fill color is specified, the full “pie” is
    colored, otherwise just the sector.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fullSector**（*bool*） – 是否从弧的两端绘制连接线到圆心。如果指定了填充颜色，则整个“饼图”会被着色，否则只有扇区被着色。'
- en: 'Return type:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'the other end point of the arc. Can be used as starting point for a following
    invocation to create logically connected pies charts. Examples:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 弧的另一个端点。可以用作创建逻辑连接的饼图的后续调用的起点。示例：
- en: '![_images/img-drawSector1.png](../Images/8f628530738e4f3d1d132e043a13e7d5.png)![_images/img-drawSector2.png](../Images/a4812aecdd90b866ef75a609476cad6e.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-drawSector1.png](../Images/8f628530738e4f3d1d132e043a13e7d5.png)![_images/img-drawSector2.png](../Images/a4812aecdd90b866ef75a609476cad6e.png)'
- en: '[PRE12]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Changed in v1.22.0: Added parameter *radius*.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自 v1.22.0 更改：添加参数 *radius*。
- en: Draw a rectangle. The drawing starts and ends at the top-left corner in an anti-clockwise
    movement.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制一个矩形。绘制从左上角开始并以逆时针方向结束的图形。
- en: 'Parameters:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**rect** (*rect_like*) – where to put the rectangle on the page.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rect**（*rect_like*） – 矩形在页面上的位置。'
- en: '**radius** (*multiple*) – draw rounded rectangle corners. If not `None`, specifies
    the radius of the curvature as a percentage of a rectangle side length. This must
    one or (a tuple of) two floats `0 < radius <= 0.5`, where 0.5 corresponds to 50%
    of the respective side. If a float, the radius of the curvature is computed as
    `radius * min(width, height)`, drawing the corner’s perimeter as a quarter circle.
    If a tuple `(rx, ry)` is given, then the curvature is asymmetric with respect
    to the horizontal and vertical directions. A value of `radius=(0.5, 0.5)` draws
    an ellipse.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**radius**（*multiple*） – 绘制圆角矩形的圆角。如果不是 `None`，则指定圆角的曲率半径，作为矩形边长的百分比。必须是一个或两个浮点数
    `0 < radius <= 0.5`，其中 0.5 对应于相应边长的50%。如果是一个浮点数，则曲率的半径计算为 `radius * min(width,
    height)`，绘制角的周长作为四分之一圆。如果给出一个元组 `(rx, ry)`，则曲率是关于水平和垂直方向不对称的。`radius=(0.5, 0.5)`
    绘制一个椭圆。'
- en: 'Return type:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: 'Returns:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: top-left corner of the rectangle.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 矩形的左上角。
- en: '[PRE13]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Draw a quadrilateral. The drawing starts and ends at the top-left corner ([`Quad.ul`](quad.html#Quad.ul
    "Quad.ul")) in an anti-clockwise movement. It is a shortcut of [`Shape.draw_polyline()`](#Shape.draw_polyline
    "Shape.draw_polyline") with the argument `(ul, ll, lr, ur, ul)`.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制一个四边形。绘制从左上角（[`Quad.ul`](quad.html#Quad.ul "Quad.ul")）开始并以逆时针方向结束的图形。这是使用参数
    `(ul, ll, lr, ur, ul)` 调用 [`Shape.draw_polyline()`](#Shape.draw_polyline "Shape.draw_polyline")
    的快捷方式。
- en: 'Parameters:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**quad** (*quad_like*) – where to put the tetragon on the page.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**quad** (*quad_like*) – 在页面上放置四边形的位置。'
- en: 'Return type:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Point](point.html#point)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[Point](point.html#point)'
- en: 'Returns:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '[`Quad.ul`](quad.html#Quad.ul "Quad.ul").'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Quad.ul`](quad.html#Quad.ul "Quad.ul")。'
- en: '[PRE14]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Finish a set of *draw*()* methods by applying [Common Parameters](#commonparms)
    to all of them.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将[Common Parameters](#commonparms)应用于所有*draw*()*方法来完成一组绘制*draw*()*方法。
- en: It has **no effect on** [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")
    and [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox").
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '[`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")和[`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")对此没有影响。'
- en: The method also supports **morphing the compound drawing** using [Point](point.html#point)
    *fixpoint* and [Matrix](matrix.html#matrix) *matrix*.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法还支持使用[Point](point.html#point) *fixpoint*和[Matrix](matrix.html#matrix) *matrix*对复合图形进行**变形**。
- en: 'Parameters:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**morph** (*sequence*) – morph the text or the compound drawing around some
    arbitrary [Point](point.html#point) *fixpoint* by applying [Matrix](matrix.html#matrix)
    *matrix* to it. This implies that *fixpoint* is a **fixed point** of this operation:
    it will not change its position. Default is no morphing (*None*). The matrix can
    contain any values in its first 4 components, *matrix.e == matrix.f == 0* must
    be true, however. This means that any combination of scaling, shearing, rotating,
    flipping, etc. is possible, but translations are not.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**morph** (*sequence*) – 在某个任意的[Point](point.html#point) *fixpoint*周围对文本或复合图形进行变形，方法是将[Matrix](matrix.html#matrix)
    *matrix*应用于它。这意味着*fixpoint*是此操作的**固定点**：它不会改变其位置。默认值为无变形（*None*）。矩阵的前4个组件可以包含任何值，但*matrix.e
    == matrix.f == 0*必须为真。这意味着可以进行任意组合的缩放、倾斜、旋转、翻转等操作，但不能进行平移。'
- en: '**stroke_opacity** (*float*) – *(new in v1.18.1)* set transparency for stroke
    colors. Value < 0 or > 1 will be ignored. Default is 1 (intransparent).'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**stroke_opacity** (*float*) – *(new in v1.18.1)* 设置笔触颜色的透明度。值小于0或大于1将被忽略。默认值为1（不透明）。'
- en: '**fill_opacity** (*float*) – *(new in v1.18.1)* set transparency for fill colors.
    Default is 1 (intransparent).'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fill_opacity** (*float*) – *(new in v1.18.1)* 设置填充颜色的透明度。默认值为1（不透明）。'
- en: '**even_odd** (*bool*) – request the **“even-odd rule”** for filling operations.
    Default is *False*, so that the **“nonzero winding number rule”** is used. These
    rules are alternative methods to apply the fill color where areas overlap. Only
    with fairly complex shapes a different behavior is to be expected with these rules.
    For an in-depth explanation, see [Adobe PDF References](app3.html#adobemanual),
    pp. 137 ff. Here is an example to demonstrate the difference.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**even_odd** (*bool*) – 请求使用**“even-odd规则”**进行填充操作。默认值为*False*，因此使用**“nonzero
    winding number规则”**。这些规则是在区域重叠时应用填充颜色的备选方法。只有在相当复杂的形状中，才会使用这些规则产生不同的行为。有关详细解释，请参阅[Adobe
    PDF References](app3.html#adobemanual)，第137页及以后。以下是一个示例，演示了差异。'
- en: '**oc** (*int*) – *(new in v1.18.4)* the [`xref`](glossary.html#xref "xref")
    number of an [`OCG`](glossary.html#OCG "OCG") or [`OCMD`](glossary.html#OCMD "OCMD")
    to make this drawing conditionally displayable.'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**oc** (*int*) – *(new in v1.18.4)* [`xref`](glossary.html#xref "xref")的数字，表示可以有条件地显示此绘图的[`OCG`](glossary.html#OCG
    "OCG")或[`OCMD`](glossary.html#OCMD "OCMD")。'
- en: '![_images/img-even-odd.png](../Images/c127eb74792dde81060007bc2de35c75.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-even-odd.png](../Images/c127eb74792dde81060007bc2de35c75.png)'
- en: Note
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: 'For each pixel in a shape, the following will happen:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 对于形状中的每个像素，将发生以下情况：
- en: Rule **“even-odd”** counts, how many areas contain the pixel. If this count
    is **odd,** the pixel is regarded **inside** the shape, if it is **even**, the
    pixel is **outside**.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 规则 **“even-odd”** 计算像素包含的区域数。如果此计数为**奇数**，则像素被视为**内部**形状；如果为**偶数**，则像素被视为**外部**形状。
- en: 'The default rule **“nonzero winding”** in addition looks at the *“orientation”*
    of each area containing the pixel: it **adds 1** if an area is drawn anti-clockwise
    and it **subtracts 1** for clockwise areas. If the result is zero, the pixel is
    regarded **outside,** pixels with a non-zero count are **inside** the shape.'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认规则 **“nonzero winding”** 还会查看包含像素的每个区域的“*方向*”：如果区域逆时针绘制，则**加 1**；如果顺时针，则**减
    1**。如果结果为零，则像素被视为**外部**，具有非零计数的像素被视为**内部**形状。
- en: Of the four shapes in above image, the top two each show three circles drawn
    in standard manner (anti-clockwise, look at the arrows). The lower two shapes
    contain one (the top-left) circle drawn clockwise. As can be seen, area orientation
    is irrelevant for the right column (even-odd rule).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图的四个形状中，上两个形状分别显示了以标准方式绘制的三个圆（逆时针，查看箭头）。下面的两个形状包含一个（左上角）按顺时针方向绘制的圆。可以看出，面积方向对右侧列（奇偶规则）无关紧要。
- en: '[PRE15]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Insert text lines start at *point*.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 插入文本行从 *point* 处开始。
- en: 'Parameters:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**point** (*point_like*) –'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**point** (*point_like*) –'
- en: the bottom-left position of the first character of *text* in pixels. It is important
    to understand, how this works in conjunction with the *rotate* parameter. Please
    have a look at the following picture. The small red dots indicate the positions
    of *point* in each of the four possible cases.
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*text* 的左下角第一个字符的像素位置。了解它如何与 *rotate* 参数结合使用很重要。请参考下图。小红点表示 *point* 在四种可能情况下的位置。'
- en: '[![_images/img-inserttext.jpg](../Images/d9072bb6d96d3c7d885c9abbc01b8215.png)](_images/img-inserttext.jpg)'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[![_images/img-inserttext.jpg](../Images/d9072bb6d96d3c7d885c9abbc01b8215.png)](_images/img-inserttext.jpg)'
- en: '**text** (*str/sequence*) – the text to be inserted. May be specified as either
    a string type or as a sequence type. For sequences, or strings containing line
    breaks *n*, several lines will be inserted. No care will be taken if lines are
    too wide, but the number of inserted lines will be limited by “vertical” space
    on the page (in the sense of reading direction as established by the *rotate*
    parameter). Any rest of *text* is discarded – the return code however contains
    the number of inserted lines.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**text** (*str/sequence*) – 要插入的文本。可以指定为字符串类型或序列类型。对于包含换行符 *n* 的序列或字符串，将插入多行。不会处理行太宽的问题，但插入的行数将受页面上的“垂直”空间限制（根据
    *rotate* 参数所建立的阅读方向）。任何文本的剩余部分将被丢弃 – 但是返回代码包含插入行的数量。'
- en: '**lineheight** (*float*) – a factor to override the line height calculated
    from font properties. If not `None`, a line height of `fontsize * lineheight`
    will be used.'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lineheight** (*float*) – 一个因子，用于覆盖从字体属性计算的行高。如果不是 `None`，将使用 `fontsize *
    lineheight` 的行高。'
- en: '**stroke_opacity** (*float*) – *(new in v1.18.1)* set transparency for stroke
    colors (the **border line** of a character). Only `0 <= value <= 1` will be considered.
    Default is 1 (intransparent).'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**stroke_opacity** (*float*) – *(v1.18.1 新增)* 设置描边颜色（字符的**边框线**）的透明度。只有 `0
    <= value <= 1` 的值会被考虑。默认为1（不透明）。'
- en: '**fill_opacity** (*float*) – *(new in v1.18.1)* set transparency for fill colors.
    Default is 1 (intransparent). Use this value to control transparency of the text
    color. Stroke opacity **only** affects the border line of characters.'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fill_opacity** (*float*) – *(v1.18.1 新增)* 设置填充颜色的透明度。默认为1（不透明）。使用此值来控制文本颜色的透明度。描边透明度**仅**影响字符的边框线。'
- en: '**rotate** (*int*) – determines whether to rotate the text. Acceptable values
    are multiples of 90 degrees. Default is 0 (no rotation), meaning horizontal text
    lines oriented from left to right. 180 means text is shown upside down from **right
    to left**. 90 means anti-clockwise rotation, text running **upwards**. 270 (or
    -90) means clockwise rotation, text running **downwards**. In any case, *point*
    specifies the bottom-left coordinates of the first character’s rectangle. Multiple
    lines, if present, always follow the reading direction established by this parameter.
    So line 2 is located **above** line 1 in case of `rotate = 180`, etc.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rotate** (*int*) – 决定是否旋转文本。可接受的值为90度的倍数。默认为0（无旋转），意味着从左到右的水平文本行。180表示从**右到左**倒置显示文本。90表示逆时针旋转，文本向**上**运行。270（或-90）表示顺时针旋转，文本向**下**运行。在任何情况下，*point*
    指定第一个字符矩形的左下角坐标。如果存在多行，则始终按照此参数建立的阅读方向进行排列。因此，在 `rotate = 180` 的情况下，第二行位于第一行**上方**，依此类推。'
- en: '**oc** (*int*) – *(new in v1.18.4)* the [`xref`](glossary.html#xref "xref")
    number of an [`OCG`](glossary.html#OCG "OCG") or [`OCMD`](glossary.html#OCMD "OCMD")
    to make this text conditionally displayable.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**oc** (*int*) – *(v1.18.4 新增)* 表示一个 [`Xref`](glossary.html#xref "xref") 的编号，用于使此文本在特定条件下显示。'
- en: 'Return type:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: int
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: int
- en: 'Returns:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: number of lines inserted.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 插入的行数。
- en: For a description of the other parameters see [Common Parameters](#commonparms).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 其他参数的描述请参见 [Common Parameters](#commonparms)。
- en: '[PRE16]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'PDF only: Insert text into the specified rectangle. The text will be split
    into lines and words and then filled into the available space, starting from one
    of the four rectangle corners, which depends on `rotate`. Line feeds and multiple
    space will be respected.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 仅适用于 PDF：将文本插入指定的矩形区域。文本将被分割成行和单词，然后填充到可用空间中，从四个矩形角之一开始，这取决于 `rotate`。将尊重换行符和多个空格。
- en: 'Parameters:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**rect** (*rect_like*) – the area to use. It must be finite and not empty.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rect** (*rect_like*) – 要使用的区域。必须是有限且非空的。'
- en: '**buffer** (*str/sequence*) – the text to be inserted. Must be specified as
    a string or a sequence of strings. Line breaks are respected also when occurring
    in a sequence entry.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**buffer**（*str/sequence*）– 要插入的文本。必须指定为字符串或字符串序列。即使在序列条目中也会尊重换行。'
- en: '**align** (*int*) – align each text line. Default is 0 (left). Centered, right
    and justified are the other supported options, see [Text Alignment](vars.html#textalign).
    Please note that the effect of parameter value *TEXT_ALIGN_JUSTIFY* is only achievable
    with “simple” (single-byte) fonts (including the [PDF Base 14 Fonts](app3.html#base-14-fonts)).'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**align**（*int*）– 对齐每一行文本。默认为 0（左对齐）。居中、右对齐和两端对齐是其他支持的选项，请参阅 [文本对齐](vars.html#textalign)。请注意，参数值
    *TEXT_ALIGN_JUSTIFY* 的效果仅可通过“简单”（单字节）字体（包括 [PDF 基本 14 字体](app3.html#base-14-fonts)）实现。'
- en: '**lineheight** (*float*) –'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lineheight**（*float*）–'
- en: a factor to override the line height calculated from font properties. If not
    `None`, a line height of `fontsize * lineheight` will be used.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个因子，用于覆盖从字体属性计算出的行高。如果不是 `None`，则将使用行高 `fontsize * lineheight`。
- en: 'arg int expandtabs:'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'arg int expandtabs:'
- en: controls handling of tab characters `\t` using the `string.expandtabs()` method
    **per each line**.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 `string.expandtabs()` 方法**逐行**控制制表符 `\t` 的处理。
- en: '**stroke_opacity** (*float*) – *(new in v1.18.1)* set transparency for stroke
    colors. Negative values and values > 1 will be ignored. Default is 1 (intransparent).'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**stroke_opacity**（*float*）– （在 v1.18.1 中新增）设置描边颜色的透明度。负值和大于 1 的值将被忽略。默认为 1（不透明）。'
- en: '**fill_opacity** (*float*) – *(new in v1.18.1)* set transparency for fill colors.
    Default is 1 (intransparent). Use this value to control transparency of the text
    color. Stroke opacity **only** affects the border line of characters.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fill_opacity**（*float*）– （在 v1.18.1 中新增）设置填充颜色的透明度。默认为 1（不透明）。使用此值控制文本颜色的透明度。描边不透明度**仅**影响字符的边框线。'
- en: '**rotate** (*int*) – requests text to be rotated in the rectangle. This value
    must be a multiple of 90 degrees. Default is 0 (no rotation). Effectively, the
    four values `0`, `90`, `180` and `270` (= `-90`) are processed, each causing the
    text to start in a different rectangle corner. Bottom-left is `90`, bottom-right
    is `180`, and `-90 / 270` is top-right. See the example how text is filled in
    a rectangle. This argument takes precedence over morphing. See the second example,
    which shows text first rotated left by `90` degrees and then the whole rectangle
    rotated clockwise around is lower left corner.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rotate**（*int*）– 请求文本在矩形中旋转。该值必须是 90 度的倍数。默认为 0（不旋转）。实际上，处理四个值 `0`、`90`、`180`
    和 `270`（= `-90`），每个值导致文本从不同的矩形角开始。左下角是 `90`，右下角是 `180`，`-90 / 270` 是右上角。请参阅示例，了解文本如何填充到矩形中。此参数优先于变形。请参阅第二个示例，其中文本首先向左旋转了
    `90` 度，然后整个矩形围绕其左下角顺时针旋转。'
- en: '**oc** (*int*) – *(new in v1.18.4)* the [`xref`](glossary.html#xref "xref")
    number of an [`OCG`](glossary.html#OCG "OCG") or [`OCMD`](glossary.html#OCMD "OCMD")
    to make this text conditionally displayable.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**oc**（*int*）– （在 v1.18.4 中新增）[`xref`](glossary.html#xref "xref")编号，用于使此文本有条件地显示为
    [`OCG`](glossary.html#OCG "OCG") 或 [`OCMD`](glossary.html#OCMD "OCMD")。'
- en: 'Return type:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: float
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点
- en: 'Returns:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: '**If positive or zero**: successful execution. The value returned is the unused
    rectangle line space in pixels. This may safely be ignored – or be used to optimize
    the rectangle, position subsequent items, etc.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果为正数或零**：执行成功。返回的值是像素中未使用的矩形线空间。这可以安全地忽略 – 或用于优化矩形，定位后续项目等。'
- en: '**If negative**: no execution. The value returned is the space deficit to store
    text lines. Enlarge rectangle, decrease *fontsize*, decrease text amount, etc.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果为负数**：不执行。返回的值是存储文本行的空间不足。扩大矩形，减小 *fontsize*，减少文本数量等。'
- en: '![_images/img-rotate.png](../Images/50131384349202b34e4bddbe97be8b9e.png) ![_images/img-rot%2Bmorph.png](../Images/508b3c2316be49a3ceec9f3068a55502.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-rotate.png](../Images/50131384349202b34e4bddbe97be8b9e.png) ![_images/img-rot%2Bmorph.png](../Images/508b3c2316be49a3ceec9f3068a55502.png)'
- en: For a description of the other parameters see [Common Parameters](#commonparms).
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 有关其他参数的描述，请参阅 [常见参数](#commonparms)。
- en: '[PRE17]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Update the page’s [`contents`](glossary.html#contents "contents") with the accumulated
    drawings, followed by any text insertions. If text overlaps drawings, it will
    be written on top of the drawings.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 更新页面的 [`contents`](glossary.html#contents "contents")，其中包含累积的绘图，然后是任何文本插入。如果文本重叠绘图，则将在绘图的顶部写入。
- en: Warning
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: '**Do not forget to execute this method:**'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '**不要忘记执行此方法：**'
- en: If a shape is **not committed, it will be ignored and the page will not be changed!**
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 如果形状**未提交，它将被忽略，并且页面不会更改！**
- en: The method will reset attributes [`Shape.rect`](#Shape.rect "Shape.rect"), [`lastPoint`](#Shape.lastPoint
    "Shape.lastPoint"), [`draw_cont`](#Shape.draw_cont "Shape.draw_cont"), [`text_cont`](#Shape.text_cont
    "Shape.text_cont") and [`totalcont`](#Shape.totalcont "Shape.totalcont"). Afterwards,
    the shape object can be reused for the **same page**.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 方法将重置属性[`Shape.rect`](#Shape.rect "Shape.rect")，[`lastPoint`](#Shape.lastPoint
    "Shape.lastPoint")，[`draw_cont`](#Shape.draw_cont "Shape.draw_cont")，[`text_cont`](#Shape.text_cont
    "Shape.text_cont")和[`totalcont`](#Shape.totalcont "Shape.totalcont")。之后，形状对象可以在**同一页**中重新使用。
- en: 'Parameters:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**overlay** (*bool*) – determine whether to put content in foreground (default)
    or background. Relevant only, if the page already has a non-empty [`contents`](glossary.html#contents
    "contents") object.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '**overlay**（*bool*）– 确定是否将内容放置在前景（默认）或背景中。仅当页面已经具有非空[`contents`](glossary.html#contents
    "contents")对象时才相关。'
- en: '**———- Attributes ———-**'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '**———- 属性 ———-**'
- en: '[PRE18]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'For reference only: the page’s document.'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 仅供参考：页面的文档。
- en: 'Type:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Document](document.html#document)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '[文档](document.html#document)'
- en: '[PRE19]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'For reference only: the owning page.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 仅供参考：拥有的页面。
- en: 'Type:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Page](page.html#page)'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '[页面](page.html#page)'
- en: '[PRE20]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Copy of the page’s height
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 页面的高度副本
- en: 'Type:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点
- en: '[PRE21]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Copy of the page’s width.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 页面的宽度副本。
- en: 'Type:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点数
- en: '[PRE22]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Accumulated command buffer for **draw methods** since last finish. Every finish
    method will append its commands to [`Shape.totalcont`](#Shape.totalcont "Shape.totalcont").
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 自上次完成以来的**draw方法**累积的命令缓冲区。每个完成方法将其命令附加到[`Shape.totalcont`](#Shape.totalcont
    "Shape.totalcont")。
- en: 'Type:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: str
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: str
- en: '[PRE23]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Accumulated text buffer. All **text insertions** go here. This buffer will be
    appended to [`totalcont`](#Shape.totalcont "Shape.totalcont") [`Shape.commit()`](#Shape.commit
    "Shape.commit"), so that text will never be covered by drawings in the same Shape.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 累积的文本缓冲区。所有**文本插入**都在这里进行。此缓冲区将附加到[`totalcont`](#Shape.totalcont "Shape.totalcont")
    [`Shape.commit()`](#Shape.commit "Shape.commit")，因此文本永远不会被同一形状中的绘图覆盖。
- en: 'Type:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: str
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: str
- en: '[PRE24]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Rectangle surrounding drawings. This attribute is at your disposal and may be
    changed at any time. Its value is set to *None* when a shape is created or committed.
    Every *draw** method, and [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")
    update this property (i.e. **enlarge** the rectangle as needed). **Morphing**
    operations, however ([`Shape.finish()`](#Shape.finish "Shape.finish"), [`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")) are ignored.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 围绕绘图的矩形。此属性可供您使用，并且可以随时更改。在创建或提交形状时，其值设置为*None*。每个*draw*方法以及[`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")将更新此属性（即**根据需要扩展**矩形）。然而，*morphing*操作（[`Shape.finish()`](#Shape.finish
    "Shape.finish")，[`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")）将被忽略。
- en: A typical use of this attribute would be setting [`Page.cropbox_position`](page.html#Page.cropbox_position
    "Page.cropbox_position") to this value, when you are creating shapes for later
    or external use. If you have not manipulated the attribute yourself, it should
    reflect a rectangle that contains all drawings so far.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 此属性的典型用法是在稍后或外部使用时将[`Page.cropbox_position`](page.html#Page.cropbox_position
    "Page.cropbox_position")设置为此值。如果您未手动操作属性，则应反映一个包含到目前为止所有绘图的矩形。
- en: 'If you have used morphing and need a rectangle containing the morphed objects,
    use the following code:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用了morphing并且需要包含morphed对象的矩形，请使用以下代码：
- en: '[PRE25]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Type:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Rect](rect.html#rect)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '[矩形](rect.html#rect)'
- en: '[PRE26]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Total accumulated command buffer for draws and text insertions. This will be
    used by [`Shape.commit()`](#Shape.commit "Shape.commit").
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 用于draws和text insertions的总累积命令缓冲区。这将被[`Shape.commit()`](#Shape.commit "Shape.commit")使用。
- en: 'Type:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: str
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: str
- en: '[PRE27]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'For reference only: the current point of the drawing path. It is *None* at
    *Shape* creation and after each *finish()* and *commit()*.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 仅供参考：绘图路径的当前点。在*Shape*创建后以及每次*finish()*和*commit()*之后为*None*。
- en: 'Type:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: Usage
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用法
- en: 'A drawing object is constructed by *shape = page.new_shape()*. After this,
    as many draw, finish and text insertions methods as required may follow. Each
    sequence of draws must be finished before the drawing is committed. The overall
    coding pattern looks like this:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 通过*shape = page.new_shape()*构造绘图对象。之后，可以跟随所需数量的draw、finish和text insertions方法。在提交绘图之前必须完成每个绘制序列。整体编码模式如下：
- en: '[PRE28]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Note
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Each *finish()* combines the preceding draws into one logical shape, giving
    it common colors, line width, morphing, etc. If *closePath* is specified, it will
    also connect the end point of the last draw with the starting point of the first
    one.
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个 *finish()* 将前面的绘制组合成一个逻辑形状，使其具有共同的颜色、线宽、变形等。如果指定了 *closePath*，它还将连接最后一个绘制的结束点与第一个绘制的起始点。
- en: To successfully create compound graphics, let each draw method use the end point
    of the previous one as its starting point. In the above pseudo code, *draw2* should
    hence use the returned [Point](point.html#point) of *draw1* as its starting point.
    Failing to do so, would automatically start a new path and *finish()* may not
    work as expected (but it won’t complain either).
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要成功创建复合图形，请让每个绘制方法使用前一个绘制的结束点作为其起始点。在上述伪代码中，*draw2* 因此应使用 *draw1* 的返回的 [Point](point.html#point)
    作为其起始点。如果未能如此做，将自动开始一个新路径，并且 *finish()* 可能不会按预期工作（但它也不会报错）。
- en: Text insertions may occur anywhere before the commit (they neither touch [`Shape.draw_cont`](#Shape.draw_cont
    "Shape.draw_cont") nor [`Shape.lastPoint`](#Shape.lastPoint "Shape.lastPoint")).
    They are appended to *Shape.totalcont* directly, whereas draws will be appended
    by *Shape.finish*.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文本插入可以出现在提交之前的任何位置（它们既不接触 [`Shape.draw_cont`](#Shape.draw_cont "Shape.draw_cont")
    也不接触 [`Shape.lastPoint`](#Shape.lastPoint "Shape.lastPoint")）。它们将直接附加到 *Shape.totalcont*，而绘制则将由
    *Shape.finish* 附加。
- en: Each *commit* takes all text insertions and shapes and places them in foreground
    or background on the page – thus providing a way to control graphical layers.
  id: totrans-264
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个 *commit* 将所有文本插入和形状放置在页面的前景或背景中，从而提供了一种控制图形层的方法。
- en: '**Only** *commit* **will update** the page’s contents, the other methods are
    basically string manipulations.'
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**只有** *commit* **将更新** 页面的内容，其他方法基本上是字符串操作。'
- en: Examples
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create a full circle of pieces of pie in different colors:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建不同颜色的饼图完整圆形：
- en: '[PRE29]'
  id: totrans-268
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here is an example for 5 colors:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 5 种颜色的示例：
- en: '![_images/img-cake.png](../Images/5186cb30721f9ebfde5f265b15719402.png)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-cake.png](../Images/5186cb30721f9ebfde5f265b15719402.png)'
- en: 'Create a regular n-edged polygon (fill yellow, red border). We use *draw_sector()*
    only to calculate the points on the circumference, and empty the draw command
    buffer again before drawing the polygon:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建常规的 n 边形（填充黄色，红色边框）。我们仅使用 *draw_sector()* 计算周长上的点，并在绘制多边形之前清空绘制命令缓冲区：
- en: '[PRE30]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Here is the polygon for n = 7:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 n = 7 的多边形：
- en: '![_images/img-7edges.png](../Images/1d9b8de07f5f68835dd0cd1a31155814.png) ##
    Common Parameters'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/img-7edges.png](../Images/1d9b8de07f5f68835dd0cd1a31155814.png) ##
    常用参数'
- en: '**fontname** (*str*)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '**fontname** (*str*)'
- en: 'In general, there are three options:'
  id: totrans-276
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通常有三种选项：
- en: ''
  id: totrans-277
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Use one of the standard [PDF Base 14 Fonts](app3.html#base-14-fonts). In this
    case, *fontfile* **must not** be specified and *“Helvetica”* is used if this parameter
    is omitted, too.
  id: totrans-278
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用标准的 [PDF 基本 14 字体](app3.html#base-14-fonts) 之一。在这种情况下，如果省略此参数，则必须不指定 *fontfile*，且将使用
    *“Helvetica”*。
- en: ''
  id: totrans-279
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-280
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Choose a font already in use by the page. Then specify its **reference** name
    prefixed with a slash “/”, see example below.
  id: totrans-281
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择页面已经在使用的字体。然后指定其带斜杠“/”的**引用**名称，如下例所示。
- en: ''
  id: totrans-282
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-283
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Specify a font file present on your system. In this case choose an arbitrary,
    but new name for this parameter (without “/” prefix).
  id: totrans-284
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定系统中存在的字体文件。在这种情况下，选择一个任意的新名称用于此参数（不带“/”前缀）。
- en: ''
  id: totrans-285
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-286
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-287
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'If inserted text should re-use one of the page’s fonts, use its reference name
    appearing in [`Page.get_fonts()`](page.html#Page.get_fonts "Page.get_fonts") like
    so:'
  id: totrans-288
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果插入的文本应重用页面的某个字体，请使用其在 [`Page.get_fonts()`](page.html#Page.get_fonts "Page.get_fonts")
    中出现的引用名称，如下所示：
- en: ''
  id: totrans-289
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Suppose the font list has the item *[1024, 0, ‘Type1’, ‘NimbusMonL-Bold’, ‘R366’]*,
    then specify *fontname = “/R366”, fontfile = None* to use font *NimbusMonL-Bold*.
  id: totrans-290
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 假设字体列表中有项目 *[1024, 0, ‘Type1’, ‘NimbusMonL-Bold’, ‘R366’]*，则指定 *fontname = “/R366”，fontfile
    = None* 使用字体 *NimbusMonL-Bold*。
- en: '* * *'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**fontfile** (*str*)'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '**fontfile** (*str*)'
- en: File path of a font existing on your computer. If you specify *fontfile*, make
    sure you use a *fontname* **not occurring** in the above list. This new font will
    be embedded in the PDF upon *doc.save()*. Similar to new images, a font file will
    be embedded only once. A table of MD5 codes for the binary font contents is used
    to ensure this.
  id: totrans-293
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 您计算机上现有的字体文件路径。如果指定了 *fontfile*，请确保使用上述列表中不存在的 *fontname*。此新字体将在 *doc.save()*
    时嵌入 PDF。类似于新图像，每个字体文件只会被嵌入一次。使用二进制字体内容的 MD5 码表来确保这一点。
- en: '* * *'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**set_simple** (*bool*)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '**set_simple** (*bool*)'
- en: Fonts installed from files are installed as **Type0** fonts by default. If you
    want to use 1-byte characters only, set this to true. This setting cannot be reverted.
    Subsequent changes are ignored.
  id: totrans-296
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从文件安装的字体默认安装为**Type0**字体。如果要仅使用1字节字符，请将此设置为true。此设置无法恢复。后续更改将被忽略。
- en: '* * *'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**fontsize** (*float*)'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '**fontsize**（*浮点数*）'
- en: 'Font size of text, see: [`fontsize`](glossary.html#fontsize "fontsize").'
  id: totrans-299
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 文本的字体大小，请参见：[`fontsize`](glossary.html#fontsize "fontsize")。
- en: '* * *'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**dashes** (*str*)'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '**dashes**（*字符串*）'
- en: Causes lines to be drawn dashed. The general format is `"[n m] p"` of (up to)
    3 floats denoting pixel lengths. [`n`](colorspace.html#Colorspace.n "Colorspace.n")
    is the dash length, `m` (optional) is the subsequent gap length, and `p` (the
    “phase” - **required**, even if 0!) specifies how many pixels should be skipped
    before the dashing starts. If `m` is omitted, it defaults to [`n`](colorspace.html#Colorspace.n
    "Colorspace.n").
  id: totrans-302
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致线条绘制为虚线。一般格式为`"[n m] p"`，其中（最多）3个浮点数表示像素长度。[`n`](colorspace.html#Colorspace.n
    "Colorspace.n") 是虚线长度，`m`（可选）是随后的间隔长度，`p`（“相位” - **必须的**，即使为0！）指定虚线开始之前应跳过多少像素。如果省略
    `m`，则默认为 [`n`](colorspace.html#Colorspace.n "Colorspace.n")。
- en: ''
  id: totrans-303
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A continuous line (no dashes) is drawn with `"[] 0"` or *None* or `""`. Examples:'
  id: totrans-304
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用`"[] 0"`或*None*或`""`绘制连续线条（无虚线）。示例：
- en: ''
  id: totrans-305
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Specifying `"[3 4] 0"` means dashes of 3 and gaps of 4 pixels following each
    other.
  id: totrans-306
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定 `"[3 4] 0"` 意味着3像素虚线和4像素间隔交替出现。
- en: ''
  id: totrans-307
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-308
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"[3 3] 0"` and `"[3] 0"` do the same thing.'
  id: totrans-309
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"[3 3] 0"` 和 `"[3] 0"` 做同样的事情。'
- en: ''
  id: totrans-310
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-311
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-312
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For (the rather complex) details on how to achieve sophisticated dashing effects,
    see [Adobe PDF References](app3.html#adobemanual), page 217.
  id: totrans-313
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有关如何实现复杂虚线效果的详细信息，请参见[Adobe PDF 参考手册](app3.html#adobemanual)，第217页。
- en: '* * *'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**color / fill** (*list, tuple*)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '**color / fill**（*列表、元组*）'
- en: Stroke and fill colors can be specified as tuples or list of of floats from
    0 to 1\. These sequences must have a length of 1 (GRAY), 3 (RGB) or 4 (CMYK).
    For GRAY colorspace, a single float instead of the unwieldy *(float,)* or *[float]*
    is also accepted. Accept (default) or use `None` to not use the parameter.
  id: totrans-316
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 描边和填充颜色可以指定为浮点数列表或元组，范围从0到1。这些序列必须具有长度为1（GRAY）、3（RGB）或4（CMYK）。对于GRAY颜色空间，可以接受单个浮点数，而不是笨重的*(float,)*或*[float]*。接受（默认）或使用`None`来不使用该参数。
- en: ''
  id: totrans-317
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To simplify color specification, method *getColor()* in *pymupdf.utils* may
    be used to get predefined RGB color triples by name. It accepts a string as the
    name of the color and returns the corresponding triple. The method knows over
    540 color names – see section [Color Database](colors.html#colordatabase).
  id: totrans-318
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为了简化颜色规范，*pymupdf.utils* 中的 *getColor()* 方法可以通过名称获取预定义的RGB颜色三元组。它接受颜色名称的字符串，并返回相应的三元组。该方法知道超过540个颜色名称
    - 请参阅[颜色数据库](colors.html#colordatabase)部分。
- en: ''
  id: totrans-319
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Please note that the term *color* usually means “stroke” color when used in
    conjunction with fill color.
  id: totrans-320
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，当与填充颜色一起使用时，术语*color*通常意味着“描边”颜色。
- en: ''
  id: totrans-321
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If letting default a color parameter to `None`, then no resp. color selection
    command will be generated. If *fill* and *color* are both `None`, then the drawing
    will contain no color specification. But it will still be “stroked”, which causes
    PDF’s default color “black” be used by Adobe Acrobat and all other viewers.
  id: totrans-322
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果将颜色参数默认为 `None`，则不会生成相应的颜色选择命令。如果*fill*和*color*都是 `None`，则绘图将不包含颜色规范。但仍将“描边”，这会导致PDF默认颜色“黑色”被Adobe
    Acrobat和所有其他查看器使用。
- en: '* * *'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**width** (*float*)'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**width**（*浮点数*）'
- en: 'The stroke (“border”) width of the elements in a shape (if applicable). The
    default value is 1\. The values width, color and fill have the following relationship
    / dependency:'
  id: totrans-325
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 形状中元素的描边（“边框”）宽度（如果适用）。默认值为1。width、color 和 fill 有以下关系/依赖：
- en: ''
  id: totrans-326
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If `fill=None` shape elements will always be drawn with a border - even if `color=None`
    (in which case black is taken) or `width=0` (in which case 1 is taken).
  id: totrans-327
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 `fill=None`，则形状元素始终会带有边框，即使 `color=None`（此时取黑色）或 `width=0`（此时取1）也是如此。
- en: ''
  id: totrans-328
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-329
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Shapes without border can only be achieved if a fill color is specified (which
    may be white of course). To achieve this, specify `width=0`. In this case, the
    [`color`](textwriter.html#TextWriter.color "TextWriter.color") parameter is ignored.
  id: totrans-330
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 形状没有边框只能在指定了填充颜色（当然可以是白色）的情况下实现。要实现这一点，请指定`width=0`。在这种情况下，[`color`](textwriter.html#TextWriter.color
    "TextWriter.color") 参数将被忽略。
- en: '* * *'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**stroke_opacity / fill_opacity** (*floats*)'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '**stroke_opacity / fill_opacity**（*浮点数*）'
- en: Both values are floats in range [0, 1]. Negative values or values > 1 will ignored
    (in most cases). Both set the transparency such that a value 0.5 corresponds to
    50% transparency, 0 means invisible and 1 means intransparent. For e.g. a rectangle
    the stroke opacity applies to its border and fill opacity to its interior.
  id: totrans-333
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 两个值都是在范围[0, 1]内的浮点数。负值或大于1的值将被忽略（在大多数情况下）。两者设置透明度，使得值0.5对应于50％的透明度，0表示不可见，1表示不透明。例如，对于矩形，边框透明度适用于其边框，而填充透明度适用于其内部。
- en: ''
  id: totrans-334
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'For text insertions ([`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")
    and [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")),
    use *fill_opacity* for the text. At first sight this seems surprising, but it
    becomes obvious when you look further down to *render_mode*: *fill_opacity* applies
    to the yellow and *stroke_opacity* applies to the blue color.'
  id: totrans-335
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于文本插入（[`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")和[`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")），使用*fill_opacity*控制文本的透明度。乍一看，这似乎令人惊讶，但是当你继续查看*render_mode*时，它就变得明显了：*fill_opacity*适用于黄色，*stroke_opacity*适用于蓝色。
- en: '* * *'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**border_width** (*float*)'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '**border_width**（*浮点数*）'
- en: Set the border width for text insertions. New in v1.14.9\. Relevant only if
    the render mode argument is used with a value greater zero.
  id: totrans-338
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 设置文本插入的边框宽度。在 v1.14.9 中新增。仅在使用大于零的值的渲染模式参数时相关。
- en: '* * *'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**render_mode** (*int*)'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '**render_mode**（*整数*）'
- en: '*New in version 1.14.9:* Integer in `range(8)` which controls the text appearance
    ([`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text") and [`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")). See page 246 in [Adobe PDF References](app3.html#adobemanual).
    New in v1.14.9\. These methods now also differentiate between fill and stroke
    colors.'
  id: totrans-341
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*1.14.9 版本中新增：* `range(8)` 中的整数，控制文本外观（[`Shape.insert_text()`](#Shape.insert_text
    "Shape.insert_text")和[`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")）。参见[Adobe
    PDF 参考手册](app3.html#adobemanual)第246页。在 v1.14.9 中新增。这些方法现在也区分填充和描边颜色。'
- en: ''
  id: totrans-342
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For default 0, only the text fill color is used to paint the text. For backward
    compatibility, using the *color* parameter instead also works.
  id: totrans-343
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '对于默认值为 0，只使用文本填充颜色来绘制文本。为了向后兼容，也可以使用*color*参数。 '
- en: ''
  id: totrans-344
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-345
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: For render mode 1, only the border of each glyph (i.e. text character) is drawn
    with a thickness as set in argument *border_width*. The color chosen in the *color*
    argument is taken for this, the *fill* parameter is ignored.
  id: totrans-346
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于渲染模式 1，只绘制每个字形（即文本字符）的边框，边框的厚度由*border_width*参数设置。选用*color*参数中的颜色，*fill*参数将被忽略。
- en: ''
  id: totrans-347
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-348
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For render mode 2, the glyphs are filled and stroked, using both color parameters
    and the specified border width. You can use this value to simulate **bold text**
    without using another font: choose the same value for *fill* and *color* and an
    appropriate value for *border_width*.'
  id: totrans-349
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于渲染模式 2，字形填充并描边，同时使用颜色参数和指定的边框宽度。您可以使用此值来模拟**粗体文本**，而无需使用另一种字体：选择相同值的*fill*和*color*以及适当的*border_width*值。
- en: ''
  id: totrans-350
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-351
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For render mode 3, the glyphs are neither stroked nor filled: the text becomes
    invisible.'
  id: totrans-352
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于渲染模式 3，字形既不描边也不填充：文本变得不可见。
- en: ''
  id: totrans-353
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-354
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-355
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The following examples use border_width=0.3, together with a fontsize of 15\.
    Stroke color is blue and fill color is some yellow.
  id: totrans-356
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 以下示例使用border_width=0.3，字体大小为15。描边颜色为蓝色，填充颜色为一些黄色。
- en: ''
  id: totrans-357
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![_images/img-rendermode.jpg](../Images/68afc67e63136e95b67c5e79fab5037b.png)'
  id: totrans-358
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![_images/img-rendermode.jpg](../Images/68afc67e63136e95b67c5e79fab5037b.png)'
- en: '* * *'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**overlay** (*bool*)'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '**overlay**（*布尔值*）'
- en: Causes the item to appear in foreground (default) or background.
  id: totrans-361
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使项目出现在前景（默认）或背景中。
- en: '* * *'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**morph** (*sequence*)'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '**morph**（*序列*）'
- en: Causes “morphing” of either a shape, created by the *draw*()* methods, or the
    text inserted by page methods *insert_textbox()* / *insert_text()*. If not *None*,
    it must be a pair *(fixpoint, matrix)*, where *fixpoint* is a [Point](point.html#point)
    and *matrix* is a [Matrix](matrix.html#matrix). The matrix can be anything except
    translations, i.e. *matrix.e == matrix.f == 0* must be true. The point is used
    as a fixed point for the matrix operation. For example, if *matrix* is a rotation
    or scaling, then *fixpoint* is its center. Similarly, if *matrix* is a left-right
    or up-down flip, then the mirroring axis will be the vertical, respectively horizontal
    line going through *fixpoint*, etc.
  id: totrans-364
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致“形态变化”形状或页面方法插入的文本（如 *insert_textbox()* / *insert_text()*）的“形态变化”。如果不是 *None*，必须是一个
    *(fixpoint, matrix)* 对，其中 *fixpoint* 是一个 [Point](point.html#point)，*matrix* 是一个
    [Matrix](matrix.html#matrix)。矩阵可以是除了平移以外的任何内容，即 *matrix.e == matrix.f == 0* 必须为真。点用作矩阵操作的固定点。例如，如果
    *matrix* 是旋转或缩放，则 *fixpoint* 是其中心。类似地，如果 *matrix* 是左右或上下翻转，则镜像轴将是通过 *fixpoint*
    的垂直或水平线等。
- en: ''
  id: totrans-365
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-366
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-367
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Several methods contain checks whether the to be inserted items will actually
    fit into the page (like [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text"),
    or [`Shape.draw_rect()`](#Shape.draw_rect "Shape.draw_rect")). For the result
    of a morphing operation there is however no such guaranty: this is entirely the
    programmer’s responsibility.'
  id: totrans-368
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 若干方法包含检查即将插入项目是否实际适合页面的代码（如 [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")
    或 [`Shape.draw_rect()`](#Shape.draw_rect "Shape.draw_rect")）。但形态操作的结果则无此保证：这完全取决于程序员的责任。
- en: '* * *'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**lineCap (deprecated: “roundCap”)** (*int*)'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '**lineCap (已弃用：“roundCap”)** (*int*)'
- en: Controls the look of line ends. The default value 0 lets each line end at exactly
    the given coordinate in a sharp edge. A value of 1 adds a semi-circle to the ends,
    whose center is the end point and whose diameter is the line width. Value 2 adds
    a semi-square with an edge length of line width and a center of the line end.
  id: totrans-371
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 控制线段的外观。默认值 0 使每条线段正好以给定坐标处的尖角结束。值为 1 添加一个半圆到末端，其中心是端点，直径为线宽。值为 2 添加一个半正方形，边长为线宽，中心为线段的末端。
- en: ''
  id: totrans-372
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Changed in version 1.14.15*'
  id: totrans-373
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*自版本 1.14.15 更改*'
- en: '* * *'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**lineJoin** (*int*)'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '**lineJoin** (*int*)'
- en: '*New in version 1.14.15:* Controls the way how line connections look like.
    This may be either as a sharp edge (0), a rounded join (1), or a cut-off edge
    (2, “butt”).'
  id: totrans-376
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*自版本 1.14.15 新增:* 控制线连接外观的方式。可以是尖角（0）、圆形连接（1）或截断边缘（2，“butt”）。'
- en: '* * *'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**closePath** (*bool*)'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '**closePath** (*bool*)'
- en: Causes the end point of a drawing to be automatically connected with the starting
    point (by a straight line).
  id: totrans-379
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致绘图的终点自动与起点连接（通过直线）。
- en: Do you have any feedback on this page?
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 对本页有任何反馈意见吗？
- en: '* * *'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不附带任何明示或暗示的担保。本软件根据许可分发，未经许可不得复制、修改或分发。有关详细信息，请参阅 [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    的许可信息或联系美国加利福尼亚州旧金山 Mesa 街 39 号 108A 单元的 Artifex Software Inc.。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档覆盖所有版本直至 1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
- en: Usage
  id: totrans-385
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用法
- en: 'A drawing object is constructed by *shape = page.new_shape()*. After this,
    as many draw, finish and text insertions methods as required may follow. Each
    sequence of draws must be finished before the drawing is committed. The overall
    coding pattern looks like this:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图对象由 *shape = page.new_shape()* 构造。此后，可以按需使用许多绘制、完成和文本插入方法。每个绘制序列必须在提交绘图之前完成。整体编码模式如下：
- en: '[PRE31]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Each *finish()* combines the preceding draws into one logical shape, giving
    it common colors, line width, morphing, etc. If *closePath* is specified, it will
    also connect the end point of the last draw with the starting point of the first
    one.
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个 *finish()* 将前面的绘制组合成一个逻辑形状，赋予其共同的颜色、线宽、形态操作等。如果指定了 *closePath*，它还会连接最后一个绘制的终点与第一个绘制的起点。
- en: To successfully create compound graphics, let each draw method use the end point
    of the previous one as its starting point. In the above pseudo code, *draw2* should
    hence use the returned [Point](point.html#point) of *draw1* as its starting point.
    Failing to do so, would automatically start a new path and *finish()* may not
    work as expected (but it won’t complain either).
  id: totrans-390
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了成功创建复合图形，让每个绘制方法使用前一个绘制方法的终点作为其起点。在上述伪代码中，*draw2*应该使用*draw1*返回的[Point](point.html#point)作为其起点。如果未这样做，将会自动启动一个新路径，并且*finish()*可能不会按预期工作（但它也不会抱怨）。
- en: Text insertions may occur anywhere before the commit (they neither touch [`Shape.draw_cont`](#Shape.draw_cont
    "Shape.draw_cont") nor [`Shape.lastPoint`](#Shape.lastPoint "Shape.lastPoint")).
    They are appended to *Shape.totalcont* directly, whereas draws will be appended
    by *Shape.finish*.
  id: totrans-391
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 文本插入可以出现在提交之前的任何地方（它们不会触及[`Shape.draw_cont`](#Shape.draw_cont "Shape.draw_cont")或者[`Shape.lastPoint`](#Shape.lastPoint
    "Shape.lastPoint")）。它们直接附加到*Shape.totalcont*，而绘制将通过*Shape.finish*附加。
- en: Each *commit* takes all text insertions and shapes and places them in foreground
    or background on the page – thus providing a way to control graphical layers.
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每次*commit*都会获取所有文本插入和形状，并将它们放置在页面的前景或背景上 - 因此提供了控制图形层的一种方式。
- en: '**Only** *commit* **will update** the page’s contents, the other methods are
    basically string manipulations.'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**只有** *commit* **将更新** 页面的内容，其他方法基本上是字符串操作。'
- en: Examples
  id: totrans-394
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例
- en: 'Create a full circle of pieces of pie in different colors:'
  id: totrans-395
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个由不同颜色的扇形组成的完整圆：
- en: '[PRE32]'
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Here is an example for 5 colors:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个5种颜色的示例：
- en: '![_images/img-cake.png](../Images/5186cb30721f9ebfde5f265b15719402.png)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-cake.png](../Images/5186cb30721f9ebfde5f265b15719402.png)'
- en: 'Create a regular n-edged polygon (fill yellow, red border). We use *draw_sector()*
    only to calculate the points on the circumference, and empty the draw command
    buffer again before drawing the polygon:'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个常规的n边形（填充黄色，红色边框）。我们只使用`draw_sector()`来计算周长上的点，并在绘制多边形之前清空绘图命令缓冲区：
- en: '[PRE33]'
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Here is the polygon for n = 7:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 这是n = 7的多边形示例：
- en: '![_images/img-7edges.png](../Images/1d9b8de07f5f68835dd0cd1a31155814.png) ##
    Common Parameters'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '![_images/img-7edges.png](../Images/1d9b8de07f5f68835dd0cd1a31155814.png) ##
    常见参数'
- en: '**fontname** (*str*)'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '**fontname**（*str*）'
- en: 'In general, there are three options:'
  id: totrans-404
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通常有三种选项：
- en: ''
  id: totrans-405
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Use one of the standard [PDF Base 14 Fonts](app3.html#base-14-fonts). In this
    case, *fontfile* **must not** be specified and *“Helvetica”* is used if this parameter
    is omitted, too.
  id: totrans-406
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用标准的[PDF Base 14字体](app3.html#base-14-fonts)之一。在这种情况下，如果未指定此参数，*fontfile* **不能**被指定，并且使用*“Helvetica”*。
- en: ''
  id: totrans-407
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-408
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Choose a font already in use by the page. Then specify its **reference** name
    prefixed with a slash “/”, see example below.
  id: totrans-409
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择页面中已经使用的字体。然后指定其以斜杠“/”为前缀的**参考**名称，如下例所示。
- en: ''
  id: totrans-410
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-411
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Specify a font file present on your system. In this case choose an arbitrary,
    but new name for this parameter (without “/” prefix).
  id: totrans-412
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定系统上存在的字体文件。在这种情况下，选择一个任意的但是新的参数名（不带“/”前缀）。
- en: ''
  id: totrans-413
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-414
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-415
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'If inserted text should re-use one of the page’s fonts, use its reference name
    appearing in [`Page.get_fonts()`](page.html#Page.get_fonts "Page.get_fonts") like
    so:'
  id: totrans-416
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果插入的文本应该重复使用页面的某个字体，请使用出现在[`Page.get_fonts()`](page.html#Page.get_fonts "Page.get_fonts")中的其参考名称，如下所示：
- en: ''
  id: totrans-417
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Suppose the font list has the item *[1024, 0, ‘Type1’, ‘NimbusMonL-Bold’, ‘R366’]*,
    then specify *fontname = “/R366”, fontfile = None* to use font *NimbusMonL-Bold*.
  id: totrans-418
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 假设字体列表中有项*[1024, 0, ‘Type1’, ‘NimbusMonL-Bold’, ‘R366’]*，则指定*fontname = “/R366”，
    fontfile = None*来使用字体*NimbusMonL-Bold*。
- en: '* * *'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**fontfile** (*str*)'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '**fontfile**（*str*）'
- en: File path of a font existing on your computer. If you specify *fontfile*, make
    sure you use a *fontname* **not occurring** in the above list. This new font will
    be embedded in the PDF upon *doc.save()*. Similar to new images, a font file will
    be embedded only once. A table of MD5 codes for the binary font contents is used
    to ensure this.
  id: totrans-421
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 您计算机上存在的字体文件路径。如果指定了`fontfile`，请确保使用上述列表中**不存在**的*fontname*。这个新字体将在*doc.save()*时嵌入PDF中。与新图像类似，字体文件只会被嵌入一次。使用二进制字体内容的MD5代码表来确保这一点。
- en: '* * *'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**set_simple** (*bool*)'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '**set_simple**（*bool*）'
- en: Fonts installed from files are installed as **Type0** fonts by default. If you
    want to use 1-byte characters only, set this to true. This setting cannot be reverted.
    Subsequent changes are ignored.
  id: totrans-424
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从文件安装的字体默认为**Type0**字体。如果只想使用1字节字符，请将此设置为true。此设置无法恢复。后续更改将被忽略。
- en: '* * *'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**fontsize** (*float*)'
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '**fontsize**（*float*）'
- en: 'Font size of text, see: [`fontsize`](glossary.html#fontsize "fontsize").'
  id: totrans-427
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 文本的字体大小，参见：[`fontsize`](glossary.html#fontsize "fontsize")。
- en: '* * *'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**dashes** (*str*)'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '**dashes**（*str*）'
- en: Causes lines to be drawn dashed. The general format is `"[n m] p"` of (up to)
    3 floats denoting pixel lengths. [`n`](colorspace.html#Colorspace.n "Colorspace.n")
    is the dash length, `m` (optional) is the subsequent gap length, and `p` (the
    “phase” - **required**, even if 0!) specifies how many pixels should be skipped
    before the dashing starts. If `m` is omitted, it defaults to [`n`](colorspace.html#Colorspace.n
    "Colorspace.n").
  id: totrans-430
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致绘制的线条为虚线。一般格式为`"[n m] p"`，其中最多有3个浮点数表示像素长度。[`n`](colorspace.html#Colorspace.n
    "Colorspace.n")是虚线的长度，`m`（可选）是随后的间隔长度，`p`（“相位” - **必需**，即使为0！）指定在虚线开始之前应跳过多少像素。如果省略`m`，则默认为[`n`](colorspace.html#Colorspace.n
    "Colorspace.n")。
- en: ''
  id: totrans-431
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A continuous line (no dashes) is drawn with `"[] 0"` or *None* or `""`. Examples:'
  id: totrans-432
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用`"[] 0"`或*None*或`""`绘制连续线条（无虚线）。示例：
- en: ''
  id: totrans-433
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Specifying `"[3 4] 0"` means dashes of 3 and gaps of 4 pixels following each
    other.
  id: totrans-434
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定`"[3 4] 0"`意味着3个像素长的虚线和4个像素长的间隔交替出现。
- en: ''
  id: totrans-435
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-436
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"[3 3] 0"` and `"[3] 0"` do the same thing.'
  id: totrans-437
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"[] 0"`和`"[3] 0"`做同样的事情。'
- en: ''
  id: totrans-438
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-439
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-440
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For (the rather complex) details on how to achieve sophisticated dashing effects,
    see [Adobe PDF References](app3.html#adobemanual), page 217.
  id: totrans-441
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 有关如何实现复杂的虚线效果的详细信息，请参阅[Adobe PDF参考手册](app3.html#adobemanual)，第217页。
- en: '* * *'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**color / fill** (*list, tuple*)'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '**color / fill** (*list, tuple*)'
- en: Stroke and fill colors can be specified as tuples or list of of floats from
    0 to 1\. These sequences must have a length of 1 (GRAY), 3 (RGB) or 4 (CMYK).
    For GRAY colorspace, a single float instead of the unwieldy *(float,)* or *[float]*
    is also accepted. Accept (default) or use `None` to not use the parameter.
  id: totrans-444
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 可以将描边和填充颜色指定为浮点数的元组或列表，范围从0到1。这些序列必须具有长度为1（灰度）、3（RGB）或4（CMYK）。对于灰度色彩空间，也可以接受单个浮点数而不是笨重的*(float,)*或*[float]*。接受（默认）或使用`None`来不使用该参数。
- en: ''
  id: totrans-445
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To simplify color specification, method *getColor()* in *pymupdf.utils* may
    be used to get predefined RGB color triples by name. It accepts a string as the
    name of the color and returns the corresponding triple. The method knows over
    540 color names – see section [Color Database](colors.html#colordatabase).
  id: totrans-446
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为了简化颜色的指定，可以使用*pymupdf.utils*中的*getColor()*方法通过名称获取预定义的RGB颜色三元组。它接受一个颜色名称的字符串，并返回相应的三元组。该方法知道超过540个颜色名称
    - 见章节[颜色数据库](colors.html#colordatabase)。
- en: ''
  id: totrans-447
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Please note that the term *color* usually means “stroke” color when used in
    conjunction with fill color.
  id: totrans-448
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，术语*color*通常在与填充颜色一起使用时指“描边”颜色。
- en: ''
  id: totrans-449
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If letting default a color parameter to `None`, then no resp. color selection
    command will be generated. If *fill* and *color* are both `None`, then the drawing
    will contain no color specification. But it will still be “stroked”, which causes
    PDF’s default color “black” be used by Adobe Acrobat and all other viewers.
  id: totrans-450
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果将颜色参数设为`None`，则不会生成相应的颜色选择命令。如果*fill*和*color*都是`None`，则绘图不包含颜色规范。但仍会进行“描边”，这将导致Adobe
    Acrobat和所有其他查看器使用PDF的默认颜色“黑色”。
- en: '* * *'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**width** (*float*)'
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: '**width** (*float*)'
- en: 'The stroke (“border”) width of the elements in a shape (if applicable). The
    default value is 1\. The values width, color and fill have the following relationship
    / dependency:'
  id: totrans-453
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 元素形状中的描边（“边框”）宽度（如果适用）。默认值为1。宽度、颜色和填充的关系/依赖如下：
- en: ''
  id: totrans-454
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If `fill=None` shape elements will always be drawn with a border - even if `color=None`
    (in which case black is taken) or `width=0` (in which case 1 is taken).
  id: totrans-455
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`fill=None`，则形状元素始终将带有边框 - 即使`color=None`（此时将使用黑色）或`width=0`（此时将使用1）。
- en: ''
  id: totrans-456
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-457
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Shapes without border can only be achieved if a fill color is specified (which
    may be white of course). To achieve this, specify `width=0`. In this case, the
    [`color`](textwriter.html#TextWriter.color "TextWriter.color") parameter is ignored.
  id: totrans-458
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅通过指定填充颜色（当然可以是白色）才能实现没有边框的形状。为此，请指定`width=0`。在这种情况下，将忽略[`color`](textwriter.html#TextWriter.color
    "TextWriter.color")参数。
- en: '* * *'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**stroke_opacity / fill_opacity** (*floats*)'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '**stroke_opacity / fill_opacity** (*floats*)'
- en: Both values are floats in range [0, 1]. Negative values or values > 1 will ignored
    (in most cases). Both set the transparency such that a value 0.5 corresponds to
    50% transparency, 0 means invisible and 1 means intransparent. For e.g. a rectangle
    the stroke opacity applies to its border and fill opacity to its interior.
  id: totrans-461
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 两个值都是范围在[0, 1]的浮点数。负值或大于1的值将被忽略（在大多数情况下）。两者设置透明度，使得数值0.5对应50%的透明度，0表示不可见，1表示不透明。例如，对于矩形，描边透明度适用于其边框，填充透明度适用于其内部。
- en: ''
  id: totrans-462
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'For text insertions ([`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")
    and [`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")),
    use *fill_opacity* for the text. At first sight this seems surprising, but it
    becomes obvious when you look further down to *render_mode*: *fill_opacity* applies
    to the yellow and *stroke_opacity* applies to the blue color.'
  id: totrans-463
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 对于文本插入（[`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")和[`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox"))，使用*fill_opacity*来设置文本的透明度。乍一看这似乎令人惊讶，但当您进一步查看*render_mode*时，这变得显而易见：*fill_opacity*适用于黄色，*stroke_opacity*适用于蓝色。
- en: '* * *'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**border_width** (*float*)'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: '**border_width**（*浮点数*）'
- en: Set the border width for text insertions. New in v1.14.9\. Relevant only if
    the render mode argument is used with a value greater zero.
  id: totrans-466
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 设置文本插入的边框宽度。在v1.14.9中新增。仅当使用渲染模式参数值大于零时相关。
- en: '* * *'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**render_mode** (*int*)'
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: '**渲染模式**（*整数*）'
- en: '*New in version 1.14.9:* Integer in `range(8)` which controls the text appearance
    ([`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text") and [`Shape.insert_textbox()`](#Shape.insert_textbox
    "Shape.insert_textbox")). See page 246 in [Adobe PDF References](app3.html#adobemanual).
    New in v1.14.9\. These methods now also differentiate between fill and stroke
    colors.'
  id: totrans-469
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*版本1.14.9中的新功能：*`range(8)`中的整数控制文本外观（[`Shape.insert_text()`](#Shape.insert_text
    "Shape.insert_text")和[`Shape.insert_textbox()`](#Shape.insert_textbox "Shape.insert_textbox")）。参见[Adobe
    PDF References](app3.html#adobemanual)第246页。在v1.14.9中新增功能。这些方法现在还区分填充和描边颜色。'
- en: ''
  id: totrans-470
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For default 0, only the text fill color is used to paint the text. For backward
    compatibility, using the *color* parameter instead also works.
  id: totrans-471
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于默认的0，只使用文本填充颜色来绘制文本。为了向后兼容，也可以使用*color*参数。
- en: ''
  id: totrans-472
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-473
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: For render mode 1, only the border of each glyph (i.e. text character) is drawn
    with a thickness as set in argument *border_width*. The color chosen in the *color*
    argument is taken for this, the *fill* parameter is ignored.
  id: totrans-474
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于渲染模式1，只绘制每个字形（即文本字符）的边框，其厚度由*border_width*参数设置。选定的*color*参数的颜色用于此操作，*fill*参数被忽略。
- en: ''
  id: totrans-475
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-476
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For render mode 2, the glyphs are filled and stroked, using both color parameters
    and the specified border width. You can use this value to simulate **bold text**
    without using another font: choose the same value for *fill* and *color* and an
    appropriate value for *border_width*.'
  id: totrans-477
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于渲染模式2，字形被填充并描边，使用颜色参数和指定的边框宽度。您可以使用此值模拟**粗体文本**而无需使用其他字体：选择相同的值作为*fill*和*color*，并为*border_width*选择适当的值。
- en: ''
  id: totrans-478
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-479
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For render mode 3, the glyphs are neither stroked nor filled: the text becomes
    invisible.'
  id: totrans-480
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于渲染模式3，字形既不描边也不填充：文本变得不可见。
- en: ''
  id: totrans-481
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-482
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-483
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The following examples use border_width=0.3, together with a fontsize of 15\.
    Stroke color is blue and fill color is some yellow.
  id: totrans-484
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 以下示例使用border_width=0.3，以及字体大小为15。描边颜色为蓝色，填充颜色为某种黄色。
- en: ''
  id: totrans-485
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![_images/img-rendermode.jpg](../Images/68afc67e63136e95b67c5e79fab5037b.png)'
  id: totrans-486
  prefs:
  - PREF_BQ
  type: TYPE_IMG
  zh: '![_images/img-rendermode.jpg](../Images/68afc67e63136e95b67c5e79fab5037b.png)'
- en: '* * *'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**overlay** (*bool*)'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**叠加**（*布尔值*）'
- en: Causes the item to appear in foreground (default) or background.
  id: totrans-489
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致项目出现在前景（默认）或背景中。
- en: '* * *'
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**morph** (*sequence*)'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '**变形**（*序列*）'
- en: Causes “morphing” of either a shape, created by the *draw*()* methods, or the
    text inserted by page methods *insert_textbox()* / *insert_text()*. If not *None*,
    it must be a pair *(fixpoint, matrix)*, where *fixpoint* is a [Point](point.html#point)
    and *matrix* is a [Matrix](matrix.html#matrix). The matrix can be anything except
    translations, i.e. *matrix.e == matrix.f == 0* must be true. The point is used
    as a fixed point for the matrix operation. For example, if *matrix* is a rotation
    or scaling, then *fixpoint* is its center. Similarly, if *matrix* is a left-right
    or up-down flip, then the mirroring axis will be the vertical, respectively horizontal
    line going through *fixpoint*, etc.
  id: totrans-492
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致了形状的“变形”，这些形状是由*draw*()*方法创建的，或者是由页面方法*insert_textbox()* / *insert_text()*插入的文本。如果不是*None*，它必须是一对*(fixpoint,
    matrix)*，其中*fixpoint*是[点](point.html#point)，*matrix*是[矩阵](matrix.html#matrix)。矩阵可以是除了平移以外的任何东西，即*matrix.e
    == matrix.f == 0*必须为真。该点被用作矩阵操作的固定点。例如，如果*matrix*是旋转或缩放，则*fixpoint*是其中心。同样地，如果*matrix*是左右或上下翻转，则镜像轴将分别通过*fixpoint*形成垂直或水平线等。
- en: ''
  id: totrans-493
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-494
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-495
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Several methods contain checks whether the to be inserted items will actually
    fit into the page (like [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text"),
    or [`Shape.draw_rect()`](#Shape.draw_rect "Shape.draw_rect")). For the result
    of a morphing operation there is however no such guaranty: this is entirely the
    programmer’s responsibility.'
  id: totrans-496
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 几种方法包含检查，用于确定要插入的项目是否实际适合页面（例如 [`Shape.insert_text()`](#Shape.insert_text "Shape.insert_text")
    或 [`Shape.draw_rect()`](#Shape.draw_rect "Shape.draw_rect")）。然而，对于变形操作的结果，没有这样的保证：这完全由程序员负责。
- en: '* * *'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**lineCap (deprecated: “roundCap”)** (*int*)'
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: '**lineCap（已弃用：“roundCap”）** (*整型*)'
- en: Controls the look of line ends. The default value 0 lets each line end at exactly
    the given coordinate in a sharp edge. A value of 1 adds a semi-circle to the ends,
    whose center is the end point and whose diameter is the line width. Value 2 adds
    a semi-square with an edge length of line width and a center of the line end.
  id: totrans-499
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 控制线端的外观。默认值 0 让每条线在给定坐标处具有尖锐的边缘。值为 1 会在端点添加一个半圆，其中心是端点，直径是线宽。值为 2 添加一个半方形，边长为线宽，中心是线端。
- en: ''
  id: totrans-500
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*Changed in version 1.14.15*'
  id: totrans-501
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*版本 1.14.15 中更改*'
- en: '* * *'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**lineJoin** (*int*)'
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
  zh: '**lineJoin** (*整型*)'
- en: '*New in version 1.14.15:* Controls the way how line connections look like.
    This may be either as a sharp edge (0), a rounded join (1), or a cut-off edge
    (2, “butt”).'
  id: totrans-504
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*版本 1.14.15 新特性：* 控制线连接的外观方式。可以是尖锐边缘（0）、圆角连接（1）或截断边缘（2，“butt”）。'
- en: '* * *'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '**closePath** (*bool*)'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: '**closePath** (*布尔型*)'
- en: Causes the end point of a drawing to be automatically connected with the starting
    point (by a straight line).
  id: totrans-507
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 导致绘图的端点自动与起始点连接（通过直线）。
- en: Do you have any feedback on this page?
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 对此页面有任何反馈意见吗？
- en: '* * *'
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不附带任何明示或暗示的担保。此软件按许可分发，并且未经授权不得复制、修改或分发。请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)获取许可信息，或联系美国旧金山
    CA 94129 Mesa Street 39 号 Suite 108A 的 Artifex Software Inc. 以获取更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖了所有版本直至 1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord 标志](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
