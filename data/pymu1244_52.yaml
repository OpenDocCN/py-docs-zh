- en: Functions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/functions.html](https://pymupdf.readthedocs.io/en/latest/functions.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/functions.html](https://pymupdf.readthedocs.io/en/latest/functions.html)
- en: The following are miscellaneous functions and attributes on a fairly low-level
    technical detail.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些技术细节相当低级的杂项函数和属性。
- en: Some functions provide detail access to PDF structures. Others are stripped-down,
    high performance versions of other functions which provide more information.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 某些功能提供详细访问 PDF 结构的方法。其他是精简版、高性能版的其他功能，提供更多信息。
- en: Yet others are handy, general-purpose utilities.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 其他一些是方便的、通用的工具。
- en: '| **Function** | **Short Description** |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| **函数** | **简要说明** |'
- en: '| --- | --- |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `Annot.apn_bbox` | PDF only: bbox of the appearance object |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `Annot.apn_bbox` | 仅适用于 PDF：外观对象的边界框 |'
- en: '| `Annot.apn_matrix` | PDF only: the matrix of the appearance object |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `Annot.apn_matrix` | 仅适用于 PDF：外观对象的矩阵 |'
- en: '| [`Page.is_wrapped`](#Page.is_wrapped "Page.is_wrapped") | check whether contents
    wrapping is present |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`Page.is_wrapped`](#Page.is_wrapped "Page.is_wrapped") | 检查是否存在内容换行 |'
- en: '| [`adobe_glyph_names()`](#adobe_glyph_names "adobe_glyph_names") | list of
    glyph names defined in **Adobe Glyph List** |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`adobe_glyph_names()`](#adobe_glyph_names "adobe_glyph_names") | **Adobe
    字形列表**中定义的字形名称列表 |'
- en: '| [`adobe_glyph_unicodes()`](#adobe_glyph_unicodes "adobe_glyph_unicodes")
    | list of unicodes defined in **Adobe Glyph List** |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`adobe_glyph_unicodes()`](#adobe_glyph_unicodes "adobe_glyph_unicodes")
    | **Adobe 字形列表**中定义的 Unicode 列表 |'
- en: '| [`Annot.clean_contents()`](#Annot.clean_contents "Annot.clean_contents")
    | PDF only: clean the annot’s [`contents`](glossary.html#contents "contents")
    object |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`Annot.clean_contents()`](#Annot.clean_contents "Annot.clean_contents")
    | 仅适用于 PDF：清除注释的 [`contents`](glossary.html#contents "contents") 对象 |'
- en: '| `Annot.set_apn_bbox()` | PDF only: set the bbox of the appearance object
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `Annot.set_apn_bbox()` | 仅适用于 PDF：设置外观对象的边界框 |'
- en: '| `Annot.set_apn_matrix()` | PDF only: set the matrix of the appearance object
    |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `Annot.set_apn_matrix()` | 仅适用于 PDF：设置外观对象的矩阵 |'
- en: '| [`ConversionHeader()`](#ConversionHeader "ConversionHeader") | return header
    string for *get_text* methods |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`ConversionHeader()`](#ConversionHeader "ConversionHeader") | *get_text*
    方法的返回头注字符串 |'
- en: '| [`ConversionTrailer()`](#ConversionTrailer "ConversionTrailer") | return
    trailer string for *get_text* methods |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`ConversionTrailer()`](#ConversionTrailer "ConversionTrailer") | *get_text*
    方法的返回尾注字符串 |'
- en: '| [`Document.del_xml_metadata()`](#Document.del_xml_metadata "Document.del_xml_metadata")
    | PDF only: remove XML metadata |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`Document.del_xml_metadata()`](#Document.del_xml_metadata "Document.del_xml_metadata")
    | 仅适用于 PDF：删除 XML 元数据 |'
- en: '| [`Document.get_char_widths()`](#Document.get_char_widths "Document.get_char_widths")
    | PDF only: return a list of glyph widths of a font |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`Document.get_char_widths()`](#Document.get_char_widths "Document.get_char_widths")
    | 仅适用于 PDF：返回字体的字形宽度列表 |'
- en: '| [`Document.get_new_xref()`](#Document.get_new_xref "Document.get_new_xref")
    | PDF only: create and return a new [`xref`](glossary.html#xref "xref") entry
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`Document.get_new_xref()`](#Document.get_new_xref "Document.get_new_xref")
    | 仅适用于 PDF：创建并返回新的 [`xref`](glossary.html#xref "xref") 条目 |'
- en: '| [`Document.is_stream()`](#Document.is_stream "Document.is_stream") | PDF
    only: check whether an [`xref`](glossary.html#xref "xref") is a stream object
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Document.is_stream()`](#Document.is_stream "Document.is_stream") | 仅适用于
    PDF：检查 [`xref`](glossary.html#xref "xref") 是否为流对象 |'
- en: '| [`Document.xml_metadata_xref()`](#Document.xml_metadata_xref "Document.xml_metadata_xref")
    | PDF only: return XML metadata [`xref`](glossary.html#xref "xref") number |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`Document.xml_metadata_xref()`](#Document.xml_metadata_xref "Document.xml_metadata_xref")
    | 仅适用于 PDF：返回 XML 元数据的 [`xref`](glossary.html#xref "xref") 编号 |'
- en: '| [`Document.xref_length()`](#Document.xref_length "Document.xref_length")
    | PDF only: return length of [`xref`](glossary.html#xref "xref") table |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`Document.xref_length()`](#Document.xref_length "Document.xref_length")
    | 仅适用于 PDF：返回 [`xref`](glossary.html#xref "xref") 表的长度 |'
- en: '| [`EMPTY_IRECT()`](#EMPTY_IRECT "EMPTY_IRECT") | return the (standard) empty
    / invalid rectangle |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`EMPTY_IRECT()`](#EMPTY_IRECT "EMPTY_IRECT") | 返回（标准）空/无效矩形 |'
- en: '| [`EMPTY_QUAD()`](#EMPTY_QUAD "EMPTY_QUAD") | return the (standard) empty
    / invalid quad |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`EMPTY_QUAD()`](#EMPTY_QUAD "EMPTY_QUAD") | 返回（标准）空/无效四边形 |'
- en: '| [`EMPTY_RECT()`](#EMPTY_RECT "EMPTY_RECT") | return the (standard) empty
    / invalid rectangle |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`EMPTY_RECT()`](#EMPTY_RECT "EMPTY_RECT") | 返回（标准）空/无效矩形 |'
- en: '| [`get_pdf_now()`](#get_pdf_now "get_pdf_now") | return the current timestamp
    in PDF format |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`get_pdf_now()`](#get_pdf_now "get_pdf_now") | 返回当前时间戳的 PDF 格式 |'
- en: '| [`get_pdf_str()`](#get_pdf_str "get_pdf_str") | return PDF-compatible string
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| [`get_pdf_str()`](#get_pdf_str "get_pdf_str") | 返回 PDF 兼容字符串 |'
- en: '| [`get_text_length()`](#get_text_length "get_text_length") | return string
    length for a given font & [`fontsize`](glossary.html#fontsize "fontsize") |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '[`get_text_length()`](#get_text_length "get_text_length") | 返回给定字体和[`fontsize`](glossary.html#fontsize
    "fontsize")的字符串长度 |'
- en: '| [`glyph_name_to_unicode()`](#glyph_name_to_unicode "glyph_name_to_unicode")
    | return unicode from a glyph name |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '[`glyph_name_to_unicode()`](#glyph_name_to_unicode "glyph_name_to_unicode")
    | 从字形名称返回 Unicode |'
- en: '| [`image_profile()`](#image_profile "image_profile") | return a dictionary
    of basic image properties |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '[`image_profile()`](#image_profile "image_profile") | 返回基本图像属性的字典 |'
- en: '| [`INFINITE_IRECT()`](#INFINITE_IRECT "INFINITE_IRECT") | return the (only
    existing) infinite rectangle |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '[`INFINITE_IRECT()`](#INFINITE_IRECT "INFINITE_IRECT") | 返回（唯一存在的）无限矩形 |'
- en: '| [`INFINITE_QUAD()`](#INFINITE_QUAD "INFINITE_QUAD") | return the (only existing)
    infinite quad |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '[`INFINITE_QUAD()`](#INFINITE_QUAD "INFINITE_QUAD") | 返回（唯一存在的）无限四边形 |'
- en: '| [`INFINITE_RECT()`](#INFINITE_RECT "INFINITE_RECT") | return the (only existing)
    infinite rectangle |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '[`INFINITE_RECT()`](#INFINITE_RECT "INFINITE_RECT") | 返回（唯一存在的）无限矩形 |'
- en: '| [`make_table()`](#make_table "make_table") | split rectangle in sub-rectangles
    |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '[`make_table()`](#make_table "make_table") | 将矩形分割为子矩形 |'
- en: '| [`Page.clean_contents()`](#Page.clean_contents "Page.clean_contents") | PDF
    only: clean the page’s [`contents`](glossary.html#contents "contents") objects
    |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '[`Page.clean_contents()`](#Page.clean_contents "Page.clean_contents") | 仅限
    PDF：清理页面的[`contents`](glossary.html#contents "contents")对象 |'
- en: '| [`Page.get_bboxlog()`](#Page.get_bboxlog "Page.get_bboxlog") | list of rectangles
    that envelop text, drawing or image objects |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '[`Page.get_bboxlog()`](#Page.get_bboxlog "Page.get_bboxlog") | 包围文本、绘图或图像对象的矩形列表
    |'
- en: '| [`Page.get_contents()`](#Page.get_contents "Page.get_contents") | PDF only:
    return a list of content [`xref`](glossary.html#xref "xref") numbers |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '[`Page.get_contents()`](#Page.get_contents "Page.get_contents") | 仅限 PDF：返回内容[`xref`](glossary.html#xref
    "xref")号的列表 |'
- en: '| [`Page.get_displaylist()`](#Page.get_displaylist "Page.get_displaylist")
    | create the page’s display list |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '[`Page.get_displaylist()`](#Page.get_displaylist "Page.get_displaylist") |
    创建页面的显示列表 |'
- en: '| [`Page.get_text_blocks()`](#Page.get_text_blocks "Page.get_text_blocks")
    | extract text blocks as a Python list |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '[`Page.get_text_blocks()`](#Page.get_text_blocks "Page.get_text_blocks") |
    提取文本块为 Python 列表 |'
- en: '| [`Page.get_text_words()`](#Page.get_text_words "Page.get_text_words") | extract
    text words as a Python list |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '[`Page.get_text_words()`](#Page.get_text_words "Page.get_text_words") | 提取文本单词为
    Python 列表 |'
- en: '| [`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace") | low-level
    text information |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '[`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace") | 低级文本信息
    |'
- en: '| [`Page.read_contents()`](#Page.read_contents "Page.read_contents") | PDF
    only: get complete, concatenated /Contents source |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '[`Page.read_contents()`](#Page.read_contents "Page.read_contents") | 仅限 PDF：获取完整的、连接的/Contents
    源 |'
- en: '| [`Page.run()`](#Page.run "Page.run") | run a page through a device |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '[`Page.run()`](#Page.run "Page.run") | 通过设备运行页面 |'
- en: '| [`Page.set_contents()`](#Page.set_contents "Page.set_contents") | PDF only:
    set page’s [`contents`](glossary.html#contents "contents") to some [`xref`](glossary.html#xref
    "xref") |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '[`Page.set_contents()`](#Page.set_contents "Page.set_contents") | 仅限 PDF：设置页面的[`contents`](glossary.html#contents
    "contents")为某些[`xref`](glossary.html#xref "xref") |'
- en: '| [`Page.wrap_contents()`](#Page.wrap_contents "Page.wrap_contents") | wrap
    contents with stacking commands |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '[`Page.wrap_contents()`](#Page.wrap_contents "Page.wrap_contents") | 用堆叠命令包装内容
    |'
- en: '| [`css_for_pymupdf_font()`](#css_for_pymupdf_font "css_for_pymupdf_font")
    | create CSS source for a font in package pymupdf_fonts |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '[`css_for_pymupdf_font()`](#css_for_pymupdf_font "css_for_pymupdf_font") |
    为包 pymupdf_fonts 中的字体创建 CSS 源 |'
- en: '| [`paper_rect()`](#paper_rect "paper_rect") | return rectangle for a known
    paper format |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '[`paper_rect()`](#paper_rect "paper_rect") | 返回已知纸张格式的矩形 |'
- en: '| [`paper_size()`](#paper_size "paper_size") | return width, height for a known
    paper format |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '[`paper_size()`](#paper_size "paper_size") | 返回已知纸张格式的宽度、高度 |'
- en: '| [`paper_sizes()`](#paper_sizes "paper_sizes") | dictionary of pre-defined
    paper formats |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '[`paper_sizes()`](#paper_sizes "paper_sizes") | 预定义纸张尺寸的字典 |'
- en: '| [`planish_line()`](#planish_line "planish_line") | matrix to map a line to
    the x-axis |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '[`planish_line()`](#planish_line "planish_line") | 将一条线映射到 x 轴的矩阵 |'
- en: '| [`recover_char_quad()`](#recover_char_quad "recover_char_quad") | compute
    the quad of a char (“rawdict”) |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '[`recover_char_quad()`](#recover_char_quad "recover_char_quad") | 计算字符（"rawdict"）的四边形
    |'
- en: '| [`recover_line_quad()`](#recover_line_quad "recover_line_quad") | compute
    the quad of a subset of line spans |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '[`recover_line_quad()`](#recover_line_quad "recover_line_quad") | 计算线段子集的四边形
    |'
- en: '| [`recover_quad()`](#recover_quad "recover_quad") | compute the quad of a
    span (“dict”, “rawdict”) |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '[`recover_quad()`](#recover_quad "recover_quad") | 计算跨度（"dict"、"rawdict"）的四边形
    |'
- en: '| [`recover_span_quad()`](#recover_span_quad "recover_span_quad") | compute
    the quad of a subset of span characters |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`recover_span_quad()`](#recover_span_quad "recover_span_quad") | 计算子集 span
    字符的四元组 |'
- en: '| [`sRGB_to_pdf()`](#sRGB_to_pdf "sRGB_to_pdf") | return PDF RGB color tuple
    from an sRGB integer |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`sRGB_to_pdf()`](#sRGB_to_pdf "sRGB_to_pdf") | 从 sRGB 整数返回 PDF RGB 颜色三元组
    |'
- en: '| [`sRGB_to_rgb()`](#sRGB_to_rgb "sRGB_to_rgb") | return (R, G, B) color tuple
    from an sRGB integer |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`sRGB_to_rgb()`](#sRGB_to_rgb "sRGB_to_rgb") | 从 sRGB 整数返回 (R, G, B) 颜色三元组
    |'
- en: '| [`unicode_to_glyph_name()`](#unicode_to_glyph_name "unicode_to_glyph_name")
    | return glyph name from a unicode |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| [`unicode_to_glyph_name()`](#unicode_to_glyph_name "unicode_to_glyph_name")
    | 返回 unicode 的字形名称 |'
- en: '| [`get_tessdata()`](#get_tessdata "get_tessdata") | locates the language support
    of the Tesseract-OCR installation |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| [`get_tessdata()`](#get_tessdata "get_tessdata") | 定位 Tesseract-OCR 安装的语言支持
    |'
- en: '| [`fitz_fontdescriptors`](#fitz_fontdescriptors "fitz_fontdescriptors") |
    dictionary of available supplement fonts |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| [`fitz_fontdescriptors`](#fitz_fontdescriptors "fitz_fontdescriptors") |
    可用补充字体的字典 |'
- en: '| [`TESSDATA_PREFIX`](#TESSDATA_PREFIX "TESSDATA_PREFIX") | a copy of `os.environ["TESSDATA_PREFIX"]`
    |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| [`TESSDATA_PREFIX`](#TESSDATA_PREFIX "TESSDATA_PREFIX") | `os.environ["TESSDATA_PREFIX"]`
    的副本 |'
- en: '| [`pdfcolor`](#pdfcolor "pdfcolor") | dictionary of almost 500 RGB colors
    in PDF format. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| [`pdfcolor`](#pdfcolor "pdfcolor") | 包含近 500 种 PDF 格式 RGB 颜色的字典。 |'
- en: '[PRE0]'
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE0]'
- en: ''
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convenience function to return width and height of a known paper format code.
    These values are given in pixels for the standard resolution 72 pixels = 1 inch.
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 方便函数，返回已知纸张格式代码的宽度和高度。这些值以像素为单位，标准分辨率为 72 像素 = 1 英寸。
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Currently defined formats include **‘A0’** through **‘A10’**, **‘B0’** through
    **‘B10’**, **‘C0’** through **‘C10’**, **‘Card-4x6’**, **‘Card-5x7’**, **‘Commercial’**,
    **‘Executive’**, **‘Invoice’**, **‘Ledger’**, **‘Legal’**, **‘Legal-13’**, **‘Letter’**,
    **‘Monarch’** and **‘Tabloid-Extra’**, each in either portrait or landscape format.
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当前定义的格式包括 **‘A0’** 至 **‘A10’**，**‘B0’** 至 **‘B10’**，**‘C0’** 至 **‘C10’**，**‘Card-4x6’**，**‘Card-5x7’**，**‘Commercial’**，**‘Executive’**，**‘Invoice’**，**‘Ledger’**，**‘Legal’**，**‘Legal-13’**，**‘Letter’**，**‘Monarch’**
    和 **‘Tabloid-Extra’**，每种都可以是纵向或横向。
- en: ''
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A format name must be supplied as a string (case **in** sensitive), optionally
    suffixed with “-L” (landscape) or “-P” (portrait). No suffix defaults to portrait.
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 必须提供作为字符串的格式名称（大小写 **不** 敏感），可选后缀为 “-L”（横向）或 “-P”（纵向）。无后缀默认为纵向。
- en: ''
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**s** (*str*) – any format name from above in upper or lower case, like *“A4”*
    or *“letter-l”*.'
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**s** (*str*) – 大小写不敏感的上述任何格式名称，如 *“A4”* 或 *“letter-l”*。'
- en: ''
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: tuple
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 元组
- en: ''
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*(width, height)* of the paper format. For an unknown format *(-1, -1)* is
    returned. Examples: *pymupdf.paper_size(“A4”)* returns *(595, 842)* and *pymupdf.paper_size(“letter-l”)*
    delivers *(792, 612)*.'
  id: totrans-80
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*(宽度, 高度)* 的纸张格式。对于未知格式，返回 *(-1, -1)*。例如：*pymupdf.paper_size(“A4”)* 返回 *(595,
    842)*，*pymupdf.paper_size(“letter-l”)* 返回 *(792, 612)*。'
- en: '* * *'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE1]'
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE1]'
- en: ''
  id: totrans-83
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convenience function to return a [Rect](rect.html#rect) for a known paper format.
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 方便函数，返回已知纸张格式的 [矩形](rect.html#rect)。
- en: ''
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-86
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-87
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**s** (*str*) – any format name supported by [`paper_size()`](#paper_size "paper_size").'
  id: totrans-88
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**s** (*str*) – 由 [`paper_size()`](#paper_size "paper_size") 支持的任何格式名称。'
- en: ''
  id: totrans-89
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Rect](rect.html#rect)'
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[矩形](rect.html#rect)'
- en: ''
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-95
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*pymupdf.Rect(0, 0, width, height)* with *width, height=pymupdf.paper_size(s)*.'
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*pymupdf.Rect(0, 0, 宽度, 高度)*，其中 *宽度, 高度=pymupdf.paper_size(s)*。'
- en: ''
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '* * *'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE3]'
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE3]'
- en: ''
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.17.4*'
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*v1.17.4 新增*'
- en: ''
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convenience function returning a PDF color triple (red, green, blue) for a given
    sRGB color integer as it occurs in [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text") dictionaries “dict” and “rawdict”.
  id: totrans-104
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 方便函数，为给定的 sRGB 颜色整数返回 PDF 颜色三元组 (红, 绿, 蓝)，如 [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text") 中的字典 “dict” 和 “rawdict”。
- en: ''
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**srgb** (*int*) – an integer of format RRGGBB, where each color component
    is an integer in range(255).'
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**srgb** (*int*) – 格式为 RRGGBB 的整数，其中每个颜色分量都是范围(255)内的整数。'
- en: ''
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: a tuple (red, green, blue) with float items in interval *0 <= item <= 1* representing
    the same color. Example `sRGB_to_pdf(0xff0000) = (1, 0, 0)` (red).
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个元组 (红, 绿, 蓝)，其中每个项为浮点数，范围在 *0 <= item <= 1*，表示相同的颜色。例如 `sRGB_to_pdf(0xff0000)
    = (1, 0, 0)` (红色)。
- en: '* * *'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE4]'
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE4]'
- en: ''
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.17.4*'
  id: totrans-116
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*v1.17.4 新增*'
- en: ''
  id: totrans-117
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convenience function returning a color (red, green, blue) for a given *sRGB*
    color integer.
  id: totrans-118
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 方便函数，为给定的 *sRGB* 颜色整数返回颜色 (红, 绿, 蓝)。
- en: ''
  id: totrans-119
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-120
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-121
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**srgb** (*int*) – an integer of format RRGGBB, where each color component
    is an integer in range(255).'
  id: totrans-122
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**srgb** (*int*) – 格式为 RRGGBB 的整数，其中每个颜色分量都是范围(255)内的整数。'
- en: ''
  id: totrans-123
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-124
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-125
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: a tuple (red, green, blue) with integer items in `range(256)` representing the
    same color. Example `sRGB_to_pdf(0xff0000) = (255, 0, 0)` (red).
  id: totrans-126
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个由整数项目组成的元组（红，绿，蓝），表示相同的颜色，范围为`range(256)`。示例`sRGB_to_pdf(0xff0000) = (255,
    0, 0)`（红色）。
- en: '* * *'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE5]'
  id: totrans-128
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE5]'
- en: ''
  id: totrans-129
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.18.0*'
  id: totrans-130
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*新功能在v1.18.0中*'
- en: ''
  id: totrans-131
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the unicode number of a glyph name based on the **Adobe Glyph List**.
  id: totrans-132
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 根据**Adobe Glyph List**返回字形名称的Unicode编号。
- en: ''
  id: totrans-133
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-134
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-135
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**name** (*str*) – the name of some glyph. The function is based on the [Adobe
    Glyph List](https://github.com/adobe-type-tools/agl-aglfn/blob/master/glyphlist.txt).'
  id: totrans-136
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**name** (*str*) – 字形的名称。该函数基于[Adobe Glyph List](https://github.com/adobe-type-tools/agl-aglfn/blob/master/glyphlist.txt)。'
- en: ''
  id: totrans-137
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-138
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-139
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: int
  id: totrans-140
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 整数
- en: ''
  id: totrans-141
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-142
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-143
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the unicode. Invalid *name* entries return `0xfffd (65533)`.
  id: totrans-144
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Unicode。无效的*name*条目返回`0xfffd (65533)`。
- en: ''
  id: totrans-145
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-146
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-147
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A similar functionality is provided by package [fontTools](https://pypi.org/project/fonttools/)
    in its *agl* sub-package.
  id: totrans-148
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包[fontTools](https://pypi.org/project/fonttools/)的*agl*子包提供了类似的功能。
- en: '* * *'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE6]'
  id: totrans-150
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE6]'
- en: ''
  id: totrans-151
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.18.0*'
  id: totrans-152
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*新功能在v1.18.0中*'
- en: ''
  id: totrans-153
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the glyph name of a unicode number, based on the **Adobe Glyph List**.
  id: totrans-154
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 根据**Adobe Glyph List**返回Unicode编号的字形名称。
- en: ''
  id: totrans-155
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-156
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-157
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**ch** (*int*) –'
  id: totrans-158
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**ch** (*int*) –'
- en: ''
  id: totrans-159
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the unicode given by e.g. `ord("ß")`. The function is based on the [Adobe Glyph
    List](https://github.com/adobe-type-tools/agl-aglfn/blob/master/glyphlist.txt).
  id: totrans-160
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 由例如`ord("ß")`给出的Unicode。该函数基于[Adobe Glyph List](https://github.com/adobe-type-tools/agl-aglfn/blob/master/glyphlist.txt)。
- en: ''
  id: totrans-161
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-162
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-163
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: str
  id: totrans-164
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字符串
- en: ''
  id: totrans-165
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-166
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-167
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the glyph name. E.g. `pymupdf.unicode_to_glyph_name(ord("Ä"))` returns `'Adieresis'`.
  id: totrans-168
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字形名称。例如，`pymupdf.unicode_to_glyph_name(ord("Ä"))` 返回 `'Adieresis'`。
- en: ''
  id: totrans-169
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-170
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-171
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A similar functionality is provided by package [fontTools](https://pypi.org/project/fonttools/):
    in its *agl* sub-package.'
  id: totrans-172
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包[fontTools](https://pypi.org/project/fonttools/)的*agl*子包提供了类似的功能。
- en: '* * *'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE7]'
  id: totrans-174
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE7]'
- en: ''
  id: totrans-175
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.18.0*'
  id: totrans-176
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*新功能在v1.18.0中*'
- en: ''
  id: totrans-177
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return a list of glyph names defined in the **Adobe Glyph List**.
  id: totrans-178
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回在**Adobe Glyph List**中定义的字形名称列表。
- en: ''
  id: totrans-179
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-180
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-181
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list
  id: totrans-182
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 列表
- en: ''
  id: totrans-183
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-184
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-185
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list of strings.
  id: totrans-186
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字符串列表。
- en: ''
  id: totrans-187
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-188
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-189
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A similar functionality is provided by package [fontTools](https://pypi.org/project/fonttools/)
    in its *agl* sub-package.
  id: totrans-190
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包[fontTools](https://pypi.org/project/fonttools/)的*agl*子包提供了类似的功能。
- en: '* * *'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE8]'
  id: totrans-192
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE8]'
- en: ''
  id: totrans-193
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.18.0*'
  id: totrans-194
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*新功能在v1.18.0中*'
- en: ''
  id: totrans-195
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return a list of unicodes for there exists a glyph name in the **Adobe Glyph
    List**.
  id: totrans-196
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回一个Unicode列表，以便存在于**Adobe Glyph List**中的字形名称。
- en: ''
  id: totrans-197
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-198
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-199
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list
  id: totrans-200
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 列表
- en: ''
  id: totrans-201
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-202
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-203
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list of integers.
  id: totrans-204
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 整数列表。
- en: ''
  id: totrans-205
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-206
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-207
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A similar functionality is provided by package [fontTools](https://pypi.org/project/fonttools/)
    in its *agl* sub-package.
  id: totrans-208
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包[fontTools](https://pypi.org/project/fonttools/)的*agl*子包提供了类似的功能。
- en: '* * *'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE9]'
  id: totrans-210
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE9]'
- en: ''
  id: totrans-211
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.21.0*'
  id: totrans-212
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*新功能在v1.21.0中*'
- en: ''
  id: totrans-213
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Utility function for use with “Story” applications.**'
  id: totrans-214
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**与“Story”应用程序一起使用的实用函数。**'
- en: ''
  id: totrans-215
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Create CSS `@font-face` items for the given fontcode in pymupdf-fonts. Creates
    a CSS font-family for all fonts starting with string “fontcode”.
  id: totrans-216
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为pymupdf-fonts中给定的字体代码创建CSS `@font-face` 项。为所有以字符串“fontcode”开头的字体创建CSS字体族。
- en: ''
  id: totrans-217
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The font naming convention in package pymupdf-fonts is “fontcode<sf>”, where
    the suffix “sf” is one of “” (empty), “it”/”i”, “bo”/”b” or “bi”. These suffixes
    thus represent the regular, italic, bold or bold-italic variants of that font.
  id: totrans-218
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包pymupdf-fonts中的字体命名约定是“fontcode<sf>”，其中后缀“sf”是“”（空），“it”/“i”，“bo”/“b”或“bi”之一。因此，这些后缀代表该字体的常规、斜体、粗体或粗斜体变体。
- en: ''
  id: totrans-219
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For example, font code “notos” refers to fonts
  id: totrans-220
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 例如，字体代码“notos”指的是字体
- en: ''
  id: totrans-221
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: “notos” - “Noto Sans Regular”
  id: totrans-222
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: “notos” - “Noto Sans Regular”
- en: ''
  id: totrans-223
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-224
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “notosit” - “Noto Sans Italic”
  id: totrans-225
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: “notosit” - “Noto Sans Italic”
- en: ''
  id: totrans-226
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-227
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “notosbo” - “Noto Sans Bold”
  id: totrans-228
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: “notosbo” - “Noto Sans Bold”
- en: ''
  id: totrans-229
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-230
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: “notosbi” - “Noto Sans Bold Italic”
  id: totrans-231
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: “notosbi” - “Noto Sans Bold Italic”
- en: ''
  id: totrans-232
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-233
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-234
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The function creates (up to) four CSS `@font-face` definitions and collectively
    assigns the `font-family` name “notos” to them (or the “name” value if provided).
    Associated font buffers are placed / added to the provided archive.
  id: totrans-235
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 该函数创建（最多）四个CSS `@font-face` 定义，并将“notos”字体族名称（如果提供了“name”则为其值）分配给它们。相关字体缓冲区被放置/添加到提供的存档中。
- en: ''
  id: totrans-236
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To use the font in the Python API for [Story](story-class.html#story), execute
    `.set_font(fontcode)` (or “name” if given). The correct font weight or style will
    automatically be selected as required.
  id: totrans-237
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要在Python API中使用字体对[Story](story-class.html#story)进行设置，执行`.set_font(fontcode)`（或者如果提供了“name”则为其名称）。根据需要自动选择正确的字体重量或样式。
- en: ''
  id: totrans-238
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For example to replace the “sans-serif” HTML standard (i.e. Helvetica) with
    the above “notos”, execute the following. Whenever “sans-serif” is used (whether
    explicitly or implicitly), the Noto Sans fonts will be selected.
  id: totrans-239
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 例如，要用上述“notos”替换“sans-serif”HTML标准（即Helvetica），执行以下操作。无论是显式还是隐式使用“sans-serif”，Noto
    Sans字体都将被选中。
- en: ''
  id: totrans-240
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`CSS = pymupdf.css_for_pymupdf_font("notos", name="sans-serif", archive=...)`'
  id: totrans-241
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`CSS = pymupdf.css_for_pymupdf_font("notos", name="sans-serif", archive=...)`'
- en: ''
  id: totrans-242
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Expects and returns the CSS source, with the new CSS definitions appended.
  id: totrans-243
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 期望并返回包含新的 CSS 定义的 CSS 源码。
- en: ''
  id: totrans-244
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-245
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-246
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**fontcode** (*str*) – one of the font codes present in package [pymupdf-fonts](https://pypi.org/project/pymupdf-fonts/)
    (usually) representing the regular version of the font family.'
  id: totrans-247
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fontcode** (*str*) – 在包 [pymupdf-fonts](https://pypi.org/project/pymupdf-fonts/)
    中的字体代码之一（通常）表示字体系列的常规版本。'
- en: ''
  id: totrans-248
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-249
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**CSS** (*str*) – any already existing CSS source, or `None`. The function
    will append its new definitions to this. This is the string that **must be used**
    as `user_css` when creating the [Story](story-class.html#story).'
  id: totrans-250
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CSS** (*str*) – 任何已存在的 CSS 源码，或 `None`。该函数将其新定义附加到此处。这是在创建 [Story](story-class.html#story)
    时**必须使用**的 `user_css` 字符串。'
- en: ''
  id: totrans-251
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-252
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**archive** – [Archive](archive-class.html#archive), **mandatory**. All font
    binaries (i.e. up to four) found for “fontcode” will be added to the archive.
    This is the archive that **must be used** as [Archive](archive-class.html#archive)
    when creating the [Story](story-class.html#story).'
  id: totrans-253
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**archive** – [Archive](archive-class.html#archive)，**必须**。所有“fontcode”找到的字体二进制文件（最多四个）将被添加到存档中。这是在创建
    [Story](story-class.html#story) 时必须使用的 [Archive](archive-class.html#archive)。'
- en: ''
  id: totrans-254
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-255
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**name** (*str*) – the name under which the “fontcode” fonts should be found.
    If omitted, “fontcode” will be used.'
  id: totrans-256
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**name** (*str*) – “fontcode”字体应被找到的名称。如果省略，将使用“fontcode”。'
- en: ''
  id: totrans-257
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-258
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-259
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-260
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-261
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: str
  id: totrans-262
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: str
- en: ''
  id: totrans-263
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-264
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-265
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Modified CSS, with appended `@font-face` statements for each font variant of
    fontcode. Fontbuffers associated with “fontcode” will have been added to ‘archive’.
    The function will automatically find up to 4 font variants. All pymupdf-fonts
    (that are no special purpose like math or music, etc.) have regular, bold, italic
    and bold-italic variants. To see currently available font codes check `pymupdf.fitz_fontdescriptors.keys()`.
    This will show something like `dict_keys(['cascadia', 'cascadiai', 'cascadiab',
    'cascadiabi', 'figbo', 'figo', 'figbi', 'figit', 'fimbo', 'fimo', 'spacembo',
    'spacembi', 'spacemit', 'spacemo', 'math', 'music', 'symbol1', 'symbol2', 'notosbo',
    'notosbi', 'notosit', 'notos', 'ubuntu', 'ubuntubo', 'ubuntubi', 'ubuntuit', 'ubuntm',
    'ubuntmbo', 'ubuntmbi', 'ubuntmit'])`.
  id: totrans-266
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 修改后的 CSS，其中包含每个字体变体的附加 `@font-face` 语句。与“fontcode”相关联的字体缓存将被添加到“archive”中。该函数将自动查找最多4个字体变体。所有
    pymupdf 字体（除数学或音乐等特殊用途外）都具有常规、粗体、斜体和粗斜体变体。要查看当前可用的字体代码，请检查 `pymupdf.fitz_fontdescriptors.keys()`。这将显示类似于
    `dict_keys(['cascadia', 'cascadiai', 'cascadiab', 'cascadiabi', 'figbo', 'figo',
    'figbi', 'figit', 'fimbo', 'fimo', 'spacembo', 'spacembi', 'spacemit', 'spacemo',
    'math', 'music', 'symbol1', 'symbol2', 'notosbo', 'notosbi', 'notosit', 'notos',
    'ubuntu', 'ubuntubo', 'ubuntubi', 'ubuntuit', 'ubuntm', 'ubuntmbo', 'ubuntmbi',
    'ubuntmit'])`。
- en: ''
  id: totrans-267
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here is a complete snippet for using the “Noto Sans” font instead of “Helvetica”:'
  id: totrans-268
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是使用“Noto Sans”字体替代“Helvetica”的完整代码片段：
- en: ''
  id: totrans-269
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-270
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '* * *'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE11]'
  id: totrans-272
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE11]'
- en: ''
  id: totrans-273
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in v1.17.4*'
  id: totrans-274
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*新版本为v1.17.4*'
- en: ''
  id: totrans-275
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convenience function to split a rectangle into sub-rectangles of equal size.
    Returns a list of `rows` lists, each containing `cols` [Rect](rect.html#rect)
    items. Each sub-rectangle can then be addressed by its row and column index.
  id: totrans-276
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 方便函数，将矩形分割为相等大小的子矩形。返回一个包含 `rows` 列表的列表，每个列表包含 `cols` 个 [Rect](rect.html#rect)
    项。然后可以通过其行和列索引访问每个子矩形。
- en: ''
  id: totrans-277
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-278
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-279
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**rect** (*rect_like*) – the rectangle to split.'
  id: totrans-280
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rect** (*rect_like*) – 要分割的矩形。'
- en: ''
  id: totrans-281
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-282
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**cols** (*int*) – the desired number of columns.'
  id: totrans-283
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cols** (*int*) – 所需的列数。'
- en: ''
  id: totrans-284
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-285
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**rows** (*int*) – the desired number of rows.'
  id: totrans-286
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**rows** (*int*) – 所需的行数。'
- en: ''
  id: totrans-287
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-288
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-289
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-290
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-291
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'a list of [Rect](rect.html#rect) objects of equal size, whose union equals
    *rect*. Here is the layout of a 3x4 table created by `cell = pymupdf.make_table(rect,
    cols=4, rows=3)`:'
  id: totrans-292
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个包含等大小的 [Rect](rect.html#rect) 对象列表，其并集等于 *rect*。以下是由 `cell = pymupdf.make_table(rect,
    cols=4, rows=3)` 创建的3x4表格的布局：
- en: ''
  id: totrans-293
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[![_images/img-make-table.jpg](../Images/6bf1bfa810af2800868eb3ec5cac8b5a.png)](_images/img-make-table.jpg)'
  id: totrans-294
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[![_images/img-make-table.jpg](../Images/6bf1bfa810af2800868eb3ec5cac8b5a.png)](_images/img-make-table.jpg)'
- en: '* * *'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE12]'
  id: totrans-296
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE12]'
- en: ''
  id: totrans-297
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in version 1.16.2)*
  id: totrans-298
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新版本为1.16.2。
- en: ''
  id: totrans-299
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-300
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-301
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return a matrix which maps the line from p1 to p2 to the x-axis such that p1
    will become (0,0) and p2 a point with the same distance to (0,0).
  id: totrans-302
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回一个映射从 p1 到 p2 的线到 x 轴的矩阵，使得 p1 变为 (0,0)，p2 成为距离 (0,0) 相同距离的点。
- en: ''
  id: totrans-303
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-304
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-305
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**p1** (*point_like*) – starting point of the line.'
  id: totrans-306
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p1** (*point_like*) – 线的起点。'
- en: ''
  id: totrans-307
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-308
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**p2** (*point_like*) – end point of the line.'
  id: totrans-309
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**p2** (*point_like*) – 线的终点。'
- en: ''
  id: totrans-310
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-311
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-312
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-313
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-314
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Matrix](matrix.html#matrix)'
  id: totrans-315
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[Matrix](matrix.html#matrix)'
- en: ''
  id: totrans-316
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-317
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-318
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'a matrix which combines a rotation and a translation:'
  id: totrans-319
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个结合了旋转和平移的矩阵：
- en: ''
  id: totrans-320
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-321
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE13]'
- en: ''
  id: totrans-322
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[![_images/img-planish.png](../Images/296562958c4e2200851f587535f49465.png)](_images/img-planish.png)'
  id: totrans-323
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[![_images/img-planish.png](../Images/296562958c4e2200851f587535f49465.png)](_images/img-planish.png)'
- en: '* * *'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE14]'
  id: totrans-325
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE14]'
- en: ''
  id: totrans-326
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A dictionary of pre-defines paper formats. Used as basis for [`paper_size()`](#paper_size
    "paper_size").
  id: totrans-327
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 预定义纸张格式的字典。用作 [`paper_size()`](#paper_size "paper_size") 的基础。
- en: '* * *'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE15]'
  id: totrans-329
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE15]'
- en: ''
  id: totrans-330
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in v1.17.5
  id: totrans-331
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增于 v1.17.5
- en: ''
  id: totrans-332
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-333
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-334
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'A dictionary of usable fonts from repository [pymupdf-fonts](https://pypi.org/project/pymupdf-fonts/).
    Items are keyed by their reserved fontname and provide information like this:'
  id: totrans-335
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从存储库 [pymupdf-fonts](https://pypi.org/project/pymupdf-fonts/) 获取可用字体的字典。项目以其保留字体名称为键，并提供信息，如下所示：
- en: ''
  id: totrans-336
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-337
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE16]'
- en: ''
  id: totrans-338
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If `pymupdf-fonts` is not installed, the dictionary is empty.
  id: totrans-339
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果未安装 `pymupdf-fonts`，则字典为空。
- en: ''
  id: totrans-340
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The dictionary keys can be used to define a [Font](font.html#font) via e.g.
    `font = pymupdf.Font("fimo")` – just like you can do it with the builtin fonts
    “Helvetica” and friends.
  id: totrans-341
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字典键可用于通过例如 `font = pymupdf.Font("fimo")` 定义 [Font](font.html#font) - 就像你可以用内置字体“Helvetica”和朋友们做的那样。
- en: '* * *'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE17]'
  id: totrans-343
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE17]'
- en: ''
  id: totrans-344
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in v1.19.4
  id: totrans-345
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增于 v1.19.4
- en: ''
  id: totrans-346
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-347
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-348
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Copy of `os.environ["TESSDATA_PREFIX"]` for convenient checking whether there
    is integrated Tesseract OCR support.
  id: totrans-349
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 复制 `os.environ["TESSDATA_PREFIX"]` 以方便检查是否集成了 Tesseract OCR 支持。
- en: ''
  id: totrans-350
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: If this attribute is `None`, Tesseract-OCR is either not installed, or the environment
    variable is not set to point to Tesseract’s language support folder.
  id: totrans-351
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果此属性为 `None`，则说明未安装 Tesseract-OCR，或者环境变量未设置为指向 Tesseract 语言支持文件夹。
- en: ''
  id: totrans-352
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-353
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-354
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This variable is now checked before OCR functions are tried. This prevents verbose
    messages from MuPDF.
  id: totrans-355
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 现在在尝试 OCR 函数之前会检查此变量。这可以防止 MuPDF 输出冗长的消息。
- en: '* * *'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE18]'
  id: totrans-357
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE18]'
- en: ''
  id: totrans-358
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in v1.19.6
  id: totrans-359
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增于 v1.19.6
- en: ''
  id: totrans-360
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-361
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-362
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Contains about 500 RGB colors in PDF format with the color name as key. To see
    what is there, you can obviously look at `pymupdf.pdfcolor.keys()`.
  id: totrans-363
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包含大约 500 种 PDF 格式的 RGB 颜色，以颜色名称为键。要查看其中内容，可以显然查看 `pymupdf.pdfcolor.keys()`。
- en: ''
  id: totrans-364
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Examples:'
  id: totrans-365
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 示例：
- en: ''
  id: totrans-366
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`pymupdf.pdfcolor["red"] = (1.0, 0.0, 0.0)`'
  id: totrans-367
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pymupdf.pdfcolor["red"] = (1.0, 0.0, 0.0)`'
- en: ''
  id: totrans-368
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-369
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pymupdf.pdfcolor["skyblue"] = (0.5294117647058824, 0.807843137254902, 0.9215686274509803)`'
  id: totrans-370
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pymupdf.pdfcolor["skyblue"] = (0.5294117647058824, 0.807843137254902, 0.9215686274509803)`'
- en: ''
  id: totrans-371
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-372
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`pymupdf.pdfcolor["wheat"] = (0.9607843137254902, 0.8705882352941177, 0.7019607843137254)`'
  id: totrans-373
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pymupdf.pdfcolor["wheat"] = (0.9607843137254902, 0.8705882352941177, 0.7019607843137254)`'
- en: '* * *'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE19]'
  id: totrans-375
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE19]'
- en: ''
  id: totrans-376
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Convenience function to return the current local timestamp in PDF compatible
    format, e.g. *D:20170501121525-04’00’* for local datetime May 1, 2017, 12:15:25
    in a timezone 4 hours westward of the UTC meridian.
  id: totrans-377
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回当前本地时间戳的便捷函数，以 PDF 兼容格式，例如 *D:20170501121525-04’00’* 表示本地日期时间 2017 年 5 月 1
    日 12:15:25，在 UTC 子午线西边 4 小时的时区。
- en: ''
  id: totrans-378
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-379
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-380
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: str
  id: totrans-381
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: str
- en: ''
  id: totrans-382
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-383
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-384
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: current local PDF timestamp.
  id: totrans-385
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当前本地 PDF 时间戳。
- en: '* * *'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE20]'
  id: totrans-387
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE20]'
- en: ''
  id: totrans-388
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in version 1.14.7
  id: totrans-389
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增于版本 1.14.7
- en: ''
  id: totrans-390
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-391
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-392
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Calculate the length of text on output with a given **builtin** font, [`fontsize`](glossary.html#fontsize
    "fontsize") and encoding.
  id: totrans-393
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 使用给定的 **builtin** 字体、[`fontsize`](glossary.html#fontsize "fontsize") 和编码计算输出文本的长度。
- en: ''
  id: totrans-394
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-395
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-396
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**text** (*str*) – the text string.'
  id: totrans-397
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**text** (*str*) – 文本字符串。'
- en: ''
  id: totrans-398
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-399
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**fontname** (*str*) – the fontname. Must be one of either the [PDF Base 14
    Fonts](app3.html#base-14-fonts) or the CJK fonts, identified by their “reserved”
    fontnames (see table in [`Page.insert_font()`](page.html#Page.insert_font "Page.insert_font")).'
  id: totrans-400
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fontname** (*str*) – 字体名称。必须是 [PDF 基础 14 字体](app3.html#base-14-fonts) 或 CJK
    字体之一，由其“保留”字体名称（请参见 [`Page.insert_font()`](page.html#Page.insert_font "Page.insert_font")
    中的表格）。'
- en: ''
  id: totrans-401
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-402
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**fontsize** (*float*) – the [`fontsize`](glossary.html#fontsize "fontsize").'
  id: totrans-403
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fontsize** (*float*) – 字体大小。'
- en: ''
  id: totrans-404
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-405
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**encoding** (*int*) – the encoding to use. Besides 0 = Latin, 1 = Greek and
    2 = Cyrillic (Russian) are available. Relevant for Base-14 fonts “Helvetica”,
    “Courier” and “Times” and their variants only. Make sure to use the same value
    as in the corresponding text insertion.'
  id: totrans-406
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**encoding** (*int*) – 要使用的编码。除了 0 = 拉丁字母、1 = 希腊字母和 2 = 西里尔字母（俄语）之外，还有 Base-14
    字体“Helvetica”、“Courier”和“Times”及其变体可用。确保在相应的文本插入中使用相同的值。'
- en: ''
  id: totrans-407
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-408
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-409
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-410
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-411
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: float
  id: totrans-412
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: float
- en: ''
  id: totrans-413
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-414
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-415
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the length in points the string will have (e.g. when used in [`Page.insert_text()`](page.html#Page.insert_text
    "Page.insert_text")).
  id: totrans-416
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字符串在点数上的长度（例如，在 [`Page.insert_text()`](page.html#Page.insert_text "Page.insert_text")
    中使用时）。
- en: ''
  id: totrans-417
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-418
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-419
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This function will only do the calculation – it won’t insert font nor text.
  id: totrans-420
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此函数仅执行计算 - 不会插入字体或文本。
- en: ''
  id: totrans-421
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-422
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-423
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The [Font](font.html#font) class offers a similar method, [`Font.text_length()`](font.html#Font.text_length
    "Font.text_length"), which supports Base-14 fonts and any font with a character
    map (CMap, Type 0 fonts).
  id: totrans-424
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[Font](font.html#font) 类提供了类似的方法，[`Font.text_length()`](font.html#Font.text_length
    "Font.text_length")，支持 Base-14 字体和带字符映射（CMap，Type 0 字体）的任何字体。'
- en: ''
  id: totrans-425
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Warning
  id: totrans-426
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 警告
- en: ''
  id: totrans-427
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'If you use this function to determine the required rectangle width for the
    ([Page](page.html#page) or [Shape](shape.html#shape)) *insert_textbox* methods,
    be aware that they calculate on a **by-character level**. Because of rounding
    effects, this will mostly lead to a slightly larger number: *sum([pymupdf.get_text_length(c)
    for c in text]) > pymupdf.get_text_length(text)*. So either (1) do the same, or
    (2) use something like *pymupdf.get_text_length(text + “’”)* for your calculation.'
  id: totrans-428
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果你使用此函数来确定（[Page](page.html#page) 或者 [Shape](shape.html#shape)）*insert_textbox*
    方法所需的矩形宽度，要注意它们基于**字符级**计算。由于舍入效应，这将导致一个略大的数字：*sum([pymupdf.get_text_length(c)
    for c in text]) > pymupdf.get_text_length(text)*。因此要么（1）做同样的事情，要么（2）在计算中使用像 *pymupdf.get_text_length(text
    + “’”)* 这样的方法。
- en: '* * *'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE21]'
  id: totrans-430
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE21]'
- en: ''
  id: totrans-431
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Make a PDF-compatible string: if the text contains code points *ord(c) > 255*,
    then it will be converted to UTF-16BE with BOM as a hexadecimal character string
    enclosed in “<>” brackets like *<feff…>*. Otherwise, it will return the string
    enclosed in (round) brackets, replacing any characters outside the ASCII range
    with some special code. Also, every “(”, “)” or backslash is escaped with a backslash.'
  id: totrans-432
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 制作 PDF 兼容的字符串：如果文本包含的代码点 *ord(c) > 255*，它将转换为带 BOM 的 UTF-16BE 的十六进制字符字符串，包含在“<>”括号中，例如
    *<feff…>*。否则，将返回用圆括号括起来的字符串，替换ASCII范围之外的任何字符为一些特殊代码。并且每个“（”、“）”或反斜杠都被反斜杠转义。
- en: ''
  id: totrans-433
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-434
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-435
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**text** (*str*) – the object to convert'
  id: totrans-436
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**text**（*str*）– 要转换的对象'
- en: ''
  id: totrans-437
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-438
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-439
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: str
  id: totrans-440
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字符串
- en: ''
  id: totrans-441
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-442
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-443
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PDF-compatible string enclosed in either *()* or *<>*.
  id: totrans-444
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: PDF 兼容的字符串，包含在 *()* 或 *<>* 中。
- en: '* * *'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE22]'
  id: totrans-446
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE22]'
- en: ''
  id: totrans-447
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in v1.16.7
  id: totrans-448
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增于 v1.16.7
- en: ''
  id: totrans-449
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-450
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.19.5: also return natural image orientation extracted from EXIF
    data if present.'
  id: totrans-451
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 v1.19.5 中更改：如果存在，还返回从 EXIF 数据中提取的自然图像方向。
- en: ''
  id: totrans-452
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-453
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.22.5: always return `None` in error cases instead of an empty
    dictionary.'
  id: totrans-454
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 v1.22.5 中更改：错误情况下始终返回 `None` 而不是空字典。
- en: ''
  id: totrans-455
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-456
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-457
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Show important properties of an image provided as a memory area. Its main purpose
    is to avoid using other Python packages just to determine them.
  id: totrans-458
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 显示作为内存区域提供的图像的重要属性。其主要目的是避免使用其他 Python 包来确定它们。
- en: ''
  id: totrans-459
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-460
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-461
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**stream** (*bytes**|**bytearray**|**BytesIO**|**file*) – either an image in
    memory or an **opened** file. An image in memory may be any of the formats `bytes`,
    `bytearray` or `io.BytesIO`.'
  id: totrans-462
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**stream**（*bytes**|**bytearray**|**BytesIO**|**file*）– 一个在内存中的图像或者已打开的文件。在内存中的图像可以是
    `bytes`、`bytearray` 或者 `io.BytesIO` 中的任意一种格式。'
- en: ''
  id: totrans-463
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-464
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-465
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: dict
  id: totrans-466
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字典
- en: ''
  id: totrans-467
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-468
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-469
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'No exception is ever raised. In case of an error, `None` is returned. Otherwise,
    there are the following items:'
  id: totrans-470
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从不会引发异常。在错误情况下返回 `None`。否则，返回以下项目：
- en: ''
  id: totrans-471
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-472
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE23]'
- en: ''
  id: totrans-473
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'There is the following relation to **Exif** information encoded in `orientation`,
    and correspondingly in the [`transform`](point.html#Point.transform "Point.transform")
    matrix-like (quoted from MuPDF documentation, *ccw* = counter-clockwise):'
  id: totrans-474
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 与 **Exif** 信息编码在 `orientation` 中有以下关系，相应地在 [`transform`](point.html#Point.transform
    "Point.transform") 矩阵中类似于（摘自 MuPDF 文档，*ccw* = 逆时针）：
- en: ''
  id: totrans-475
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Undefined
  id: totrans-476
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 未定义
- en: ''
  id: totrans-477
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-478
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 0 degree ccw rotation. (Exif = 1)
  id: totrans-479
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 0 度逆时针旋转。（Exif = 1）
- en: ''
  id: totrans-480
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-481
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 90 degree ccw rotation. (Exif = 8)
  id: totrans-482
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 90 度逆时针旋转。（Exif = 8）
- en: ''
  id: totrans-483
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-484
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 180 degree ccw rotation. (Exif = 3)
  id: totrans-485
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 180 度逆时针旋转。（Exif = 3）
- en: ''
  id: totrans-486
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-487
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 270 degree ccw rotation. (Exif = 6)
  id: totrans-488
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 270 度逆时针旋转。（Exif = 6）
- en: ''
  id: totrans-489
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-490
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: flip on X. (Exif = 2)
  id: totrans-491
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 X 轴上翻转。（Exif = 2）
- en: ''
  id: totrans-492
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-493
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: flip on X, then rotate ccw by 90 degrees. (Exif = 5)
  id: totrans-494
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 先在 X 轴上翻转，然后逆时针旋转 90 度。（Exif = 5）
- en: ''
  id: totrans-495
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-496
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: flip on X, then rotate ccw by 180 degrees. (Exif = 4)
  id: totrans-497
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 先在 X 轴上翻转，然后逆时针旋转 180 度。（Exif = 4）
- en: ''
  id: totrans-498
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-499
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: flip on X, then rotate ccw by 270 degrees. (Exif = 7)
  id: totrans-500
  prefs:
  - PREF_BQ
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 先在 X 轴上翻转，然后逆时针旋转 270 度。（Exif = 7）
- en: ''
  id: totrans-501
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  id: totrans-502
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意
- en: ''
  id: totrans-503
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: For some “exotic” images (FAX encodings, RAW formats and the like), this method
    will not work. You can however still work with such images in PyMuPDF, e.g. by
    using [`Document.extract_image()`](document.html#Document.extract_image "Document.extract_image")
    or create pixmaps via `Pixmap(doc, xref)`. These methods will automatically convert
    exotic images to the PNG format before returning results.
  id: totrans-504
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于一些“奇特”的图像（如传真编码、原始格式等），此方法无法使用。但你仍然可以在 PyMuPDF 中处理这些图像，例如通过 [`Document.extract_image()`](document.html#Document.extract_image
    "Document.extract_image") 或者通过 `Pixmap(doc, xref)` 创建像素图。这些方法在返回结果之前会自动将奇特的图像转换为
    PNG 格式。
- en: ''
  id: totrans-505
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-506
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You can also get the properties of images embedded in a PDF, via their [`xref`](glossary.html#xref
    "xref"). In this case make sure to extract the raw stream: `pymupdf.image_profile(doc.xref_stream_raw(xref))`.'
  id: totrans-507
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 也可以通过它们的[`xref`](glossary.html#xref "xref")获取嵌入在PDF中的图像的属性。在这种情况下，请确保提取原始流：`pymupdf.image_profile(doc.xref_stream_raw(xref))`。
- en: ''
  id: totrans-508
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-509
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: Images as returned by the image blocks of [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text") using “dict” or “rawdict” options are also supported.
  id: totrans-510
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像由[`Page.get_text()`](page.html#Page.get_text "Page.get_text")的图像块以“dict”或“rawdict”选项返回，也得到支持。
- en: '* * *'
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE24]'
  id: totrans-512
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE24]'
- en: ''
  id: totrans-513
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the header string required to make a valid document out of page text
    outputs.
  id: totrans-514
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回页文本输出的有效文档标头字符串。
- en: ''
  id: totrans-515
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-516
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-517
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**output** (*str*) – type of document. Use the same as the output parameter
    of *get_text()*.'
  id: totrans-518
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**output**（*str*） – 文档类型。与*get_text()*的输出参数相同。'
- en: ''
  id: totrans-519
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-520
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**filename** (*str*) – optional arbitrary name to use in output types “json”
    and “xml”.'
  id: totrans-521
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**filename**（*str*） – 可选的任意输出类型“json”和“xml”中使用的名称。'
- en: ''
  id: totrans-522
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-523
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-524
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-525
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-526
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: str
  id: totrans-527
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: str
- en: '* * *'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE25]'
  id: totrans-529
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE25]'
- en: ''
  id: totrans-530
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the trailer string required to make a valid document out of page text
    outputs. See [`Page.get_text()`](page.html#Page.get_text "Page.get_text") for
    an example.
  id: totrans-531
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回页文本输出的有效文档尾字符串。参见[`Page.get_text()`](page.html#Page.get_text "Page.get_text")的示例。
- en: ''
  id: totrans-532
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-533
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-534
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**output** (*str*) – type of document. Use the same as the output parameter
    of *get_text()*.'
  id: totrans-535
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**output**（*str*） – 文档类型。与*get_text()*的输出参数相同。'
- en: ''
  id: totrans-536
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-537
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-538
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: str
  id: totrans-539
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: str
- en: '* * *'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE26]'
  id: totrans-541
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE26]'
- en: ''
  id: totrans-542
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Delete an object containing XML-based metadata from the PDF. (Py-) MuPDF does
    not support XML-based metadata. Use this if you want to make sure that the conventional
    metadata dictionary will be used exclusively. Many thirdparty PDF programs insert
    their own metadata in XML format and thus may override what you store in the conventional
    dictionary. This method deletes any such reference, and the corresponding PDF
    object will be deleted during next garbage collection of the file.
  id: totrans-543
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 从PDF中删除包含基于XML的元数据的对象。（Py-）MuPDF不支持基于XML的元数据。如果要确保仅使用传统元数据字典，则使用此选项。许多第三方PDF程序将它们自己的元数据插入XML格式中，因此可能会覆盖您存储在传统字典中的内容。此方法删除任何此类引用，并且文件的下一个垃圾回收期间将删除相应的PDF对象。
- en: '* * *'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE27]'
  id: totrans-545
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE27]'
- en: ''
  id: totrans-546
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the XML-based metadata [`xref`](glossary.html#xref "xref") of the PDF
    if present – also refer to [`Document.del_xml_metadata()`](#Document.del_xml_metadata
    "Document.del_xml_metadata"). You can use it to retrieve the content via [`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream") and then work with it using some XML software.
  id: totrans-547
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果存在，则返回PDF的基于XML的元数据的[`xref`](glossary.html#xref "xref")。还参见[`Document.del_xml_metadata()`](#Document.del_xml_metadata
    "Document.del_xml_metadata")以检索内容，可以通过[`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream")检索并使用某些XML软件进行处理。
- en: ''
  id: totrans-548
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-549
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-550
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: int
  id: totrans-551
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: int
- en: ''
  id: totrans-552
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-553
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-554
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[`xref`](glossary.html#xref "xref") of PDF file level XML metadata – or 0 if
    none exists.'
  id: totrans-555
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: PDF文件级别XML元数据的[`xref`](glossary.html#xref "xref") – 如果不存在则为0。
- en: '* * *'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE28]'
  id: totrans-557
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE28]'
- en: ''
  id: totrans-558
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Run a page through a device.
  id: totrans-559
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 通过设备运行页面。
- en: ''
  id: totrans-560
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-561
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-562
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**dev** ([Device](device.html#device)) – Device, obtained from one of the [Device](device.html#device)
    constructors.'
  id: totrans-563
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**dev**（[Device](device.html#device)） – 设备，从一个[Device](device.html#device)构造器获取。'
- en: ''
  id: totrans-564
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-565
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**transform** ([Matrix](matrix.html#matrix)) – Transformation to apply to the
    page. Set it to [Identity](identity.html#identity) if no transformation is desired.'
  id: totrans-566
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**transform**（[Matrix](matrix.html#matrix)） – 应用于页面的转换。如果不需要转换，请将其设置为[Identity](identity.html#identity)。'
- en: '* * *'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE29]'
  id: totrans-568
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE29]'
- en: ''
  id: totrans-569
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in v1.19.0
  id: totrans-570
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: v1.19.0中的新内容
- en: ''
  id: totrans-571
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-572
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.22.0: optionally also return the OCG name applicable to the boundary
    box.'
  id: totrans-573
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: v1.22.0中的更改：可选择还返回适用于边界框的OCG名称。
- en: ''
  id: totrans-574
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-575
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-576
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-577
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-578
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'a list of rectangles that envelop text, image or drawing objects. Each item
    is a tuple `(type, (x0, y0, x1, y1))` where the second tuple consists of rectangle
    coordinates, and *type* is one of the following values. If `layers=True`, there
    is a third item containing the OCG name or `None`: `(type, (x0, y0, x1, y1), None)`.'
  id: totrans-579
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 包围文本、图像或绘图对象的矩形列表。每个项都是元组`(type, (x0, y0, x1, y1))`，其中第二个元组包含矩形坐标，*type* 是以下值之一。如果`layers=True`，则还有第三项包含OCG名称或`None`：`(type,
    (x0, y0, x1, y1), None)`。
- en: ''
  id: totrans-580
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`"fill-text"` – normal text (painted without character borders)'
  id: totrans-581
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fill-text"` – 普通文本（无字符边框）'
- en: ''
  id: totrans-582
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-583
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"stroke-text"` – text showing character borders only'
  id: totrans-584
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"stroke-text"` – 仅显示字符边框的文本'
- en: ''
  id: totrans-585
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-586
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"ignore-text"` – text that should not be displayed (e.g. as used by OCR text
    layers)'
  id: totrans-587
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ignore-text"` – 不应显示的文本（例如OCR文本层使用）'
- en: ''
  id: totrans-588
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-589
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"fill-path"` – drawing with fill color (and no border)'
  id: totrans-590
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fill-path"` – 使用填充颜色进行绘制（无边框）'
- en: ''
  id: totrans-591
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-592
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"stroke-path"` – drawing with border (and no fill color)'
  id: totrans-593
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"stroke-path"` – 带有边框的绘图（无填充颜色）'
- en: ''
  id: totrans-594
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-595
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"fill-image"` – displays an image'
  id: totrans-596
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fill-image"` – 显示图片'
- en: ''
  id: totrans-597
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-598
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"fill-shade"` – display a shading'
  id: totrans-599
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fill-shade"` – 显示渐变'
- en: ''
  id: totrans-600
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-601
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-602
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The item sequence represents the **sequence in which these commands are executed**
    to build the page’s appearance. Therefore, if an item’s bbox intersects or contains
    that of a previous item, then the previous item may be (partially) covered / hidden.
  id: totrans-603
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 项目顺序表示了**构建页面外观所执行的命令的顺序**。因此，如果项目的边界框与之前项目的边界框相交或包含，则可能（部分）覆盖/隐藏之前的项目。
- en: ''
  id: totrans-604
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: So this list can be used to detect such situations. An item’s index in this
    list equals the value of a `"seqno"` in dictionaries as returned by [`Page.get_drawings()`](page.html#Page.get_drawings
    "Page.get_drawings") and [`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace").
  id: totrans-605
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 因此，可以使用此列表来检测此类情况。列表中项目的索引等于由[`Page.get_drawings()`](page.html#Page.get_drawings
    "Page.get_drawings")和[`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace")返回的字典中的“seqno”的值。
- en: '* * *'
  id: totrans-606
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE30]'
  id: totrans-607
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE30]'
- en: ''
  id: totrans-608
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in v1.18.16
  id: totrans-609
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增于 v1.18.16
- en: ''
  id: totrans-610
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-611
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.19.0: added key “seqno”.'
  id: totrans-612
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 v1.19.0 中更改：添加了键“seqno”。
- en: ''
  id: totrans-613
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-614
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.19.1: stroke and fill colors now always are either RGB or GRAY'
  id: totrans-615
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 v1.19.1 中更改：描边和填充颜色现在始终是 RGB 或 GRAY
- en: ''
  id: totrans-616
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-617
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.19.3: span and character bboxes are now also correct if `dir
    != (1, 0)`.'
  id: totrans-618
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 v1.19.3 中更改：如果`dir != (1, 0)`，则跨度和字符边界框现在也是正确的。
- en: ''
  id: totrans-619
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-620
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Changed in v1.22.0: add new dictionary key “layer”.'
  id: totrans-621
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 v1.22.0 中更改：新增字典键“layer”。
- en: ''
  id: totrans-622
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-623
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-624
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return low-level text information of the page. The method is available for
    **all** document types. The result is a list of Python dictionaries with the following
    content:'
  id: totrans-625
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回页面的低级文本信息。该方法适用于**所有**文档类型。结果是一个带有以下内容的 Python 字典列表：
- en: ''
  id: totrans-626
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-627
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE31]'
- en: ''
  id: totrans-628
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Details:'
  id: totrans-629
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 细节：
- en: ''
  id: totrans-630
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Information above tagged with “(1)” has the same meaning and value as explained
    in [TextPage](textpage.html#textpage).
  id: totrans-631
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标有“(1)”的上述信息与[TextPage](textpage.html#textpage)中解释的含义和值相同。
- en: ''
  id: totrans-632
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-633
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Please note that the font [`flags`](annot.html#Annot.flags "Annot.flags") value
    will never contain a *superscript* flag bit: the detection of superscripts is
    done within MuPDF [TextPage](textpage.html#textpage) code – it is not a property
    of any font.'
  id: totrans-634
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，字体[`flags`](annot.html#Annot.flags "Annot.flags")值永远不会包含*上标*标志位：上标的检测是在
    MuPDF 的[TextPage](textpage.html#textpage)代码中完成的 – 它不是任何字体的属性。
- en: ''
  id: totrans-635
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-636
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Also note, that the text *color* is encoded as the usual tuple of floats 0 <=
    f <= 1 – not in sRGB format. Depending on `span["type"]`, interpret this as fill
    color or stroke color.
  id: totrans-637
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还要注意，文本*颜色*编码为常规浮点数元组 0 <= f <= 1 – 而不是 sRGB 格式。根据`span["type"]`，将其解释为填充颜色或描边颜色。
- en: ''
  id: totrans-638
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-639
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'There are 3 text span types:'
  id: totrans-640
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有 3 种文本跨度类型：
- en: ''
  id: totrans-641
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-642
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '0: Filled text – equivalent to PDF text rendering mode 0 (`0 Tr`, the default
    in PDF), only each character’s “inside” is shown.'
  id: totrans-643
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '0: 填充文本 – 等同于 PDF 文本渲染模式 0（`0 Tr`，PDF 中的默认值），只显示每个字符的“内部”。'
- en: ''
  id: totrans-644
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-645
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '1: Stroked text – equivalent to `1 Tr`, only the character borders are shown.'
  id: totrans-646
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '1: 笔画文本 – 等同于`1 Tr`，只显示字符边框。'
- en: ''
  id: totrans-647
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-648
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '3: Ignored text – equivalent to `3 Tr` (hidden text).'
  id: totrans-649
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '3: 忽略的文本 – 等同于`3 Tr`（隐藏文本）。'
- en: ''
  id: totrans-650
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-651
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Line width in this context is important only for processing `span["type"] !=
    0`: it determines the thickness of the character’s border line. This value may
    not be provided at all with the text data. In this case, a value of 5% of the
    [`fontsize`](glossary.html#fontsize "fontsize") (`span["size"] * 0,05`) is generated.
    Often, an “artificial” bold text in PDF is created by `2 Tr`. There is no equivalent
    span type for this case. Instead, respective text is represented by two consecutive
    spans – which are identical in every aspect, except for their types, which are
    0, resp 1\. It is your responsibility to handle this type of situation - in [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text"), MuPDF is doing this for you.'
  id: totrans-652
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此上下文中，线宽仅对处理`span["type"] != 0`的情况很重要：它决定了字符边界线的厚度。此值可能根本不会随文本数据提供。在这种情况下，将生成一个值为[`fontsize`](glossary.html#fontsize
    "fontsize")的 5%（`span["size"] * 0,05`）。通常，PDF 中的“人为”粗体文本由`2 Tr`创建。对于这种情况没有等效的跨度类型。相反，相应的文本由两个连续的跨度表示
    – 它们在每个方面都是相同的，除了它们的类型，分别是 0 和 1。处理此类情况是你的责任 – 在[`Page.get_text()`](page.html#Page.get_text
    "Page.get_text")中，MuPDF 为你处理这个问题。
- en: ''
  id: totrans-653
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-654
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: For data compactness, the character’s unicode is provided here. Use built-in
    function `chr()` for the character itself.
  id: totrans-655
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了数据紧凑性，在此提供了字符的 Unicode。使用内置函数`chr()`获取字符本身。
- en: ''
  id: totrans-656
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-657
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The alpha / opacity value of the span’s text, `0 <= opacity <= 1`, 0 is invisible
    text, 1 (100%) is intransparent. Depending on `span["type"]`, interpret this value
    as *fill* opacity or, resp. *stroke* opacity.
  id: totrans-658
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: 跨度文本的 alpha / 不透明值为 `0 <= opacity <= 1`，0 表示不可见文本，1（100%）表示不透明。根据 `span["type"]`，将此值解释为
    *填充* 不透明度或 *描边* 不透明度。
- en: ''
  id: totrans-659
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-660
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*(Changed in v1.19.0)* This value is equal or close to `char["bbox"]` of “rawdict”.
    In particular, the bbox **height** value is always computed as if **“small glyph
    heights”** had been requested.'
  id: totrans-661
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*(v1.19.0 更改)* 此值与“rawdict”中的 `char["bbox"]` 相等或接近。特别是，边界框 **高度** 值总是按照请求 **“小字形高度”**
    计算。'
- en: ''
  id: totrans-662
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-663
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*(New in v1.19.0)* This is the union of all character bboxes.'
  id: totrans-664
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*(v1.19.0 新增)* 这是所有字符边界框的并集。'
- en: ''
  id: totrans-665
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-666
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*(New in v1.19.0)* Enumerates the commands that build up the page’s appearance.
    Can be used to find out whether text is effectively hidden by objects, which are
    painted “later”, or *over* some object. So if there is a drawing or image with
    a higher sequence number, whose bbox overlaps (parts of) this text span, one may
    assume that such an object hides the resp. text. Different text spans have identical
    sequence numbers if they were created in one go.'
  id: totrans-667
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*(v1.19.0 新增)* 枚举构建页面外观的命令。可用于查找文本是否被稍后绘制的对象有效地隐藏，或者 *覆盖* 了某个对象。因此，如果有一个绘图或图像具有更高的序列号，其边界框与此文本跨度重叠（部分），则可以假设该对象隐藏了相应的文本。如果一次创建了多个文本跨度，则不同文本跨度具有相同的序列号。'
- en: ''
  id: totrans-668
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-669
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '*(New in v1.22.0)* The name of the Optional Content Group (OCG) if applicable
    or `None`.'
  id: totrans-670
  prefs:
  - PREF_BQ
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*(v1.22.0 新增)* 可选内容组（OCG）的名称（如果适用）或 `None`。'
- en: ''
  id: totrans-671
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-672
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-673
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here is a list of similarities and differences of `page.get_texttrace()` compared
    to `page.get_text("rawdict")`:'
  id: totrans-674
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这里列出了 `page.get_texttrace()` 与 `page.get_text("rawdict")` 的相似之处和不同之处：
- en: ''
  id: totrans-675
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The method is up to **twice as fast,** compared to “rawdict” extraction. Depends
    on the amount of text.
  id: totrans-676
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与“rawdict”提取相比，该方法的速度最多 **快两倍**。这取决于文本的数量。
- en: ''
  id: totrans-677
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-678
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The returned data is very **much smaller in size** – although it provides more
    information.
  id: totrans-679
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 返回的数据大小大为**显著较小** - 尽管它提供了更多信息。
- en: ''
  id: totrans-680
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-681
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Additional types of text **invisibility can be detected**: opacity = 0 or type
    > 1 or overlapping bbox of an object with a higher sequence number.'
  id: totrans-682
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以检测到更多类型的文本 **不可见性**：不透明度 = 0 或类型 > 1 或具有更高序列号的对象的边界框重叠。
- en: ''
  id: totrans-683
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-684
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: If MuPDF returns unicode 0xFFFD (65533) for unrecognized characters, you may
    still be able to deduct desired information from the glyph id.
  id: totrans-685
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 MuPDF 对于未识别字符返回 Unicode 0xFFFD（65533），你仍然可以从字形 ID 推断所需信息。
- en: ''
  id: totrans-686
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-687
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: The `span["chars"]` **contains no spaces**, **except** the document creator
    has explicitly coded them. They **will never be generated** like it happens in
    [`Page.get_text()`](page.html#Page.get_text "Page.get_text") methods. To provide
    some help for doing your own computations here, the width of a space character
    is given. This value is derived from the font where possible. Otherwise the value
    of a fallback font is taken.
  id: totrans-688
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`span["chars"]` **中不包含空格**，除非文档创建者已明确编码它们。它们**不会像 [`Page.get_text()`](page.html#Page.get_text
    "Page.get_text") 方法中那样被生成**。为了帮助你进行自己的计算，这里提供了空格字符的宽度。该值是从字体中获取的，否则将采用备用字体的值。'
- en: ''
  id: totrans-689
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-690
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: There is no effort to organize text like it happens for a [TextPage](textpage.html#textpage)
    (the hierarchy of blocks, lines, spans, and characters). Characters are simply
    extracted in sequence, one by one, and put in a span. Whenever any of the span’s
    characteristics changes, a new span is started. So you may find characters with
    different `origin.y` values in the same span (which means they would appear in
    different lines). You cannot assume, that span characters are sorted in any particular
    order – you must make sense of the info yourself, taking `span["dir"]`, `span["wmode"]`,
    etc. into account.
  id: totrans-691
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本不会像 [TextPage](textpage.html#textpage) 那样进行组织（块、行、跨度和字符的层次结构）。字符只是按顺序逐个提取并放入一个跨度中。每当跨度的特征发生变化时，就会启动一个新的跨度。因此，在同一个跨度中可能会找到具有不同
    `origin.y` 值的字符（这意味着它们将显示在不同的行中）。你不能假设跨度字符按任何特定顺序排序 - 你必须根据 `span["dir"]`、`span["wmode"]`
    等来理解信息。
- en: ''
  id: totrans-692
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-693
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Ligatures are represented like this:'
  id: totrans-694
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连字表示如下：
- en: ''
  id: totrans-695
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-696
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-697
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-698
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-699
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: 'MuPDF handles the following ligatures: “fi”, “ff”, “fl”, “ft”, “st”, “ffi”,
    and “ffl” (only the first 3 are mostly ever used). If the page contains e.g. ligature
    “fi”, you will find the following two character items subsequent to each other:'
  id: totrans-700
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: MuPDF 处理以下连字：“fi”、“ff”、“fl”、“ft”、“st”、“ffi” 和 “ffl”（只有前 3 个通常被使用）。例如，如果页面包含连字“fi”，则会在彼此相邻的两个字符项后找到它们：
- en: ''
  id: totrans-701
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-702
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-703
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-704
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: ''
  id: totrans-705
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-706
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: This means that the bbox of the first ligature character is the area containing
    the complete, compound glyph. Subsequent ligature components are recognizable
    by their glyph value -1 and a bbox of width zero.
  id: totrans-707
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这意味着第一个连字字符的bbox是包含完整复合字形的区域。后续连字组件可通过其字形值-1和零宽度的bbox识别。
- en: ''
  id: totrans-708
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-709
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: 'You may want to replace those 2 or 3 char tuples by one, that represents the
    ligature itself. Use the following mapping of ligatures to unicodes:'
  id: totrans-710
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可能希望用一个代表连字本身的字符元组替换这些2个或3个字符元组。使用以下连字到Unicode的映射：
- en: ''
  id: totrans-711
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-712
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-713
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"ff" -> 0xFB00`'
  id: totrans-714
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ff" -> 0xFB00`'
- en: ''
  id: totrans-715
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-716
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"fi" -> 0xFB01`'
  id: totrans-717
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fi" -> 0xFB01`'
- en: ''
  id: totrans-718
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-719
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"fl" -> 0xFB02`'
  id: totrans-720
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"fl" -> 0xFB02`'
- en: ''
  id: totrans-721
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-722
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"ffi" -> 0xFB03`'
  id: totrans-723
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ffi" -> 0xFB03`'
- en: ''
  id: totrans-724
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-725
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"ffl" -> 0xFB04`'
  id: totrans-726
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ffl" -> 0xFB04`'
- en: ''
  id: totrans-727
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-728
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"ft" -> 0xFB05`'
  id: totrans-729
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"ft" -> 0xFB05`'
- en: ''
  id: totrans-730
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-731
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '`"st" -> 0xFB06`'
  id: totrans-732
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"st" -> 0xFB06`'
- en: ''
  id: totrans-733
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-734
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-735
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'So you may want to replace the two example tuples above by the following single
    one: `(0xFB01, glyph, (x, y), (x0, y0, x1, y1))` (there is usually no need to
    lookup the correct glyph id for 0xFB01 in the resp. font, but you may execute
    `font.has_glyph(0xFB01)` and use its return value).'
  id: totrans-736
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 因此，您可能希望用以下单个元组替换上述两个示例元组：`(0xFB01, glyph, (x, y), (x0, y0, x1, y1))`（通常不需要在相应字体中查找0xFB01的正确字形id，但您可以执行`font.has_glyph(0xFB01)`并使用其返回值）。
- en: ''
  id: totrans-737
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-738
  prefs:
  - PREF_BQ
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-739
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-740
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-741
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-742
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Changed in v1.19.3:** Similar to other text extraction methods, the character
    and span bboxes envelop the character quads. To recover the quads, follow the
    same methods [`recover_quad()`](#recover_quad "recover_quad"), [`recover_char_quad()`](#recover_char_quad
    "recover_char_quad") or [`recover_span_quad()`](#recover_span_quad "recover_span_quad")
    as explained in [Structure of Dictionary Outputs](textpage.html#textpagedict).
    Use either `None` or `span["dir"]` for the writing direction.'
  id: totrans-743
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在v1.19.3中更改：** 与其他文本提取方法类似，字符和跨度的边界框包围字符四边形。要恢复四边形，请按照[Dictionary Outputs的结构](textpage.html#textpagedict)中解释的相同方法，使用[`recover_quad()`](#recover_quad
    "recover_quad")、[`recover_char_quad()`](#recover_char_quad "recover_char_quad")或[`recover_span_quad()`](#recover_span_quad
    "recover_span_quad")。使用`None`或`span["dir"]`表示书写方向。'
- en: ''
  id: totrans-744
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-745
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Changed in v1.21.1:** If applicable, the name of the OCG is shown in `"layer"`.'
  id: totrans-746
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在v1.21.1中更改：** 如适用，OCG的名称将显示在`"layer"`中。'
- en: '* * *'
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE33]'
  id: totrans-748
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE33]'
- en: ''
  id: totrans-749
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Ensures that the page’s so-called graphics state is balanced and new content
    can be inserted correctly.
  id: totrans-750
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 确保页面的所谓图形状态平衡，并且可以正确插入新内容。
- en: ''
  id: totrans-751
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In versions 1.24.1+ of PyMuPDF the method was improved and is being executed
    automatically as required, so you should no longer need to concern yourself with
    it.
  id: totrans-752
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在PyMuPDF的版本1.24.1+中，该方法得到了改进，并且根据需要自动执行，因此您不再需要关注它。
- en: ''
  id: totrans-753
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This method obsoletes the use of [`Page.clean_contents()`](#Page.clean_contents
    "Page.clean_contents") in most cases. The advantage this method is a small footprint
    in terms of processing time and a low impact on the data size of incremental saves.
  id: totrans-754
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在大多数情况下，此方法使[`Page.clean_contents()`](#Page.clean_contents "Page.clean_contents")的使用过时。该方法的优点是处理时间占用较小，并且对增量保存的数据大小影响较小。
- en: '* * *'
  id: totrans-755
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE34]'
  id: totrans-756
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE34]'
- en: ''
  id: totrans-757
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Indicate whether the page’s so-called graphic state is balanced. If `False`,
    [`Page.wrap_contents()`](#Page.wrap_contents "Page.wrap_contents") should be executed
    if new content is inserted (only relevant in `overlay=True` mode). In newer versions
    (1.24.1+), this check and corresponding adjustments are automatically executed
    – you therefore should not be concerned about this anymore.
  id: totrans-758
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 指示页面的所谓图形状态是否平衡。如果为`False`，则在插入新内容时应执行[`Page.wrap_contents()`](#Page.wrap_contents
    "Page.wrap_contents")（仅在`overlay=True`模式下有效）。在更新的版本（1.24.1+）中，此检查和相应的调整将自动执行 -
    因此您不再需要担心这个问题。
- en: ''
  id: totrans-759
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-760
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-761
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: bool
  id: totrans-762
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 布尔值
- en: '* * *'
  id: totrans-763
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE35]'
  id: totrans-764
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE35]'
- en: ''
  id: totrans-765
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Deprecated wrapper for [`TextPage.extractBLOCKS()`](textpage.html#TextPage.extractBLOCKS
    "TextPage.extractBLOCKS"). Use [`Page.get_text()`](page.html#Page.get_text "Page.get_text")
    with the “blocks” option instead.
  id: totrans-766
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 废弃的[`TextPage.extractBLOCKS()`](textpage.html#TextPage.extractBLOCKS "TextPage.extractBLOCKS")的包装器。改用[`Page.get_text()`](page.html#Page.get_text
    "Page.get_text")并选择“blocks”选项。
- en: ''
  id: totrans-767
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-768
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-769
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list[tuple]
  id: totrans-770
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 列表[元组]
- en: '* * *'
  id: totrans-771
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE36]'
  id: totrans-772
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE36]'
- en: ''
  id: totrans-773
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Deprecated wrapper for [`TextPage.extractWORDS()`](textpage.html#TextPage.extractWORDS
    "TextPage.extractWORDS"). Use [`Page.get_text()`](page.html#Page.get_text "Page.get_text")
    with the “words” option instead.
  id: totrans-774
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 废弃的[`TextPage.extractWORDS()`](textpage.html#TextPage.extractWORDS "TextPage.extractWORDS")的包装器。改用[`Page.get_text()`](page.html#Page.get_text
    "Page.get_text")并选择“words”选项。
- en: ''
  id: totrans-775
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-776
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-777
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list[tuple]
  id: totrans-778
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 列表[元组]
- en: '* * *'
  id: totrans-779
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE37]'
  id: totrans-780
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE37]'
- en: ''
  id: totrans-781
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Run a page through a list device and return its display list.
  id: totrans-782
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 运行页面通过列表设备并返回其显示列表。
- en: ''
  id: totrans-783
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-784
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-785
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[DisplayList](displaylist.html#displaylist)'
  id: totrans-786
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[DisplayList](displaylist.html#displaylist)'
- en: ''
  id: totrans-787
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-788
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-789
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the display list of the page.
  id: totrans-790
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 页面的显示列表。
- en: '* * *'
  id: totrans-791
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE38]'
  id: totrans-792
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE38]'
- en: ''
  id: totrans-793
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'PDF only: Retrieve a list of [`xref`](glossary.html#xref "xref") of [`contents`](glossary.html#contents
    "contents") objects of a page. May be empty or contain multiple integers. If the
    page is cleaned ([`Page.clean_contents()`](#Page.clean_contents "Page.clean_contents")),
    it will be one entry at most. The “source” of each `/Contents` object can be individually
    read by [`Document.xref_stream()`](document.html#Document.xref_stream "Document.xref_stream")
    using an item of this list. Method [`Page.read_contents()`](#Page.read_contents
    "Page.read_contents") in contrast walks through this list and concatenates the
    corresponding sources into one `bytes` object.'
  id: totrans-794
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 仅限PDF：检索页面的[`contents`](glossary.html#contents "contents")对象的[`xref`](glossary.html#xref
    "xref")列表。可能为空或包含多个整数。如果页面被清理（[`Page.clean_contents()`](#Page.clean_contents "Page.clean_contents")），则最多只会有一个条目。每个`/Contents`对象的“源”可以通过[`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream")使用此列表的项目来单独读取。相反，[`Page.read_contents()`](#Page.read_contents
    "Page.read_contents")方法会遍历此列表，并将相应的源连接成一个`bytes`对象。
- en: ''
  id: totrans-795
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-796
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-797
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list[int]
  id: totrans-798
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: list[int]
- en: '* * *'
  id: totrans-799
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE39]'
  id: totrans-800
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE39]'
- en: ''
  id: totrans-801
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'PDF only: Let the page’s `/Contents` key point to this xref. Any previously
    used contents objects will be ignored and can be removed via garbage collection.'
  id: totrans-802
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 仅限PDF：让页面的`/Contents`键指向此xref。任何先前使用的contents对象都将被忽略，并可以通过垃圾收集来删除。
- en: '* * *'
  id: totrans-803
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE40]'
  id: totrans-804
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE40]'
- en: ''
  id: totrans-805
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Changed in v1.17.6
  id: totrans-806
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1.17.6版本中更改
- en: ''
  id: totrans-807
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-808
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-809
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'PDF only: Clean and concatenate all [`contents`](glossary.html#contents "contents")
    objects associated with this page. “Cleaning” includes syntactical corrections,
    standardizations and “pretty printing” of the contents stream. Discrepancies between
    [`contents`](glossary.html#contents "contents") and [`resources`](glossary.html#resources
    "resources") objects will also be corrected if sanitize is true. See [`Page.get_contents()`](#Page.get_contents
    "Page.get_contents") for more details.'
  id: totrans-810
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 仅限PDF：清理并连接与此页面关联的所有[`contents`](glossary.html#contents "contents")对象。 “清理”包括语法修正、标准化和对内容流进行“漂亮打印”。如果sanitize为true，则还将纠正[`contents`](glossary.html#contents
    "contents")和[`resources`](glossary.html#resources "resources")对象之间的差异。更多细节请参阅[`Page.get_contents()`](#Page.get_contents
    "Page.get_contents")。
- en: ''
  id: totrans-811
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Changed in version 1.16.0 Annotations are no longer implicitly cleaned by this
    method. Use [`Annot.clean_contents()`](#Annot.clean_contents "Annot.clean_contents")
    separately.
  id: totrans-812
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 1.16.0版本中更改 不再默认由此方法隐式清理注释。请单独使用[`Annot.clean_contents()`](#Annot.clean_contents
    "Annot.clean_contents")。
- en: ''
  id: totrans-813
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-814
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-815
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**sanitize** (*bool*) – *(new in v1.17.6)* if true, synchronization between
    resources and their actual use in the contents object is snychronized. For example,
    if a font is not actually used for any text of the page, then it will be deleted
    from the `/Resources/Font` object.'
  id: totrans-816
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**sanitize** (*bool*) – *(1.17.6版本中新增)* 如果为true，则资源和其在内容对象中的实际使用之间的同步是同步的。例如，如果某个字体实际上并未用于页面的任何文本，则它将从`/Resources/Font`对象中删除。'
- en: ''
  id: totrans-817
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Warning
  id: totrans-818
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 警告
- en: ''
  id: totrans-819
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a complex function which may generate large amounts of new data and
    render old data unused. It is **not recommended** using it together with the **incremental
    save** option. Also note that the resulting singleton new */Contents* object is
    **uncompressed**. So you should save to a **new file** using options *“deflate=True,
    garbage=3”*.
  id: totrans-820
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是一个可能会生成大量新数据并使旧数据变得无用的复杂函数。**不推荐**与**增量保存**选项一起使用它。还请注意，生成的单例新*/Contents*对象是**未压缩**的。因此，您应该使用选项*“deflate=True,
    garbage=3”*保存到一个**新文件**中。
- en: '* * *'
  id: totrans-821
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE41]'
  id: totrans-822
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE41]'
- en: ''
  id: totrans-823
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*New in version 1.17.0.* Return the concatenation of all [`contents`](glossary.html#contents
    "contents") objects associated with the page – without cleaning or otherwise modifying
    them. Use this method whenever you need to parse this source in its entirety without
    having to bother how many separate contents objects exist.'
  id: totrans-824
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*1.17.0版本中新增.* 返回与页面关联的所有[`contents`](glossary.html#contents "contents")对象的连接
    - 不进行清理或其他修改。每当需要在不必关心有多少个单独的contents对象存在的情况下解析此源时，请使用此方法。'
- en: ''
  id: totrans-825
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-826
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回类型：
- en: ''
  id: totrans-827
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: bytes
  id: totrans-828
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: bytes
- en: '* * *'
  id: totrans-829
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE42]'
  id: totrans-830
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE42]'
- en: ''
  id: totrans-831
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Clean the [`contents`](glossary.html#contents "contents") streams associated
    with the annotation. This is the same type of action which [`Page.clean_contents()`](#Page.clean_contents
    "Page.clean_contents") performs – just restricted to this annotation.
  id: totrans-832
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 清理与注释关联的[`contents`](glossary.html#contents "contents")流。这是与[`Page.clean_contents()`](#Page.clean_contents
    "Page.clean_contents")执行的相同类型的操作 - 只是限制于此注释。
- en: '* * *'
  id: totrans-833
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE43]'
  id: totrans-834
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE43]'
- en: ''
  id: totrans-835
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return a list of character glyphs and their widths for a font that is present
    in the document. A font must be specified by its PDF cross reference number [`xref`](glossary.html#xref
    "xref"). This function is called automatically from [`Page.insert_text()`](page.html#Page.insert_text
    "Page.insert_text") and [`Page.insert_textbox()`](page.html#Page.insert_textbox
    "Page.insert_textbox"). So you should rarely need to do this yourself.
  id: totrans-836
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回文档中存在的字体的字符字形和宽度的列表。必须通过其 PDF 交叉引用编号 [`xref`](glossary.html#xref "xref") 指定字体。此函数会自动从
    [`Page.insert_text()`](page.html#Page.insert_text "Page.insert_text") 和 [`Page.insert_textbox()`](page.html#Page.insert_textbox
    "Page.insert_textbox") 中调用。因此，你很少需要自己执行此操作。
- en: ''
  id: totrans-837
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-838
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Parameters:'
- en: ''
  id: totrans-839
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**xref** (*int*) – cross reference number of a font embedded in the PDF. To
    find a font [`xref`](glossary.html#xref "xref"), use e.g. *doc.get_page_fonts(pno)*
    of page number *pno* and take the first entry of one of the returned list entries.'
  id: totrans-840
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**xref** (*int*) – PDF 中嵌入的字体的交叉引用编号。要找到字体的 [`xref`](glossary.html#xref "xref")，请使用例如
    *doc.get_page_fonts(pno)* 的页面号 *pno* 并取返回列表条目的第一个条目。'
- en: ''
  id: totrans-841
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-842
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**limit** (*int*) – limits the number of returned entries. The default of 256
    is enforced for all fonts that only support 1-byte characters, so-called “simple
    fonts” (checked by this method). All [PDF Base 14 Fonts](app3.html#base-14-fonts)
    are simple fonts.'
  id: totrans-843
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**limit** (*int*) – 限制返回条目的数量。对于仅支持 1 字节字符（通过此方法检查的所谓“简单字体”）的所有字体，默认强制执行 256。所有的
    [PDF 基本 14 字体](app3.html#base-14-fonts) 都是简单字体。'
- en: ''
  id: totrans-844
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-845
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-846
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-847
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Return type:'
- en: ''
  id: totrans-848
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: list
  id: totrans-849
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 列表
- en: ''
  id: totrans-850
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-851
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: ''
  id: totrans-852
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: a list of *limit* tuples. Each character *c* has an entry *(g, w)* in this list
    with an index of *ord(c)*. Entry *g* (integer) of the tuple is the glyph id of
    the character, and float *w* is its normalized width. The actual width for some
    [`fontsize`](glossary.html#fontsize "fontsize") can be calculated as *w * fontsize*.
    For simple fonts, the *g* entry can always be safely ignored. In all other cases
    *g* is the basis for graphically representing *c*.
  id: totrans-853
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 一个 *limit* 元组列表。每个字符 *c* 在此列表中具有 *(g, w)* 的条目，其索引为 *ord(c)*。元组的 *g*（整数）是字符的字形
    id，浮点数 *w* 是其归一化宽度。某个 [`fontsize`](glossary.html#fontsize "fontsize") 的实际宽度可以计算为
    *w * fontsize*。对于简单字体，*g* 条目总是可以安全忽略的。在所有其他情况下，*g* 是图形表示 *c* 的基础。
- en: ''
  id: totrans-854
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'This function calculates the pixel width of a string called *text*:'
  id: totrans-855
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 此函数计算名为 *text* 的字符串的像素宽度：
- en: ''
  id: totrans-856
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE44]'
  id: totrans-857
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '* * *'
  id: totrans-858
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE45]'
  id: totrans-859
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE45]'
- en: ''
  id: totrans-860
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: New in version 1.14.14
  id: totrans-861
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新于版本 1.14.14
- en: ''
  id: totrans-862
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-863
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-864
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'PDF only: Check whether the object represented by [`xref`](glossary.html#xref
    "xref") is a [`stream`](glossary.html#stream "stream") type. Return is *False*
    if not a PDF or if the number is outside the valid xref range.'
  id: totrans-865
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 仅限 PDF：检查由 [`xref`](glossary.html#xref "xref") 表示的对象是否为 [`stream`](glossary.html#stream
    "stream") 类型。如果不是 PDF 或者编号超出有效的 xref 范围，则返回 *False*。
- en: ''
  id: totrans-866
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-867
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Parameters:'
- en: ''
  id: totrans-868
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**xref** (*int*) – [`xref`](glossary.html#xref "xref") number.'
  id: totrans-869
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**xref** (*int*) – [`xref`](glossary.html#xref "xref") 编号。'
- en: ''
  id: totrans-870
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-871
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: ''
  id: totrans-872
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*True* if the object definition is followed by data wrapped in keyword pair
    *stream*, *endstream*.'
  id: totrans-873
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果对象定义后跟有关键词对 *stream*、*endstream* 包装的数据，则返回 *True*。
- en: '* * *'
  id: totrans-874
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE46]'
  id: totrans-875
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE46]'
- en: ''
  id: totrans-876
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Increase the [`xref`](glossary.html#xref "xref") by one entry and return that
    number. This can then be used to insert a new object.
  id: totrans-877
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 将 [`xref`](glossary.html#xref "xref") 的条目增加一个并返回该编号。然后可以用于插入一个新的对象。
- en: ''
  id: totrans-878
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-879
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Return type:'
- en: ''
  id: totrans-880
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'int :returns: the number of the new [`xref`](glossary.html#xref "xref") entry.
    Please note, that only a new entry in the PDF’s cross reference table is created.
    At this point, there will not yet exist a PDF object associated with it. To create
    an (empty) object with this number use `doc.update_xref(xref, "<<>>")`.'
  id: totrans-881
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'int :returns: 新的 [`xref`](glossary.html#xref "xref") 条目的编号。请注意，这只会在 PDF 的交叉引用表中创建一个新的条目。此时，还不存在与之相关联的
    PDF 对象。要创建一个（空的）具有该编号的对象，请使用 `doc.update_xref(xref, "<<>>")`。'
- en: '* * *'
  id: totrans-882
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE47]'
  id: totrans-883
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE47]'
- en: ''
  id: totrans-884
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return length of [`xref`](glossary.html#xref "xref") table.
  id: totrans-885
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回 [`xref`](glossary.html#xref "xref") 表的长度。
- en: ''
  id: totrans-886
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return type:'
  id: totrans-887
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Return type:'
- en: ''
  id: totrans-888
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: int
  id: totrans-889
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: int
- en: ''
  id: totrans-890
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-891
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: ''
  id: totrans-892
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the number of entries in the [`xref`](glossary.html#xref "xref") table.
  id: totrans-893
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[`xref`](glossary.html#xref "xref") 表中的条目数量。'
- en: '* * *'
  id: totrans-894
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE48]'
  id: totrans-895
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE48]'
- en: ''
  id: totrans-896
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Compute the quadrilateral of a text span extracted via options “dict” or “rawdict”
    of [`Page.get_text()`](page.html#Page.get_text "Page.get_text").
  id: totrans-897
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算通过“dict”或“rawdict”选项从 [`Page.get_text()`](page.html#Page.get_text "Page.get_text")
    提取的文本跨度的四边形。
- en: ''
  id: totrans-898
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-899
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Parameters:'
- en: ''
  id: totrans-900
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**line_dir** (*tuple*) – `line["dir"]` of the owning line. Use `None` for a
    span from [`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace").'
  id: totrans-901
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**line_dir** (*tuple*) – 拥有线的 `line["dir"]`。对于从 [`Page.get_texttrace()`](#Page.get_texttrace
    "Page.get_texttrace") 获得的跨度，使用 `None`。'
- en: ''
  id: totrans-902
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-903
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**span** (*dict*) – the span.'
  id: totrans-904
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**span** (*dict*) – 这个跨度。'
- en: ''
  id: totrans-905
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-906
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-907
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-908
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Returns:'
- en: ''
  id: totrans-909
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the [Quad](quad.html#quad) of the span, usable for text marker annotations (‘Highlight’,
    etc.).
  id: totrans-910
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 选择跨度的[四边形](quad.html#quad)，可用于文本标记注释（“高亮”等）。
- en: '* * *'
  id: totrans-911
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE49]'
  id: totrans-912
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE49]'
- en: ''
  id: totrans-913
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Compute the quadrilateral of a text character extracted via option “rawdict”
    of [`Page.get_text()`](page.html#Page.get_text "Page.get_text").
  id: totrans-914
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算通过[`Page.get_text()`](page.html#Page.get_text "Page.get_text")选项“rawdict”提取的文本字符的四边形。
- en: ''
  id: totrans-915
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-916
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-917
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**line_dir** (*tuple*) – `line["dir"]` of the owning line. Use `None` for a
    span from [`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace").'
  id: totrans-918
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**line_dir** (*tuple*) – 所属行的`line["dir"]`。对于从[`Page.get_texttrace()`](#Page.get_texttrace
    "Page.get_texttrace")获取的跨度，请使用`None`。'
- en: ''
  id: totrans-919
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-920
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**span** (*dict*) – the span.'
  id: totrans-921
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**span** (*dict*) – 范围。'
- en: ''
  id: totrans-922
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-923
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**char** (*dict*) – the character.'
  id: totrans-924
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**char** (*dict*) – 字符。'
- en: ''
  id: totrans-925
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-926
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-927
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-928
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-929
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the [Quad](quad.html#quad) of the character, usable for text marker annotations
    (‘Highlight’, etc.).
  id: totrans-930
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 字符的[四边形](quad.html#quad)，可用于文本标记注释（“高亮”等）。
- en: '* * *'
  id: totrans-931
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE50]'
  id: totrans-932
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE50]'
- en: ''
  id: totrans-933
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Compute the quadrilateral of a subset of characters of a span extracted via
    option “rawdict” of [`Page.get_text()`](page.html#Page.get_text "Page.get_text").
  id: totrans-934
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算通过[`Page.get_text()`](page.html#Page.get_text "Page.get_text")选项“rawdict”提取的文本跨度的字符子集的四边形。
- en: ''
  id: totrans-935
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-936
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-937
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**line_dir** (*tuple*) – `line["dir"]` of the owning line. Use `None` for a
    span from [`Page.get_texttrace()`](#Page.get_texttrace "Page.get_texttrace").'
  id: totrans-938
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**line_dir** (*tuple*) – 所属行的`line["dir"]`。对于从[`Page.get_texttrace()`](#Page.get_texttrace
    "Page.get_texttrace")获取的跨度，请使用`None`。'
- en: ''
  id: totrans-939
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-940
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**span** (*dict*) – the span.'
  id: totrans-941
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**span** (*dict*) – 范围。'
- en: ''
  id: totrans-942
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-943
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**chars** (*list*) – the characters to consider. If given, the selected extraction
    option must be “rawdict”.'
  id: totrans-944
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**chars** (*list*) – 要考虑的字符。如果给定，则所选的提取选项必须为“rawdict”。'
- en: ''
  id: totrans-945
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-946
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-947
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-948
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-949
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the [Quad](quad.html#quad) of the selected characters, usable for text marker
    annotations (‘Highlight’, etc.).
  id: totrans-950
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 选择字符的[四边形](quad.html#quad)，可用于文本标记注释（“高亮”等）。
- en: '* * *'
  id: totrans-951
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE51]'
  id: totrans-952
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE51]'
- en: ''
  id: totrans-953
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Compute the quadrilateral of a subset of spans of a text line extracted via
    options “dict” or “rawdict” of [`Page.get_text()`](page.html#Page.get_text "Page.get_text").
  id: totrans-954
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 计算通过[`Page.get_text()`](page.html#Page.get_text "Page.get_text")选项“dict”或“rawdict”提取的文本行跨度的四边形的子集。
- en: ''
  id: totrans-955
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Parameters:'
  id: totrans-956
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 参数：
- en: ''
  id: totrans-957
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**line** (*dict*) – the line.'
  id: totrans-958
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**line** (*dict*) – 行。'
- en: ''
  id: totrans-959
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-960
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: '**spans** (*list*) – a sub-list of `line["spans"]`. If omitted, the full line
    quad will be returned.'
  id: totrans-961
  prefs:
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**spans** (*list*) – `line["spans"]`的子列表。如果省略，则返回完整的行四边形。'
- en: ''
  id: totrans-962
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-963
  prefs:
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-964
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-965
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-966
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: the [Quad](quad.html#quad) of the selected line spans, usable for text marker
    annotations (‘Highlight’, etc.).
  id: totrans-967
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 选择行跨度的[四边形](quad.html#quad)，可用于文本标记注释（“高亮”等）。
- en: '* * *'
  id: totrans-968
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE52]'
  id: totrans-969
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE52]'
- en: ''
  id: totrans-970
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the name of Tesseract’s language support folder. Use this function if
    the environment variable [`TESSDATA_PREFIX`](#TESSDATA_PREFIX "TESSDATA_PREFIX")
    has not been set.
  id: totrans-971
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回Tesseract语言支持文件夹的名称。如果环境变量[`TESSDATA_PREFIX`](#TESSDATA_PREFIX "TESSDATA_PREFIX")未设置，请使用此函数。
- en: ''
  id: totrans-972
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Returns:'
  id: totrans-973
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回：
- en: ''
  id: totrans-974
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`os.getenv("TESSDATA_PREFIX")` if not `None`. Otherwise, if Tesseract-OCR is
    installed, locate the name of `tessdata`. If no installation is found, return
    `False`.'
  id: totrans-975
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如果未设置`os.getenv("TESSDATA_PREFIX")`，则为`False`。否则，如果已安装Tesseract-OCR，请定位`tessdata`的名称。如果未找到安装，则返回`False`。
- en: ''
  id: totrans-976
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The folder name can be used as parameter `tessdata` in methods [`Page.get_textpage_ocr()`](page.html#Page.get_textpage_ocr
    "Page.get_textpage_ocr"), [`Pixmap.pdfocr_save()`](pixmap.html#Pixmap.pdfocr_save
    "Pixmap.pdfocr_save") and [`Pixmap.pdfocr_tobytes()`](pixmap.html#Pixmap.pdfocr_tobytes
    "Pixmap.pdfocr_tobytes").
  id: totrans-977
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 文件夹名称可用作方法[`Page.get_textpage_ocr()`](page.html#Page.get_textpage_ocr "Page.get_textpage_ocr")、[`Pixmap.pdfocr_save()`](pixmap.html#Pixmap.pdfocr_save
    "Pixmap.pdfocr_save")和[`Pixmap.pdfocr_tobytes()`](pixmap.html#Pixmap.pdfocr_tobytes
    "Pixmap.pdfocr_tobytes")的参数。
- en: '* * *'
  id: totrans-978
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE53]'
  id: totrans-979
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE53]'
- en: ''
  id: totrans-980
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE54]'
  id: totrans-981
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE54]'
- en: ''
  id: totrans-982
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE55]'
  id: totrans-983
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE55]'
- en: ''
  id: totrans-984
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Return the (unique) infinite rectangle `Rect(-2147483648.0, -2147483648.0,
    2147483520.0, 2147483520.0)`, resp. the [IRect](irect.html#irect) and [Quad](quad.html#quad)
    counterparts. It is the largest possible rectangle: all valid rectangles are contained
    in it.'
  id: totrans-985
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回（唯一的）无限矩形 `Rect(-2147483648.0, -2147483648.0, 2147483520.0, 2147483520.0)`
    或其[IRect](irect.html#irect)和[四边形](quad.html#quad)对应物。这是可能的最大矩形：所有有效的矩形都包含在其中。
- en: '* * *'
  id: totrans-986
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '[PRE56]'
  id: totrans-987
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE56]'
- en: ''
  id: totrans-988
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE57]'
  id: totrans-989
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE57]'
- en: ''
  id: totrans-990
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE58]'
  id: totrans-991
  prefs:
  - PREF_BQ
  type: TYPE_PRE
  zh: '[PRE58]'
- en: ''
  id: totrans-992
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Return the “standard” empty and invalid rectangle `Rect(2147483520.0, 2147483520.0,
    -2147483648.0, -2147483648.0)` resp. quad. Its top-left and bottom-right point
    values are reversed compared to the infinite rectangle. It will e.g. be used to
    indicate empty bboxes in `page.get_text("dict")` dictionaries. There are however
    infinitely many empty or invalid rectangles.
  id: totrans-993
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 返回“标准”空和无效矩形 `Rect(2147483520.0, 2147483520.0, -2147483648.0, -2147483648.0)`
    或四边形。其左上角和右下角点的值与无限矩形相比是相反的。例如，将用于指示`page.get_text("dict")`字典中的空边界框。然而，存在无数个空或无效的矩形。
- en: Do you have any feedback on this page?
  id: totrans-994
  prefs: []
  type: TYPE_NORMAL
  zh: 是否对本页有任何反馈？
- en: '* * *'
  id: totrans-995
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-996
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不附带任何形式的保证，无论是明示的还是隐含的。本软件按许可分发，并且除非在该许可条款明确授权的情况下，不得复制、修改或分发。有关许可信息，请参考[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)，或联系美国加利福尼亚州旧金山94129市39
    Mesa Street, Suite 108A的Artifex Software Inc.获取更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-997
  prefs: []
  type: TYPE_NORMAL
  zh: 这份文档涵盖了所有版本直到1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-998
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
