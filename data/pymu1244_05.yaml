- en: The Basics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础知识
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/the-basics.html](https://pymupdf.readthedocs.io/en/latest/the-basics.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/the-basics.html](https://pymupdf.readthedocs.io/en/latest/the-basics.html)
- en: '## Opening a File'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 打开文件'
- en: 'To open a file, do the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开文件，请执行以下操作：
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: See the [list of supported file types](how-to-open-a-file.html#supported-file-types)
    and [The How to Guide on Opening Files](how-to-open-a-file.html#howtoopenafile)
    for more advanced options.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅[supported file types](how-to-open-a-file.html#supported-file-types)和[如何打开文件指南](how-to-open-a-file.html#howtoopenafile)了解更多高级选项。
- en: '* * *  ## Extract text from a PDF'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 从PDF中提取文本'
- en: 'To extract all the text from a PDF file, do the following:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要从PDF文件中提取所有文本，请执行以下操作：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Of course it is not just PDF which can have text extracted - all the [supported
    document file formats](about.html#about-feature-matrix) such as MOBI, EPUB, TXT
    can have their text extracted.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，不仅PDF可以提取文本 - 所有[supported document file formats](about.html#about-feature-matrix)如MOBI、EPUB、TXT等都可以提取其文本。
- en: Note
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: 'If your document contains image based text content the use OCR on the page
    for subsequent text extraction:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的文档包含基于图像的文本内容，则在页面上使用OCR进行后续文本提取：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are many more examples which explain how to extract text from specific
    areas or how to extract tables from documents. Please refer to the [How to Guide
    for Text](recipes-text.html#recipestext).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他示例可以解释如何从特定区域提取文本或从文档中提取表格。请参阅[文本操作指南](recipes-text.html#recipestext)。
- en: You can now also [extract text in Markdown format](rag.html#rag-outputting-as-md).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您也可以以Markdown格式提取文本了[提取文本](rag.html#rag-outputting-as-md)。
- en: '**API reference**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.get_text()`](page.html#Page.get_text "Page.get_text")'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_text()`](page.html#Page.get_text "Page.get_text")'
- en: '* * *  ## Extract images from a PDF'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 从PDF中提取图像'
- en: 'To extract all the images from a PDF file, do the following:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要从PDF文件中提取所有图像，请执行以下操作：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: There are many more examples which explain how to extract text from specific
    areas or how to extract tables from documents. Please refer to the [How to Guide
    for Text](recipes-text.html#recipestext).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多其他示例可以解释如何从特定区域提取文本或从文档中提取表格。请参阅[文本操作指南](recipes-text.html#recipestext)。
- en: '**API reference**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.get_images()`](page.html#Page.get_images "Page.get_images")'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_images()`](page.html#Page.get_images "Page.get_images")'
- en: '[Pixmap](pixmap.html#pixmap)  ## Extract vector graphics'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pixmap](pixmap.html#pixmap)  ## 提取矢量图形'
- en: 'To extract all the vector graphics from a document page, do the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文档页面提取所有矢量图形，请执行以下操作：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will return a dictionary of paths for any vector drawings found on the
    page.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回在页面上找到的任何矢量图形的路径字典。
- en: Note
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: 'Please refer to: [How to Extract Drawings](recipes-drawing-and-graphics.html#recipesdrawingandgraphics-extract-drawings).'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅：[如何提取绘图](recipes-drawing-and-graphics.html#recipesdrawingandgraphics-extract-drawings)。
- en: '**API reference**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.get_drawings()`](page.html#Page.get_drawings "Page.get_drawings")'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_drawings()`](page.html#Page.get_drawings "Page.get_drawings")'
- en: '* * *  ## Merging PDF files'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 合并PDF文件'
- en: 'To merge PDF files, do the following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要合并PDF文件，请执行以下操作：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Merging PDF files with other types of file
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用其他类型文件合并PDF文件
- en: 'With [`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")
    you can invoke the method to merge [supported files](how-to-open-a-file.html#supported-file-types)
    with PDF. For example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")方法来合并[supported
    files](how-to-open-a-file.html#supported-file-types)与PDF。例如：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: It is easy to join PDFs with [`Document.insert_pdf()`](document.html#Document.insert_pdf
    "Document.insert_pdf") & [`Document.insert_file()`](document.html#Document.insert_file
    "Document.insert_file"). Given open PDF documents, you can copy page ranges from
    one to the other. You can select the point where the copied pages should be placed,
    you can revert the page sequence and also change page rotation. This Wiki [article](https://github.com/pymupdf/PyMuPDF/wiki/Inserting-Pages-from-other-PDFs)
    contains a full description.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")
    & [`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")很容易合并PDF。通过打开的PDF文档，您可以从一个文档复制页面范围到另一个文档。您可以选择复制页面的位置，可以恢复页面顺序，还可以更改页面旋转。这篇维基[文章](https://github.com/pymupdf/PyMuPDF/wiki/Inserting-Pages-from-other-PDFs)包含了详细说明。
- en: 'The GUI script [join.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/join-documents/join.py)
    uses this method to join a list of files while also joining the respective table
    of contents segments. It looks like this:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: GUI 脚本[join.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/join-documents/join.py)使用此方法合并文件列表，同时还合并了相应的目录段。看起来像这样：
- en: '[![_images/img-pdfjoiner.jpg](../Images/152902cdc5245997f9ae031b888bd9d3.png)](_images/img-pdfjoiner.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[![_images/img-pdfjoiner.jpg](../Images/152902cdc5245997f9ae031b888bd9d3.png)](_images/img-pdfjoiner.jpg)'
- en: '**API reference**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")'
- en: '[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")'
- en: '* * *'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: Working with Coordinates
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用坐标工作
- en: There is one *mathematical term* that you should feel comfortable with when
    using **PyMuPDF** - **“coordinates”**. Please have a quick look at the [Coordinates](app3.html#coordinates)
    section to understand the coordinate system to help you with positioning objects
    and understand your document space.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**PyMuPDF**时，有一个*数学术语*您应该熟悉 - **“坐标”**。请快速查看[坐标](app3.html#coordinates)部分，了解坐标系统，以帮助您定位对象并了解文档空间。
- en: '* * *'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Adding a watermark to a PDF'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '## 给 PDF 添加水印'
- en: 'To add a watermark to a PDF file, do the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要向 PDF 文件添加水印，请执行以下操作：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Note
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: Adding watermarks is essentially as simple as adding an image at the base of
    each PDF page. You should ensure that the image has the required opacity and aspect
    ratio to make it look the way you need it to.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 添加水印本质上就是在每个PDF页面底部添加一个图像。您应确保图像具有所需的不透明度和纵横比，使其看起来符合您的需求。
- en: In the example above a new image is created from each file reference, but to
    be more performant (by saving memory and file size) this image data should be
    referenced only once - see the code example and explanation on [`Page.insert_image()`](page.html#Page.insert_image
    "Page.insert_image") for the implementation.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例中，每个文件引用都创建了一个新图像，但为了更高效（节省内存和文件大小），应该仅引用此图像数据一次 - 有关实现，请参阅[`Page.insert_image()`](page.html#Page.insert_image
    "Page.insert_image")的代码示例和解释。
- en: '**API reference**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.bound()`](page.html#Page.bound "Page.bound")'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.bound()`](page.html#Page.bound "Page.bound")'
- en: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
- en: '* * *  ## Adding an image to a PDF'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 向 PDF 添加图像'
- en: 'To add an image to a PDF file, for example a logo, do the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要向 PDF 文件添加图像，例如标志，请执行以下操作：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: As with the watermark example you should ensure to be more performant by only
    referencing the image once if possible - see the code example and explanation
    on [`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image").
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 就像水印示例一样，如果可能，应确保通过仅引用一次图像来提高性能 - 有关实现，请参阅[`Page.insert_image()`](page.html#Page.insert_image
    "Page.insert_image")的代码示例和解释。
- en: '**API reference**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[Rect](rect.html#rect)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[矩形](rect.html#rect)'
- en: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
- en: '* * *  ## Rotating a PDF'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 旋转 PDF'
- en: 'To add a rotation to a page, do the following:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要向页面添加旋转，请执行以下操作：
- en: '[PRE9]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.set_rotation()`](page.html#Page.set_rotation "Page.set_rotation")'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.set_rotation()`](page.html#Page.set_rotation "Page.set_rotation")'
- en: '* * *  ## Cropping a PDF'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 裁剪 PDF'
- en: 'To crop a page to a defined [Rect](rect.html#rect), do the following:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要将页面裁剪为定义的[矩形](rect.html#rect)，请执行以下操作：
- en: '[PRE10]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.set_cropbox()`](page.html#Page.set_cropbox "Page.set_cropbox")'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.set_cropbox()`](page.html#Page.set_cropbox "Page.set_cropbox")'
- en: '* * *  ## Attaching Files'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 附加文件'
- en: 'To attach another file to a page, do the following:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要向页面附加另一个文件，请执行以下操作：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: When adding the file with [`Page.add_file_annot()`](page.html#Page.add_file_annot
    "Page.add_file_annot") note that the third parameter for the `filename` should
    include the actual file extension. Without this the attachment possibly will not
    be able to be recognized as being something which can be opened. For example,
    if the `filename` is just *“attachment”* when view the resulting PDF and attempting
    to open the attachment you may well get an error. However, with *“attachment.pdf”*
    this can be recognized and opened by PDF viewers as a valid file type.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Page.add_file_annot()`](page.html#Page.add_file_annot "Page.add_file_annot")添加文件时，请注意`filename`的第三个参数应包括实际的文件扩展名。如果没有这个，附件可能无法被识别为可以打开的内容。例如，如果`filename`只是“附件”，则在查看生成的
    PDF 并尝试打开附件时可能会出现错误。但是，使用“附件.pdf”则可以被 PDF 查看器识别并打开为有效的文件类型。
- en: The default icon for the attachment is by default a “push pin”, however you
    can change this by setting the `icon` parameter.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 附件的默认图标默认是“推销钉”，但您可以通过设置`icon`参数来更改它。
- en: '**API reference**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[Point](point.html#point)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
- en: '[`Page.add_file_annot()`](page.html#Page.add_file_annot "Page.add_file_annot")'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.add_file_annot()`](page.html#Page.add_file_annot "Page.add_file_annot")'
- en: '* * *  ## Embedding Files'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 嵌入文件'
- en: 'To embed a file to a document, do the following:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件嵌入文档中，请执行以下操作：
- en: '[PRE12]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Note
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步进行**'
- en: As with [attaching files](#the-basics-attaching-files), when adding the file
    with [`Document.embfile_add()`](document.html#Document.embfile_add "Document.embfile_add")
    note that the first parameter for the `filename` should include the actual file
    extension.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 就像[附加文件](#the-basics-attaching-files)时，使用[`Document.embfile_add()`](document.html#Document.embfile_add
    "Document.embfile_add")添加文件时，请注意`filename`的第一个参数应包括实际的文件扩展名。
- en: '**API reference**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
- en: '[`Document.embfile_add()`](document.html#Document.embfile_add "Document.embfile_add")'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.embfile_add()`](document.html#Document.embfile_add "Document.embfile_add")'
- en: '* * *  ## Deleting Pages'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 删除页面'
- en: 'To delete a page from a document, do the following:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文档中删除页面，请执行以下操作：
- en: '[PRE13]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To delete a multiple pages from a document, do the following:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文档中删除多个页面，请执行以下操作：
- en: '[PRE14]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: What happens if I delete a page referred to by bookmarks or hyperlinks?
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果删除书签或超链接引用的页面会发生什么？
- en: A bookmark (entry in the Table of Contents) will become inactive and will no
    longer navigate to any page.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 书签（目录中的条目）将变为无效，并且将不再导航到任何页面。
- en: A hyperlink will be removed from the page that contains it. The visible content
    on that page will not otherwise be changed in any way.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超链接将从包含它的页面中删除。该页面上的可见内容不会以任何方式改变。
- en: Note
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步进行**'
- en: The page index is zero-based, so to delete page 10 of a document you would do
    the following `doc.delete_page(9)`.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 页面索引是从零开始的，因此要删除文档的第10页，您应该执行以下操作 `doc.delete_page(9)`。
- en: Similarly, `doc.delete_pages(from_page=9, to_page=14)` will delete pages 10
    - 15 inclusive.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，`doc.delete_pages(from_page=9, to_page=14)` 将删除第10页至第15页（包括第10页）。
- en: '**API reference**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.delete_page()`](document.html#Document.delete_page "Document.delete_page")'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.delete_page()`](document.html#Document.delete_page "Document.delete_page")'
- en: '[`Document.delete_pages()`](document.html#Document.delete_pages "Document.delete_pages")'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.delete_pages()`](document.html#Document.delete_pages "Document.delete_pages")'
- en: '* * *  ## Re-Arranging Pages'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 重新排列页面'
- en: 'To change the sequence of pages, i.e. re-arrange pages, do the following:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改页面顺序，即重新排列页面，请执行以下操作：
- en: '[PRE15]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Note
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.move_page()`](document.html#Document.move_page "Document.move_page")'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.move_page()`](document.html#Document.move_page "Document.move_page")'
- en: '* * *  ## Copying Pages'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 复制页面'
- en: 'To copy pages, do the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制页面，请执行以下操作：
- en: '[PRE16]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.copy_page()`](document.html#Document.copy_page "Document.copy_page")'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.copy_page()`](document.html#Document.copy_page "Document.copy_page")'
- en: '* * *  ## Selecting Pages'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 选择页面'
- en: 'To select pages, do the following:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择页面，请执行以下操作：
- en: '[PRE17]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步进行**'
- en: With PyMuPDF you have all options to copy, move, delete or re-arrange the pages
    of a PDF. Intuitive methods exist that allow you to do this on a page-by-page
    level, like the [`Document.copy_page()`](document.html#Document.copy_page "Document.copy_page")
    method.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PyMuPDF，您可以复制、移动、删除或重新排列PDF页面的所有选项。存在直观的方法，允许您在页面级别上执行此操作，例如[`Document.copy_page()`](document.html#Document.copy_page
    "Document.copy_page")方法。
- en: Or you alternatively prepare a complete new page layout in form of a Python
    sequence, that contains the page numbers you want, in the sequence you want, and
    as many times as you want each page. The following may illustrate what can be
    done with [`Document.select()`](document.html#Document.select "Document.select")
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 或者您可以准备一个完整的新页面布局，形式为Python序列，其中包含您想要的页码、您想要的顺序以及每个页面想要的次数。以下可能说明了可以使用[`Document.select()`](document.html#Document.select
    "Document.select")做什么。
- en: '[PRE18]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now let’s prepare a PDF for double-sided printing (on a printer not directly
    supporting this):'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们为双面打印准备一个PDF（在不直接支持此功能的打印机上）：
- en: 'The number of pages is given by `len(doc)` (equal to `doc.page_count`). The
    following lists represent the even and the odd page numbers, respectively:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 页面数量由`len(doc)`给出（等同于`doc.page_count`）。以下列表分别表示偶数页和奇数页的页码：
- en: '[PRE19]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'This snippet creates the respective sub documents which can then be used to
    print the document:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段创建相应的子文档，然后可以用于打印文档：
- en: '[PRE20]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: For more information also have a look at this Wiki [article](https://github.com/pymupdf/PyMuPDF/wiki/Rearranging-Pages-of-a-PDF).
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请查看此Wiki [文章](https://github.com/pymupdf/PyMuPDF/wiki/Rearranging-Pages-of-a-PDF)。
- en: 'The following example will reverse the order of all pages (**extremely fast:**
    sub-second time for the 756 pages of the [Adobe PDF References](app3.html#adobemanual)):'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例将颠倒所有页面的顺序（**极快：** Adobe PDF参考手册的756页在几秒钟内完成）：
- en: '[PRE21]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This snippet duplicates the PDF with itself so that it will contain the pages
    *0, 1, …, n, 0, 1, …, n* **(extremely fast and without noticeably increasing the
    file size!)**:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码片段将PDF与其自身复制，以便包含页面*0, 1, …, n, 0, 1, …, n* **（非常快且几乎不增加文件大小！）**：
- en: '[PRE22]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**API reference**'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Document.select()`](document.html#Document.select "Document.select")'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.select()`](document.html#Document.select "Document.select")'
- en: '* * *  ## Adding Blank Pages'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 添加空白页'
- en: 'To add a blank page, do the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加空白页，请执行以下操作：
- en: '[PRE23]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Note
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步了解**'
- en: 'Use this to create the page with another pre-defined paper format:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此方法创建具有预定义纸张格式的页面：
- en: '[PRE24]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The convenience function [`paper_size()`](functions.html#paper_size "paper_size")
    knows over 40 industry standard paper formats to choose from. To see them, inspect
    dictionary `paperSizes`. Pass the desired dictionary key to [`paper_size()`](functions.html#paper_size
    "paper_size") to retrieve the paper dimensions. Upper and lower case is supported.
    If you append “-L” to the format name, the landscape version is returned.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 便捷函数[`paper_size()`](functions.html#paper_size "paper_size")了解超过40种行业标准纸张格式供选择。要查看它们，请检查字典`paperSizes`。将所需的字典键传递给[`paper_size()`](functions.html#paper_size
    "paper_size")以检索纸张尺寸。支持大小写。如果在格式名称后附加“-L”，则返回横向版本。
- en: 'Here is a 3-liner that creates a PDF: with one empty page. Its file size is
    460 bytes:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个三行代码，创建了一个带有一个空白页的PDF。文件大小为460字节：
- en: '[PRE25]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '**API reference**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Document.new_page()`](document.html#Document.new_page "Document.new_page")'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.new_page()`](document.html#Document.new_page "Document.new_page")'
- en: '`paperSizes`'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`paperSizes`'
- en: '* * *  ## Inserting Pages with Text Content'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 插入带文本内容的页面'
- en: Using the [`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")
    method also inserts a new page and accepts the same [`width`](irect.html#IRect.width
    "IRect.width") and [`height`](irect.html#IRect.height "IRect.height") parameters.
    But it lets you also insert arbitrary text into the new page and returns the number
    of inserted lines.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")方法也会插入新页面，并接受相同的[`width`](irect.html#IRect.width
    "IRect.width")和[`height`](irect.html#IRect.height "IRect.height")参数。但它还允许您将任意文本插入新页面，并返回插入的行数。
- en: '[PRE26]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步了解**'
- en: The text parameter can be a (sequence of) string (assuming UTF-8 encoding).
    Insertion will start at [Point](point.html#point) (50, 72), which is one inch
    below top of page and 50 points from the left. The number of inserted text lines
    is returned.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 文本参数可以是（序列的）字符串（假定UTF-8编码）。插入将从[Point](point.html#point)（50, 72）开始，这是距离页面顶部一英寸下方并距左侧50点。返回插入的文本行数。
- en: '**API reference**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")'
- en: '* * *  ## Splitting Single Pages'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 分割单页'
- en: 'This deals with splitting up pages of a PDF in arbitrary pieces. For example,
    you may have a PDF with *Letter* format pages which you want to print with a magnification
    factor of four: each page is split up in 4 pieces which each going to a separate
    PDF page in *Letter* format again.'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这涉及将PDF页面分割成任意大小的片段。例如，您可能有一个以*Letter*格式的PDF页面，您希望以四倍放大率打印：每个页面分割成4个片段，每个片段再放到*Letter*格式的单独PDF页面中。
- en: '[PRE27]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Example:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '![_images/img-posterize.png](../Images/357d3711aa806c0456c5f4d784a1dc49.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-posterize.png](../Images/357d3711aa806c0456c5f4d784a1dc49.png)'
- en: Note
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
- en: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
- en: '* * *  ## Combining Single Pages'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 合并单页'
- en: This deals with joining PDF pages to form a new PDF with pages each combining
    two or four original ones (also called “2-up”, “4-up”, etc.). This could be used
    to create booklets or thumbnail-like overviews.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这涉及将PDF页面合并以形成一个新的PDF，其中每个页面组合两个或四个原始页面（也称为“2-up”，“4-up”等）。这可以用来创建小册子或类似缩略图的概览。
- en: '[PRE28]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Example:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '![_images/img-4up.png](../Images/fa3604463ab84cc2374f109a7c72253d.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-4up.png](../Images/fa3604463ab84cc2374f109a7c72253d.png)'
- en: Note
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
- en: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
- en: '* * *  ## PDF Encryption & Decryption'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## PDF加密与解密'
- en: 'Starting with version 1.16.0, PDF decryption and encryption (using passwords)
    are fully supported. You can do the following:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本1.16.0开始，完全支持PDF解密和加密（使用密码）。您可以执行以下操作：
- en: Check whether a document is password protected / (still) encrypted ([`Document.needs_pass`](document.html#Document.needs_pass
    "Document.needs_pass"), [`Document.is_encrypted`](document.html#Document.is_encrypted
    "Document.is_encrypted")).
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查文档是否受密码保护/（仍然）加密（[`Document.needs_pass`](document.html#Document.needs_pass
    "Document.needs_pass")，[`Document.is_encrypted`](document.html#Document.is_encrypted
    "Document.is_encrypted")）。
- en: Gain access authorization to a document ([`Document.authenticate()`](document.html#Document.authenticate
    "Document.authenticate")).
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获得对文档的访问授权（[`Document.authenticate()`](document.html#Document.authenticate "Document.authenticate")）。
- en: Set encryption details for PDF files using [`Document.save()`](document.html#Document.save
    "Document.save") or `Document.write()` and
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [`Document.save()`](document.html#Document.save "Document.save") 或 `Document.write()`
    设置PDF文件的加密详细信息，
- en: decrypt or encrypt the content
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解密或加密内容
- en: ''
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: set password(s)
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置密码（们）
- en: ''
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: set the encryption method
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置加密方法
- en: ''
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: set permission details
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置权限详细信息
- en: Note
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'A PDF document may have two different passwords:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: PDF文档可能有两个不同的密码：
- en: The **owner password** provides full access rights, including changing passwords,
    encryption method, or permission detail.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**所有者密码** 提供完全的访问权限，包括更改密码、加密方法或权限详细信息。'
- en: The **user password** provides access to document content according to the established
    permission details. If present, opening the PDF in a viewer will require providing
    it.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户密码** 根据建立的权限详细信息提供对文档内容的访问。如果存在，则在查看器中打开PDF时需要提供此密码。'
- en: Method [`Document.authenticate()`](document.html#Document.authenticate "Document.authenticate")
    will automatically establish access rights according to the password used.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 方法 [`Document.authenticate()`](document.html#Document.authenticate "Document.authenticate")
    将根据使用的密码自动建立访问权限。
- en: The following snippet creates a new PDF and encrypts it with separate user and
    owner passwords. Permissions are granted to print, copy and annotate, but no changes
    are allowed to someone authenticating with the user password.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的片段创建一个新的PDF，并使用单独的用户和所有者密码加密它。授权允许打印、复制和注释，但对于使用用户密码进行身份验证的用户不允许进行任何更改。
- en: '[PRE29]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Note
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: 'Opening this document with some viewer (Nitro Reader 5) reflects these settings:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 使用某些查看器（Nitro Reader 5）打开此文档会反映这些设置：
- en: '![_images/img-encrypting.jpg](../Images/9914d48b964e479f469dc44f3904247e.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-encrypting.jpg](../Images/9914d48b964e479f469dc44f3904247e.png)'
- en: '**Decrypting** will automatically happen on save as before when no encryption
    parameters are provided.'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '**解密** 将在未提供加密参数的情况下自动保存。'
- en: To **keep the encryption method** of a PDF save it using `encryption=pymupdf.PDF_ENCRYPT_KEEP`.
    If `doc.can_save_incrementally() == True`, an incremental save is also possible.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 要**保留 PDF 的加密方法**，请使用 `encryption=pymupdf.PDF_ENCRYPT_KEEP` 进行保存。如果 `doc.can_save_incrementally()
    == True`，还可以进行增量保存。
- en: To **change the encryption method** specify the full range of options above
    (`encryption`, `owner_pw`, `user_pw`, [`permissions`](document.html#Document.permissions
    "Document.permissions")). An incremental save is **not possible** in this case.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 要**更改加密方法**，请指定上述所有选项的完整范围（`encryption`、`owner_pw`、`user_pw`、[`permissions`](document.html#Document.permissions
    "Document.permissions")）。在这种情况下，**不可进行增量保存**。
- en: '**API reference**'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.save()`](document.html#Document.save "Document.save")'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.save()`](document.html#Document.save "Document.save")'
- en: '* * *  ## Extracting Tables from a Page'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 从页面提取表格'
- en: Tables can be found and extracted from any document [Page](page.html#page).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从任何文档 [Page](page.html#page) 找到并提取表格。
- en: '[PRE30]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.find_tables()`](page.html#Page.find_tables "Page.find_tables")'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.find_tables()`](page.html#Page.find_tables "Page.find_tables")'
- en: Important
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: There is also the [pdf2docx extract tables method](https://pdf2docx.readthedocs.io/en/latest/quickstart.table.html)
    which is capable of table extraction if you prefer.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 还有 [pdf2docx 提取表格方法](https://pdf2docx.readthedocs.io/en/latest/quickstart.table.html)，如果您愿意，它可以进行表格提取。
- en: '* * *  ## Getting Page Links'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 获取页面链接'
- en: Links can be extracted from a [Page](page.html#page) to return [Link](link.html#link)
    objects.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从 [Page](page.html#page) 中提取链接以返回 [Link](link.html#link) 对象。
- en: '[PRE31]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Note
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.first_link()`](page.html#Page.first_link "Page.first_link")'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.first_link()`](page.html#Page.first_link "Page.first_link")'
- en: '* * *  ## Getting All Annotations from a Document'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 获取文档中的所有注释'
- en: Annotations ([Annot](annot.html#annot)) on pages can be retrieved with the `page.annots()`
    method.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 页面上的注释（[Annot](annot.html#annot)）可以使用 `page.annots()` 方法检索。
- en: '[PRE32]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.annots()`](page.html#Page.annots "Page.annots")'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.annots()`](page.html#Page.annots "Page.annots")'
- en: '* * *  ## Redacting content from a **PDF**'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 从 **PDF** 中删除内容'
- en: Redactions are special types of annotations which can be marked onto a document
    page to denote an area on the page which should be securely removed. After marking
    an area with a rectangle then this area will be marked for *redaction*, once the
    redaction is *applied* then the content is securly removed.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除**是一种特殊类型的注释，可以标记在文档页面上，以表示应安全删除的页面上的区域。在用矩形标记区域后，此区域将被标记为*删除*，一旦*应用*删除，则内容将被安全地删除。'
- en: 'For example if we wanted to redact all instances of the name “Jane Doe” from
    a document we could do the following:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们想要从文档中删除所有“Jane Doe”名称的实例，我们可以执行以下操作：
- en: '[PRE33]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Another example could be redacting an area of a page, but not to redact any
    line art (i.e. vector graphics) within the defined area, by setting a parameter
    flag as follows:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子可能是删除页面的一个区域，但不删除定义区域内的任何线条艺术（即矢量图形），方法是设置以下参数标志：
- en: '[PRE34]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Warning
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Once a redacted version of a document is saved then the redacted content in
    the **PDF** is *irretrievable*. Thus, a redacted area in a document removes text
    and graphics completely from that area.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦保存了文档的删除版本，则 **PDF** 中的删除内容是*无法检索*的。因此，文档中的删除区域会完全删除文本和图形。
- en: Note
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步深入**'
- en: The are a few options for creating and applying redactions to a page, for the
    full API details to understand the parameters to control these options refer to
    the API reference.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种选项可用于创建和应用对页面的删除，要了解控制这些选项的参数的完整 API 详细信息，请参阅 API 参考。
- en: '**API reference**'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.add_redact_annot()`](page.html#Page.add_redact_annot "Page.add_redact_annot")'
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.add_redact_annot()`](page.html#Page.add_redact_annot "Page.add_redact_annot")'
- en: '[`Page.apply_redactions()`](page.html#Page.apply_redactions "Page.apply_redactions")'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.apply_redactions()`](page.html#Page.apply_redactions "Page.apply_redactions")'
- en: '* * *  ## Converting PDF Documents'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *  ## 转换 PDF 文档'
- en: We recommend the [pdf2docx](https://pdf2docx.readthedocs.io/en/latest/) library
    which uses **PyMuPDF** and the **python-docx** library to provide simple document
    conversion from **PDF** to **DOCX** format.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 我们推荐使用 [pdf2docx](https://pdf2docx.readthedocs.io/en/latest/) 库，该库使用 **PyMuPDF**
    和 **python-docx** 库提供了从 **PDF** 格式转换为 **DOCX** 格式的简单文档转换。
- en: Do you have any feedback on this page?
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 对此页面有任何反馈吗？
- en: '* * *'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不带任何明示或暗示的担保。此软件在许可下分发，并且除非根据该许可的条款得到明确授权，否则不得复制、修改或分发。有关详细信息，请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)的许可信息或联系美国加利福尼亚州旧金山市Mesa街39号108A套房Artifex
    Software Inc。94129，进一步了解。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖了所有版本直至1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ## Opening a File'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)
    ## 打开一个文件'
- en: 'To open a file, do the following:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开文件，请执行以下操作：
- en: '[PRE35]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Note
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入探讨**'
- en: See the [list of supported file types](how-to-open-a-file.html#supported-file-types)
    and [The How to Guide on Opening Files](how-to-open-a-file.html#howtoopenafile)
    for more advanced options.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[支持的文件类型列表](how-to-open-a-file.html#supported-file-types)和[打开文件的指南](how-to-open-a-file.html#howtoopenafile)以获取更高级的选项。
- en: '* * *'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Extract text from a PDF'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '## 从PDF中提取文本'
- en: 'To extract all the text from a PDF file, do the following:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 要从PDF文件提取所有文本，请执行以下操作：
- en: '[PRE36]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Of course it is not just PDF which can have text extracted - all the [supported
    document file formats](about.html#about-feature-matrix) such as MOBI, EPUB, TXT
    can have their text extracted.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，不仅PDF可以提取文本 - 所有支持的文档文件格式（例如MOBI、EPUB、TXT）都可以提取其文本。
- en: Note
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入探讨**'
- en: 'If your document contains image based text content the use OCR on the page
    for subsequent text extraction:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您的文档包含基于图像的文本内容，则在页面上使用OCR进行后续文本提取：
- en: '[PRE37]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: There are many more examples which explain how to extract text from specific
    areas or how to extract tables from documents. Please refer to the [How to Guide
    for Text](recipes-text.html#recipestext).
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多示例，说明如何从特定区域提取文本或如何从文档中提取表格。请参阅[文本指南](recipes-text.html#recipestext)。
- en: You can now also [extract text in Markdown format](rag.html#rag-outputting-as-md).
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您还可以将文本以Markdown格式提取出来 [提取Markdown格式的文本](rag.html#rag-outputting-as-md)。
- en: '**API reference**'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.get_text()`](page.html#Page.get_text "Page.get_text")'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_text()`](page.html#Page.get_text "Page.get_text")'
- en: '* * *'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Extract images from a PDF'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '## 从PDF中提取图像'
- en: 'To extract all the images from a PDF file, do the following:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 要从PDF文件提取所有图像，请执行以下操作：
- en: '[PRE38]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: Note
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入探讨**'
- en: There are many more examples which explain how to extract text from specific
    areas or how to extract tables from documents. Please refer to the [How to Guide
    for Text](recipes-text.html#recipestext).
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 还有许多示例，说明如何从特定区域提取文本或如何从文档中提取表格。请参阅[文本指南](recipes-text.html#recipestext)。
- en: '**API reference**'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.get_images()`](page.html#Page.get_images "Page.get_images")'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_images()`](page.html#Page.get_images "Page.get_images")'
- en: '[Pixmap](pixmap.html#pixmap)'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pixmap](pixmap.html#pixmap)'
- en: '## Extract vector graphics'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '## 提取矢量图形'
- en: 'To extract all the vector graphics from a document page, do the following:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文档页面提取所有矢量图形，请执行以下操作：
- en: '[PRE39]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: This will return a dictionary of paths for any vector drawings found on the
    page.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回一个包含页面上找到的所有矢量图形路径的字典。
- en: Note
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入探讨**'
- en: 'Please refer to: [How to Extract Drawings](recipes-drawing-and-graphics.html#recipesdrawingandgraphics-extract-drawings).'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考：[如何提取绘图](recipes-drawing-and-graphics.html#recipesdrawingandgraphics-extract-drawings)。
- en: '**API reference**'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.get_drawings()`](page.html#Page.get_drawings "Page.get_drawings")'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_drawings()`](page.html#Page.get_drawings "Page.get_drawings")'
- en: '* * *'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Merging PDF files'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '## 合并PDF文件'
- en: 'To merge PDF files, do the following:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 要合并PDF文件，请执行以下操作：
- en: '[PRE40]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Merging PDF files with other types of file
  id: totrans-305
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将PDF文件与其他类型文件合并
- en: 'With [`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")
    you can invoke the method to merge [supported files](how-to-open-a-file.html#supported-file-types)
    with PDF. For example:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")
    您可以调用方法与PDF合并 [支持的文件](how-to-open-a-file.html#supported-file-types)。例如：
- en: '[PRE41]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Note
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入探讨**'
- en: It is easy to join PDFs with [`Document.insert_pdf()`](document.html#Document.insert_pdf
    "Document.insert_pdf") & [`Document.insert_file()`](document.html#Document.insert_file
    "Document.insert_file"). Given open PDF documents, you can copy page ranges from
    one to the other. You can select the point where the copied pages should be placed,
    you can revert the page sequence and also change page rotation. This Wiki [article](https://github.com/pymupdf/PyMuPDF/wiki/Inserting-Pages-from-other-PDFs)
    contains a full description.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")和[`Document.insert_file()`](document.html#Document.insert_file
    "Document.insert_file")轻松合并PDF文件。在打开的PDF文档中，您可以从一个文档复制页面范围到另一个文档中。您可以选择复制页面应放置的位置，可以反转页面顺序，还可以更改页面旋转。这篇维基[文章](https://github.com/pymupdf/PyMuPDF/wiki/Inserting-Pages-from-other-PDFs)包含了详细说明。
- en: 'The GUI script [join.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/join-documents/join.py)
    uses this method to join a list of files while also joining the respective table
    of contents segments. It looks like this:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: GUI脚本[join.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/join-documents/join.py)使用此方法来连接文件列表，同时连接相应的目录段。它看起来像这样：
- en: '[![_images/img-pdfjoiner.jpg](../Images/152902cdc5245997f9ae031b888bd9d3.png)](_images/img-pdfjoiner.jpg)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '[![_images/img-pdfjoiner.jpg](../Images/152902cdc5245997f9ae031b888bd9d3.png)](_images/img-pdfjoiner.jpg)'
- en: '**API reference**'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")'
- en: '[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")'
- en: Merging PDF files with other types of file
  id: totrans-316
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 将PDF文件与其他类型的文件合并
- en: 'With [`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")
    you can invoke the method to merge [supported files](how-to-open-a-file.html#supported-file-types)
    with PDF. For example:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")您可以调用此方法与PDF合并[支持的文件](how-to-open-a-file.html#supported-file-types)。例如：
- en: '[PRE42]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Note
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: It is easy to join PDFs with [`Document.insert_pdf()`](document.html#Document.insert_pdf
    "Document.insert_pdf") & [`Document.insert_file()`](document.html#Document.insert_file
    "Document.insert_file"). Given open PDF documents, you can copy page ranges from
    one to the other. You can select the point where the copied pages should be placed,
    you can revert the page sequence and also change page rotation. This Wiki [article](https://github.com/pymupdf/PyMuPDF/wiki/Inserting-Pages-from-other-PDFs)
    contains a full description.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")和[`Document.insert_file()`](document.html#Document.insert_file
    "Document.insert_file")轻松合并PDF文件。在打开的PDF文档中，您可以从一个文档复制页面范围到另一个文档中。您可以选择复制页面应放置的位置，可以反转页面顺序，还可以更改页面旋转。这篇维基[文章](https://github.com/pymupdf/PyMuPDF/wiki/Inserting-Pages-from-other-PDFs)包含了详细说明。
- en: 'The GUI script [join.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/join-documents/join.py)
    uses this method to join a list of files while also joining the respective table
    of contents segments. It looks like this:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: GUI脚本[join.py](https://github.com/pymupdf/PyMuPDF-Utilities/blob/master/examples/join-documents/join.py)使用此方法来连接文件列表，同时连接相应的目录段。它看起来像这样：
- en: '[![_images/img-pdfjoiner.jpg](../Images/152902cdc5245997f9ae031b888bd9d3.png)](_images/img-pdfjoiner.jpg)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '[![_images/img-pdfjoiner.jpg](../Images/152902cdc5245997f9ae031b888bd9d3.png)](_images/img-pdfjoiner.jpg)'
- en: '**API reference**'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")'
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_pdf()`](document.html#Document.insert_pdf "Document.insert_pdf")'
- en: '[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_file()`](document.html#Document.insert_file "Document.insert_file")'
- en: Working with Coordinates
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用坐标
- en: There is one *mathematical term* that you should feel comfortable with when
    using **PyMuPDF** - **“coordinates”**. Please have a quick look at the [Coordinates](app3.html#coordinates)
    section to understand the coordinate system to help you with positioning objects
    and understand your document space.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用**PyMuPDF**时，有一个*数学术语*你应该对其感到舒适 - **“coordinates（坐标）”**。请快速查看[Coordinates（坐标）](app3.html#coordinates)部分，以理解坐标系统，帮助您定位对象并理解文档空间。
- en: '* * *'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Adding a watermark to a PDF'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '## 添加水印到PDF'
- en: 'To add a watermark to a PDF file, do the following:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 要向PDF文件添加水印，请执行以下操作：
- en: '[PRE43]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Note
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: Adding watermarks is essentially as simple as adding an image at the base of
    each PDF page. You should ensure that the image has the required opacity and aspect
    ratio to make it look the way you need it to.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 添加水印实质上就像在每个 PDF 页面的底部添加图像一样简单。确保图像具有所需的不透明度和长宽比以使其看起来符合您的需求。
- en: In the example above a new image is created from each file reference, but to
    be more performant (by saving memory and file size) this image data should be
    referenced only once - see the code example and explanation on [`Page.insert_image()`](page.html#Page.insert_image
    "Page.insert_image") for the implementation.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，从每个文件引用创建了一个新图像，但为了提高性能（节省内存和文件大小），应该只引用一次图像数据 - 请参阅代码示例和[`Page.insert_image()`](page.html#Page.insert_image
    "Page.insert_image")的实现说明。
- en: '**API reference**'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.bound()`](page.html#Page.bound "Page.bound")'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.bound()`](page.html#Page.bound "Page.bound")'
- en: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
  id: totrans-339
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
- en: '* * *'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Adding an image to a PDF'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '## 向 PDF 添加图像'
- en: 'To add an image to a PDF file, for example a logo, do the following:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 要向 PDF 文件添加图像（例如徽标），请执行以下操作：
- en: '[PRE44]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Note
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: '**Taking it further**'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探讨**'
- en: As with the watermark example you should ensure to be more performant by only
    referencing the image once if possible - see the code example and explanation
    on [`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image").
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 与水印示例类似，如果可能的话，确保只引用图像一次以提高性能 - 请参阅代码示例和[`Page.insert_image()`](page.html#Page.insert_image
    "Page.insert_image")上的说明。
- en: '**API reference**'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[Rect](rect.html#rect)'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[矩形](rect.html#rect)'
- en: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.insert_image()`](page.html#Page.insert_image "Page.insert_image")'
- en: '* * *'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Rotating a PDF'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '## 旋转 PDF'
- en: 'To add a rotation to a page, do the following:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 要向页面添加旋转，请执行以下操作：
- en: '[PRE45]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Note
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: '**API reference**'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.set_rotation()`](page.html#Page.set_rotation "Page.set_rotation")'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.set_rotation()`](page.html#Page.set_rotation "Page.set_rotation")'
- en: '* * *'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Cropping a PDF'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '## 裁剪 PDF'
- en: 'To crop a page to a defined [Rect](rect.html#rect), do the following:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 要将页面裁剪到指定的[矩形](rect.html#rect)，请执行以下操作：
- en: '[PRE46]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: Note
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: '**API reference**'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.set_cropbox()`](page.html#Page.set_cropbox "Page.set_cropbox")'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.set_cropbox()`](page.html#Page.set_cropbox "Page.set_cropbox")'
- en: '* * *'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Attaching Files'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '## 附加文件'
- en: 'To attach another file to a page, do the following:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 要向页面附加另一个文件，请执行以下操作：
- en: '[PRE47]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: Note
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: '**Taking it further**'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探讨**'
- en: When adding the file with [`Page.add_file_annot()`](page.html#Page.add_file_annot
    "Page.add_file_annot") note that the third parameter for the `filename` should
    include the actual file extension. Without this the attachment possibly will not
    be able to be recognized as being something which can be opened. For example,
    if the `filename` is just *“attachment”* when view the resulting PDF and attempting
    to open the attachment you may well get an error. However, with *“attachment.pdf”*
    this can be recognized and opened by PDF viewers as a valid file type.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[`Page.add_file_annot()`](page.html#Page.add_file_annot "Page.add_file_annot")添加文件时，请注意`filename`的第三个参数应包括实际的文件扩展名。如果没有这样做，附件可能无法被识别为可以打开的内容。例如，如果`filename`只是“attachment”，在查看生成的
    PDF 并尝试打开附件时可能会出错。但是，使用“attachment.pdf”可以被 PDF 查看器识别并打开为有效的文件类型。
- en: The default icon for the attachment is by default a “push pin”, however you
    can change this by setting the `icon` parameter.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 附件的默认图标默认是“图钉”，但是您可以通过设置`icon`参数进行更改。
- en: '**API reference**'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[Point](point.html#point)'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
- en: '[`Page.add_file_annot()`](page.html#Page.add_file_annot "Page.add_file_annot")'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.add_file_annot()`](page.html#Page.add_file_annot "Page.add_file_annot")'
- en: '* * *'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Embedding Files'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '## 嵌入文件'
- en: 'To embed a file to a document, do the following:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 要将文件嵌入文档中，请执行以下操作：
- en: '[PRE48]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Note
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: '**Taking it further**'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探讨**'
- en: As with [attaching files](#the-basics-attaching-files), when adding the file
    with [`Document.embfile_add()`](document.html#Document.embfile_add "Document.embfile_add")
    note that the first parameter for the `filename` should include the actual file
    extension.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 与[附加文件](#the-basics-attaching-files)类似，使用[`Document.embfile_add()`](document.html#Document.embfile_add
    "Document.embfile_add")添加文件时，请注意`filename`的第一个参数应包括实际的文件扩展名。
- en: '**API reference**'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.tobytes()`](document.html#Document.tobytes "Document.tobytes")'
- en: '[`Document.embfile_add()`](document.html#Document.embfile_add "Document.embfile_add")'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.embfile_add()`](document.html#Document.embfile_add "Document.embfile_add")'
- en: '* * *'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Deleting Pages'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '## 删除页面'
- en: 'To delete a page from a document, do the following:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文档中删除页面，请执行以下操作：
- en: '[PRE49]'
  id: totrans-389
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'To delete a multiple pages from a document, do the following:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 要从文档中删除多个页面，请执行以下操作：
- en: '[PRE50]'
  id: totrans-391
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: What happens if I delete a page referred to by bookmarks or hyperlinks?
  id: totrans-392
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果删除书签或超链接引用的页面会发生什么？
- en: A bookmark (entry in the Table of Contents) will become inactive and will no
    longer navigate to any page.
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录中的书签（目录条目）将变为不活跃状态，并且将不再导航到任何页面。
- en: A hyperlink will be removed from the page that contains it. The visible content
    on that page will not otherwise be changed in any way.
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面上的超链接将被删除。该页面上的可见内容不会以任何方式改变。
- en: Note
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: The page index is zero-based, so to delete page 10 of a document you would do
    the following `doc.delete_page(9)`.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 页面索引从零开始，因此要删除文档的第10页，您需要执行以下操作：`doc.delete_page(9)`。
- en: Similarly, `doc.delete_pages(from_page=9, to_page=14)` will delete pages 10
    - 15 inclusive.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，`doc.delete_pages(from_page=9, to_page=14)` 将删除第10至第15页（包括）。
- en: '**API reference**'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.delete_page()`](document.html#Document.delete_page "Document.delete_page")'
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.delete_page()`](document.html#Document.delete_page "Document.delete_page")'
- en: '[`Document.delete_pages()`](document.html#Document.delete_pages "Document.delete_pages")'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.delete_pages()`](document.html#Document.delete_pages "Document.delete_pages")'
- en: '* * *'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: What happens if I delete a page referred to by bookmarks or hyperlinks?
  id: totrans-403
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果删除书签或超链接引用的页面会发生什么？
- en: A bookmark (entry in the Table of Contents) will become inactive and will no
    longer navigate to any page.
  id: totrans-404
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目录中的书签（目录条目）将变为不活跃状态，并且将不再导航到任何页面。
- en: A hyperlink will be removed from the page that contains it. The visible content
    on that page will not otherwise be changed in any way.
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面上的超链接将被删除。该页面上的可见内容不会以任何方式改变。
- en: Note
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: The page index is zero-based, so to delete page 10 of a document you would do
    the following `doc.delete_page(9)`.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 页面索引从零开始，因此要删除文档的第10页，您需要执行以下操作：`doc.delete_page(9)`。
- en: Similarly, `doc.delete_pages(from_page=9, to_page=14)` will delete pages 10
    - 15 inclusive.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，`doc.delete_pages(from_page=9, to_page=14)` 将删除第10至第15页（包括）。
- en: '**API reference**'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.delete_page()`](document.html#Document.delete_page "Document.delete_page")'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.delete_page()`](document.html#Document.delete_page "Document.delete_page")'
- en: '[`Document.delete_pages()`](document.html#Document.delete_pages "Document.delete_pages")'
  id: totrans-412
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.delete_pages()`](document.html#Document.delete_pages "Document.delete_pages")'
- en: '* * *'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Re-Arranging Pages'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '## 重新排列页面'
- en: 'To change the sequence of pages, i.e. re-arrange pages, do the following:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改页面顺序，即重新排列页面，请执行以下操作：
- en: '[PRE51]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: Note
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.move_page()`](document.html#Document.move_page "Document.move_page")'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.move_page()`](document.html#Document.move_page "Document.move_page")'
- en: '* * *'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Copying Pages'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '## 复制页面'
- en: 'To copy pages, do the following:'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 要复制页面，请执行以下操作：
- en: '[PRE52]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Note
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.copy_page()`](document.html#Document.copy_page "Document.copy_page")'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.copy_page()`](document.html#Document.copy_page "Document.copy_page")'
- en: '* * *'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Selecting Pages'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '## 选择页面'
- en: 'To select pages, do the following:'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 要选择页面，请执行以下操作：
- en: '[PRE53]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: Note
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '**深入了解**'
- en: With PyMuPDF you have all options to copy, move, delete or re-arrange the pages
    of a PDF. Intuitive methods exist that allow you to do this on a page-by-page
    level, like the [`Document.copy_page()`](document.html#Document.copy_page "Document.copy_page")
    method.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 PyMuPDF，您可以选择复制、移动、删除或重新排列 PDF 页面的所有选项。存在直观的方法，允许您按页面进行此操作，例如 [`Document.copy_page()`](document.html#Document.copy_page
    "Document.copy_page") 方法。
- en: Or you alternatively prepare a complete new page layout in form of a Python
    sequence, that contains the page numbers you want, in the sequence you want, and
    as many times as you want each page. The following may illustrate what can be
    done with [`Document.select()`](document.html#Document.select "Document.select")
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 或者您可以准备一个完整的新页面布局，以 Python 序列的形式包含您想要的页面编号，按您想要的顺序，并且每个页面可以包含多次。以下内容可能说明可以通过
    [`Document.select()`](document.html#Document.select "Document.select") 完成的操作。
- en: '[PRE54]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Now let’s prepare a PDF for double-sided printing (on a printer not directly
    supporting this):'
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们为双面打印准备一个 PDF（在不直接支持此功能的打印机上）：
- en: 'The number of pages is given by `len(doc)` (equal to `doc.page_count`). The
    following lists represent the even and the odd page numbers, respectively:'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 页面数由 `len(doc)`（等同于 `doc.page_count`）给出。以下列表分别表示偶数和奇数页码：
- en: '[PRE55]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'This snippet creates the respective sub documents which can then be used to
    print the document:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码段创建相应的子文档，然后可以用于打印文档：
- en: '[PRE56]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: For more information also have a look at this Wiki [article](https://github.com/pymupdf/PyMuPDF/wiki/Rearranging-Pages-of-a-PDF).
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请查看此 Wiki [文章](https://github.com/pymupdf/PyMuPDF/wiki/Rearranging-Pages-of-a-PDF)。
- en: 'The following example will reverse the order of all pages (**extremely fast:**
    sub-second time for the 756 pages of the [Adobe PDF References](app3.html#adobemanual)):'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例将反转所有页面的顺序（**极快：**在[Adobe PDF 参考手册](app3.html#adobemanual)的756页中仅需几秒钟）：
- en: '[PRE57]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'This snippet duplicates the PDF with itself so that it will contain the pages
    *0, 1, …, n, 0, 1, …, n* **(extremely fast and without noticeably increasing the
    file size!)**:'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码段将 PDF 与其自身复制，以便其包含页面 *0, 1, …, n, 0, 1, …, n* **（非常快速且几乎不增加文件大小！）**：
- en: '[PRE58]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '**API reference**'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.select()`](document.html#Document.select "Document.select")'
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.select()`](document.html#Document.select "Document.select")'
- en: '* * *'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Adding Blank Pages'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '## 添加空白页'
- en: 'To add a blank page, do the following:'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加空白页面，请执行以下操作：
- en: '[PRE59]'
  id: totrans-451
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Note
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: 'Use this to create the page with another pre-defined paper format:'
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此方法创建带有另一预定义纸张格式的页面：
- en: '[PRE60]'
  id: totrans-455
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: The convenience function [`paper_size()`](functions.html#paper_size "paper_size")
    knows over 40 industry standard paper formats to choose from. To see them, inspect
    dictionary `paperSizes`. Pass the desired dictionary key to [`paper_size()`](functions.html#paper_size
    "paper_size") to retrieve the paper dimensions. Upper and lower case is supported.
    If you append “-L” to the format name, the landscape version is returned.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 方便函数 [`paper_size()`](functions.html#paper_size "paper_size") 知道超过40种行业标准纸张格式可供选择。要查看它们，请检查字典
    `paperSizes`。将所需的字典键传递给 [`paper_size()`](functions.html#paper_size "paper_size")
    以检索纸张尺寸。支持大小写。如果将格式名称追加“-L”，则返回横向版本。
- en: 'Here is a 3-liner that creates a PDF: with one empty page. Its file size is
    460 bytes:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个三行代码，创建一个带有一个空白页面的 PDF，文件大小为460字节：
- en: '[PRE61]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '**API reference**'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.new_page()`](document.html#Document.new_page "Document.new_page")'
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.new_page()`](document.html#Document.new_page "Document.new_page")'
- en: '`paperSizes`'
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`paperSizes`'
- en: '* * *'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Inserting Pages with Text Content'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '## 插入具有文本内容的页面'
- en: Using the [`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")
    method also inserts a new page and accepts the same [`width`](irect.html#IRect.width
    "IRect.width") and [`height`](irect.html#IRect.height "IRect.height") parameters.
    But it lets you also insert arbitrary text into the new page and returns the number
    of inserted lines.
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 [`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")
    方法还可以插入新页面，并接受相同的 [`width`](irect.html#IRect.width "IRect.width") 和 [`height`](irect.html#IRect.height
    "IRect.height") 参数。但它还允许您在新页面中插入任意文本，并返回插入的行数。
- en: '[PRE62]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Note
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: The text parameter can be a (sequence of) string (assuming UTF-8 encoding).
    Insertion will start at [Point](point.html#point) (50, 72), which is one inch
    below top of page and 50 points from the left. The number of inserted text lines
    is returned.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 文本参数可以是字符串或字符串序列（假设使用 UTF-8 编码）。插入将从[点](point.html#point)（50, 72）开始，这是页面顶部下方一英寸处并距离左侧50点。返回插入的文本行数。
- en: '**API reference**'
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.insert_page()`](document.html#Document.insert_page "Document.insert_page")'
- en: '* * *'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Splitting Single Pages'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '## 分割单页'
- en: 'This deals with splitting up pages of a PDF in arbitrary pieces. For example,
    you may have a PDF with *Letter* format pages which you want to print with a magnification
    factor of four: each page is split up in 4 pieces which each going to a separate
    PDF page in *Letter* format again.'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 这处理将 PDF 页面分割为任意片段。例如，您可能有一个带有 *Letter* 格式页面的 PDF，您希望将其以4倍放大比例打印：每个页面被分割成4个部分，每个部分分别成为
    *Letter* 格式的单独 PDF 页面。
- en: '[PRE63]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Example:'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '![_images/img-posterize.png](../Images/357d3711aa806c0456c5f4d784a1dc49.png)'
  id: totrans-476
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-posterize.png](../Images/357d3711aa806c0456c5f4d784a1dc49.png)'
- en: Note
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
  id: totrans-479
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
- en: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
- en: '* * *'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Combining Single Pages'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '## 合并单页'
- en: This deals with joining PDF pages to form a new PDF with pages each combining
    two or four original ones (also called “2-up”, “4-up”, etc.). This could be used
    to create booklets or thumbnail-like overviews.
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
  zh: 这涉及将PDF页面连接起来形成一个新的PDF，其中每个页面组合两个或四个原始页面（也称为“2-up”，“4-up”等）。这可以用于创建小册子或类似缩略图的概览。
- en: '[PRE64]'
  id: totrans-484
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'Example:'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 示例：
- en: '![_images/img-4up.png](../Images/fa3604463ab84cc2374f109a7c72253d.png)'
  id: totrans-486
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-4up.png](../Images/fa3604463ab84cc2374f109a7c72253d.png)'
- en: Note
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
  id: totrans-489
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.cropbox_position()`](page.html#Page.cropbox_position "Page.cropbox_position")'
- en: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.show_pdf_page()`](page.html#Page.show_pdf_page "Page.show_pdf_page")'
- en: '* * *'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## PDF Encryption & Decryption'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '## PDF加密与解密'
- en: 'Starting with version 1.16.0, PDF decryption and encryption (using passwords)
    are fully supported. You can do the following:'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 从版本1.16.0开始，完全支持PDF解密和加密（使用密码）。您可以执行以下操作：
- en: Check whether a document is password protected / (still) encrypted ([`Document.needs_pass`](document.html#Document.needs_pass
    "Document.needs_pass"), [`Document.is_encrypted`](document.html#Document.is_encrypted
    "Document.is_encrypted")).
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查文档是否受密码保护/（仍然）加密（[`Document.needs_pass`](document.html#Document.needs_pass
    "Document.needs_pass")，[`Document.is_encrypted`](document.html#Document.is_encrypted
    "Document.is_encrypted")）。
- en: Gain access authorization to a document ([`Document.authenticate()`](document.html#Document.authenticate
    "Document.authenticate")).
  id: totrans-495
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取对文档的访问授权（[`Document.authenticate()`](document.html#Document.authenticate "Document.authenticate")）。
- en: Set encryption details for PDF files using [`Document.save()`](document.html#Document.save
    "Document.save") or `Document.write()` and
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用[`Document.save()`](document.html#Document.save "Document.save")或`Document.write()`设置PDF文件的加密详细信息，以及
- en: decrypt or encrypt the content
  id: totrans-497
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解密或加密内容
- en: ''
  id: totrans-498
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-499
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: set password(s)
  id: totrans-500
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置密码
- en: ''
  id: totrans-501
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-502
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: set the encryption method
  id: totrans-503
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置加密方法
- en: ''
  id: totrans-504
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-505
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: set permission details
  id: totrans-506
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置权限详细信息
- en: Note
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'A PDF document may have two different passwords:'
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 一个PDF文档可能有两个不同的密码：
- en: The **owner password** provides full access rights, including changing passwords,
    encryption method, or permission detail.
  id: totrans-509
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**所有者密码**提供完全的访问权限，包括更改密码、加密方法或权限详细信息。'
- en: The **user password** provides access to document content according to the established
    permission details. If present, opening the PDF in a viewer will require providing
    it.
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户密码**根据已建立的权限详细信息提供对文档内容的访问。如果存在，使用查看器打开PDF将需要提供它。'
- en: Method [`Document.authenticate()`](document.html#Document.authenticate "Document.authenticate")
    will automatically establish access rights according to the password used.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: 方法[`Document.authenticate()`](document.html#Document.authenticate "Document.authenticate")将根据使用的密码自动建立访问权限。
- en: The following snippet creates a new PDF and encrypts it with separate user and
    owner passwords. Permissions are granted to print, copy and annotate, but no changes
    are allowed to someone authenticating with the user password.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码片段创建了一个新的PDF并使用单独的用户密码和所有者密码加密它。授予打印、复制和注释的权限，但不允许对使用用户密码进行身份验证的人进行更改。
- en: '[PRE65]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Note
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步探索**'
- en: 'Opening this document with some viewer (Nitro Reader 5) reflects these settings:'
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 使用某些查看器（Nitro Reader 5）打开此文档会反映这些设置：
- en: '![_images/img-encrypting.jpg](../Images/9914d48b964e479f469dc44f3904247e.png)'
  id: totrans-517
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-encrypting.jpg](../Images/9914d48b964e479f469dc44f3904247e.png)'
- en: '**Decrypting** will automatically happen on save as before when no encryption
    parameters are provided.'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: '**解密**将像以前一样在保存时自动进行，当未提供加密参数时。'
- en: To **keep the encryption method** of a PDF save it using `encryption=pymupdf.PDF_ENCRYPT_KEEP`.
    If `doc.can_save_incrementally() == True`, an incremental save is also possible.
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 要**保持PDF的加密方法**，请使用`encryption=pymupdf.PDF_ENCRYPT_KEEP`进行保存。如果`doc.can_save_incrementally()
    == True`，也可以进行增量保存。
- en: To **change the encryption method** specify the full range of options above
    (`encryption`, `owner_pw`, `user_pw`, [`permissions`](document.html#Document.permissions
    "Document.permissions")). An incremental save is **not possible** in this case.
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 要**更改加密方法**，请指定上述所有选项的完整范围（`encryption`，`owner_pw`，`user_pw`，[`permissions`](document.html#Document.permissions
    "Document.permissions")）。在这种情况下不能进行增量保存。
- en: '**API reference**'
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Document.save()`](document.html#Document.save "Document.save")'
  id: totrans-522
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Document.save()`](document.html#Document.save "Document.save")'
- en: '* * *'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Extracting Tables from a Page'
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
  zh: '## 从页面提取表格'
- en: Tables can be found and extracted from any document [Page](page.html#page).
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从任何文档中找到并提取表格[Page](page.html#page)。
- en: '[PRE66]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Note
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: '**API参考**'
- en: '[`Page.find_tables()`](page.html#Page.find_tables "Page.find_tables")'
  id: totrans-529
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.find_tables()`](page.html#Page.find_tables "Page.find_tables")'
- en: Important
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: There is also the [pdf2docx extract tables method](https://pdf2docx.readthedocs.io/en/latest/quickstart.table.html)
    which is capable of table extraction if you prefer.
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以选择使用 [pdf2docx 提取表格方法](https://pdf2docx.readthedocs.io/en/latest/quickstart.table.html)。
- en: '* * *'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Getting Page Links'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '## 获取页面链接'
- en: Links can be extracted from a [Page](page.html#page) to return [Link](link.html#link)
    objects.
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从 [Page](page.html#page) 中提取链接以返回 [Link](link.html#link) 对象。
- en: '[PRE67]'
  id: totrans-535
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: Note
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.first_link()`](page.html#Page.first_link "Page.first_link")'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.first_link()`](page.html#Page.first_link "Page.first_link")'
- en: '* * *'
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Getting All Annotations from a Document'
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: '## 从文档获取所有注释'
- en: Annotations ([Annot](annot.html#annot)) on pages can be retrieved with the `page.annots()`
    method.
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 页面上的注释 ([Annot](annot.html#annot)) 可以使用 `page.annots()` 方法检索。
- en: '[PRE68]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: Note
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**API reference**'
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.annots()`](page.html#Page.annots "Page.annots")'
  id: totrans-545
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.annots()`](page.html#Page.annots "Page.annots")'
- en: '* * *'
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Redacting content from a **PDF**'
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: '## 从**PDF**中编辑内容'
- en: Redactions are special types of annotations which can be marked onto a document
    page to denote an area on the page which should be securely removed. After marking
    an area with a rectangle then this area will be marked for *redaction*, once the
    redaction is *applied* then the content is securly removed.
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: 删除是一种特殊类型的注释，可以标记在文档页面上，以示应安全删除页面上的某个区域。标记了矩形区域后，此区域将被标记为*删除*，一旦*应用*删除，则内容将被安全地删除。
- en: 'For example if we wanted to redact all instances of the name “Jane Doe” from
    a document we could do the following:'
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们想从文档中删除所有“Jane Doe”姓名的实例，可以按以下步骤操作：
- en: '[PRE69]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Another example could be redacting an area of a page, but not to redact any
    line art (i.e. vector graphics) within the defined area, by setting a parameter
    flag as follows:'
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子是编辑页面的一个区域，但不编辑定义区域内的任何线条艺术（即矢量图形），方法是设置参数标志如下：
- en: '[PRE70]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: Warning
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: Once a redacted version of a document is saved then the redacted content in
    the **PDF** is *irretrievable*. Thus, a redacted area in a document removes text
    and graphics completely from that area.
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦保存了文档的已编辑版本，则 **PDF** 中的已编辑内容是无法检索的。因此，文档中的删除区域会彻底删除文本和图形内容。
- en: Note
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Taking it further**'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '**进一步操作**'
- en: The are a few options for creating and applying redactions to a page, for the
    full API details to understand the parameters to control these options refer to
    the API reference.
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种选项可用于创建和应用页面的删除操作，有关这些选项的详细 API 信息，请参阅 API 参考。
- en: '**API reference**'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '**API 参考**'
- en: '[`Page.add_redact_annot()`](page.html#Page.add_redact_annot "Page.add_redact_annot")'
  id: totrans-559
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.add_redact_annot()`](page.html#Page.add_redact_annot "Page.add_redact_annot")'
- en: '[`Page.apply_redactions()`](page.html#Page.apply_redactions "Page.apply_redactions")'
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.apply_redactions()`](page.html#Page.apply_redactions "Page.apply_redactions")'
- en: '* * *'
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: '## Converting PDF Documents'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '## 转换 PDF 文档'
- en: We recommend the [pdf2docx](https://pdf2docx.readthedocs.io/en/latest/) library
    which uses **PyMuPDF** and the **python-docx** library to provide simple document
    conversion from **PDF** to **DOCX** format.
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 我们推荐使用 [pdf2docx](https://pdf2docx.readthedocs.io/en/latest/) 库，该库使用 **PyMuPDF**
    和 **python-docx** 库提供从 **PDF** 到 **DOCX** 格式的简单文档转换。
- en: Do you have any feedback on this page?
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 对本页有任何反馈吗？
- en: '* * *'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不附带任何明示或暗示的保证。此软件根据许可证分发，未经授权不得复制、修改或分发。请参阅 [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    上的许可信息或联系位于美国加利福尼亚州旧金山 Mesa 街 39 号 108A 室的 Artifex Software Inc. 获取更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖所有版本直至 1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
