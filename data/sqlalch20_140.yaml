- en: 0.1 Changelog
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 0.1 更新日志
- en: 原文：[https://docs.sqlalchemy.org/en/20/changelog/changelog_01.html](https://docs.sqlalchemy.org/en/20/changelog/changelog_01.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://docs.sqlalchemy.org/en/20/changelog/changelog_01.html](https://docs.sqlalchemy.org/en/20/changelog/changelog_01.html)
- en: 0.1.7
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.7
- en: 'Released: Fri May 05 2006'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年5月5日 星期五
- en: '**[no_tags]**'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to topological sort algorithm
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对拓扑排序算法进行了一些修复
- en: '**[no_tags]**'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added DISTINCT ON support to Postgres (just supply distinct=[col1,col2..])
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对Postgres的DISTINCT ON支持（只需提供distinct=[col1,col2..]）
- en: '**[no_tags]**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added __mod__ (% operator) to sql expressions
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向sql表达式添加了__mod__（%运算符）
- en: '**[no_tags]**'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”order_by” mapper property inherited from inheriting mapper
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从继承映射器继承的“order_by”映射器属性
- en: '**[no_tags]**'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to column type used when mapper UPDATES/DELETEs
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了映射器在更新/删除时使用的列类型
- en: '**[no_tags]**'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: with convert_unicode=True, reflection was failing, has been fixed
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当convert_unicode=True时，反射失败，已经修复
- en: '**[no_tags]**'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: types types types! still weren’t working….have to use TypeDecorator again :(
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型 类型 类型！仍然无法工作….必须再次使用TypeDecorator :(
- en: '**[no_tags]**'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mysql binary type converts array output to buffer, fixes PickleType
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: mysql二进制类型将数组输出转换为缓冲区，修复了PickleType
- en: '**[no_tags]**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed the attributes.py memory leak once and for all
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终解决了attributes.py的内存泄漏问题
- en: '**[no_tags]**'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unittests are qualified based on the databases that support each one
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 基于支持每个数据库的数据库的unittests进行了限定
- en: '**[no_tags]**'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where column defaults would clobber VALUES clause of insert objects
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了列默认值会破坏插入对象的VALUES子句的错误
- en: '**[no_tags]**'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where table def w/ schema name would force engine connection
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了表定义中带有模式名称会强制引擎连接的错误
- en: '**[no_tags]**'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix for parenthesis to work correctly with subqueries in INSERT/UPDATE
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了在INSERT/UPDATE中子查询中括号无法正确工作的问题
- en: '**[no_tags]**'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: HistoryArraySet gets extend() method
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: HistoryArraySet获得了extend()方法
- en: '**[no_tags]**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed lazyload support for other comparison operators besides =
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了除=之外其他比较运算符的lazyload支持
- en: '**[no_tags]**'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazyload fix where two comparisons in the join condition point to the samem
    column
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了lazyload问题，其中连接条件中的两个比较指向相同的列
- en: '**[no_tags]**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “construct_new” flag to mapper, will use __new__ to create instances instead
    of __init__ (standard in 0.2)
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向映射器添加了“construct_new”标志，将使用__new__来创建实例，而不是__init__（在0.2中是标准的）
- en: '**[no_tags]**'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added selectresults.py to SVN, missed it last time
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将selectresults.py添加到SVN中，上次漏掉了
- en: '**[no_tags]**'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweak to allow a many-to-many relationship from a table to itself via an association
    table
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对允许从表到自身的关联表进行多对多关系的微调
- en: '**[no_tags]**'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to “translate_row” function used by polymorphic example
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对多态示例中使用的“translate_row”函数进行了小修复
- en: '**[no_tags]**'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: create_engine uses cgi.parse_qsl to read query string (out the window in 0.2)
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine使用cgi.parse_qsl来读取查询字符串（在0.2中已经取消）
- en: '**[no_tags]**'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweaks to CAST operator
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对CAST操作符进行微调
- en: '**[no_tags]**'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed function names LOCAL_TIME/LOCAL_TIMESTAMP -> LOCALTIME/LOCALTIMESTAMP
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了函数名称LOCAL_TIME/LOCAL_TIMESTAMP -> LOCALTIME/LOCALTIMESTAMP
- en: '**[no_tags]**'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed order of ORDER BY/HAVING in compile
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了编译中ORDER BY/HAVING的顺序
- en: 0.1.6
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.6
- en: 'Released: Wed Apr 12 2006'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年4月12日 星期三
- en: '**[no_tags]**'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: support for MS-SQL added courtesy Rick Morrison, Runar Petursson
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由Rick Morrison，Runar Petursson提供的对MS-SQL的支持
- en: '**[no_tags]**'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: the latest SQLSoup from J. Ellis
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 来自J. Ellis的最新SQLSoup
- en: '**[no_tags]**'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ActiveMapper has preliminary support for inheritance (Jeff Watkins)
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ActiveMapper初步支持继承（Jeff Watkins）
- en: '**[no_tags]**'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added a “mods” system which allows pluggable modules that modify/augment core
    functionality, using the function “install_mods(*modnames)”.
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了一个“mods”系统，允许修改/增强核心功能的可插拔模块，使用函数“install_mods(*modnames)”。
- en: '**[no_tags]**'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added the first “mod”, SelectResults, which modifies mapper selects to return
    generators that turn ranges into LIMIT/OFFSET queries (Jonas Borgstr?
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了第一个“mod”，SelectResults，它修改了mapper selects以返回将范围转换为LIMIT/OFFSET查询的生成器（Jonas
    Borgstr?）
- en: '**[no_tags]**'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: factored out querying capabilities of Mapper into a separate Query object which
    is Session-centric. this improves the performance of mapper.using(session) and
    makes other things possible.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将Mapper的查询功能分解为一个独立的Query对象，该对象以Session为中心。这提高了mapper.using(session)的性能，并使其他功能成为可能。
- en: '**[no_tags]**'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: objectstore/Session refactored, the official way to save objects is now via
    the flush() method. The begin/commit functionality of Session is factored into
    LegacySession which is still established as the default behavior, until the 0.2
    series.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对objectstore/Session进行了重构，现在保存对象的官方方式是通过flush()方法。Session的begin/commit功能被分解为LegacySession，仍然被建立为默认行为，直到0.2系列。
- en: '**[no_tags]**'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: types system is bound to an engine at query compile time, not schema construction
    time. this simplifies the types system as well as the ProxyEngine.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型系统在查询编译时绑定到引擎，而不是在模式构建时。这简化了类型系统以及代理引擎。
- en: '**[no_tags]**'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘version_id’ keyword argument to mapper. this keyword should reference
    a Column object with type Integer, preferably non-nullable, which will be used
    on the mapped table to track version numbers. this number is incremented on each
    save operation and is specified in the UPDATE/DELETE conditions so that it factors
    into the returned row count, which results in a ConcurrencyError if the value
    received is not the expected count.
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向mapper添加了‘version_id’关键字参数。此关键字应引用一个具有整数类型的Column对象，最好是非空的，该对象将用于在映射表上跟踪版本号。此数字在每次保存操作时递增，并在UPDATE/DELETE条件中指定，以便将其计入返回的行数，如果接收到的值不是预期计数，则会导致ConcurrencyError。
- en: '**[no_tags]**'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘entity_name’ keyword argument to mapper. a mapper is now associated with
    a class via the class object as well as an optional entity_name parameter, which
    is a string defaulting to None. any number of primary mappers can be created for
    a class, qualified by the entity name. instances of those classes will issue all
    of their load and save operations through their entity_name-qualified mapper,
    and maintain separate a identity in the identity map for an otherwise equivalent
    object.
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向mapper添加了‘entity_name’关键字参数。现在，通过类对象以及可选的entity_name参数（默认为None）将mapper与类关联起来。可以为类创建任意数量的主mapper，由实体名称限定。这些类的实例将通过其entity_name限定的mapper发出所有加载和保存操作，并为否则等效的对象在标识映射中维护单独的标识。
- en: '**[no_tags]**'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to the attributes system. code has been clarified, and also fixed to
    support proper polymorphic behavior on object attributes.
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对属性系统进行了全面改进。代码已经澄清，并且修复以支持对象属性的适当多态行为。
- en: '**[no_tags]**'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “for_update” flag to Select objects
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向Select对象添加了“for_update”标志
- en: '**[no_tags]**'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes for backrefs
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些用于反向引用的修复
- en: '**[no_tags]**'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix for postgres1 DateTime type
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了postgres1 DateTime类型
- en: '**[no_tags]**'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: documentation pages mostly switched over to Markdown syntax
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文档页面大部分已切换为Markdown语法
- en: 0.1.5
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.5
- en: 'Released: Mon Mar 27 2006'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年3月27日星期一
- en: '**[no_tags]**'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added SQLSession concept to SQLEngine. this object keeps track of retrieving
    a connection from the connection pool as well as an in-progress transaction. methods
    push_session() and pop_session() added to SQLEngine which push/pop a new SQLSession
    onto the engine, allowing operation upon a second connection “nested” within the
    previous one, allowing nested transactions. Other tricks are sure to come later
    regarding SQLSession.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向SQLEngine添加了SQLSession概念。此对象跟踪从连接池检索连接以及正在进行的事务。向SQLEngine添加了push_session()和pop_session()方法，它们将新的SQLSession推送/弹出到引擎上，允许在前一个连接“嵌套”内进行第二个连接的操作，从而允许嵌套事务。关于SQLSession，以后肯定会有其他技巧。
- en: '**[no_tags]**'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added nest_on argument to objectstore.Session. This is a single SQLEngine or
    list of engines for which push_session()/pop_session() will be called each time
    this Session becomes the active session (via objectstore.push_session() or equivalent).
    This allows a unit of work Session to take advantage of the nested transaction
    feature without explicitly calling push_session/pop_session on the engine.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在objectstore.Session中添加了nest_on参数。这是一个SQLEngine或引擎列表，每当此Session成为活动会话（通过objectstore.push_session()或等效方式）时，将调用push_session()/pop_session()。这允许工作单元Session利用嵌套事务功能，而无需在引擎上显式调用push_session/pop_session。
- en: '**[no_tags]**'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: factored apart objectstore/unitofwork to separate “Session scoping” from “uow
    commit heavy lifting”
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将objectstore/unitofwork分解为单独的“会话作用域”和“uow提交重要工作”
- en: '**[no_tags]**'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added populate_instance() method to MapperExtension. allows an extension to
    modify the population of object attributes. this method can call the populate_instance()
    method on another mapper to proxy the attribute population from one mapper to
    another; some row translation logic is also built in to help with this.
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 populate_instance() 方法到 MapperExtension。允许扩展修改对象属性的填充。此方法可以调用另一个映射器上的 populate_instance()
    方法，以代理从一个映射器到另一个映射器的属性填充；还内置了一些行翻译逻辑以帮助完成此操作。
- en: '**[no_tags]**'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: fixed Oracle8-compatibility “use_ansi” flag which converts JOINs to comparisons
    with the = and (+) operators, passes basic unittests
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 Oracle8 兼容性的 “use_ansi” 标志，将 JOIN 转换为与 = 和 (+) 操作符的比较，通过了基本的单元测试。
- en: '**[no_tags]**'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: tweaks to Oracle LIMIT/OFFSET support
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 优化了对 Oracle LIMIT/OFFSET 的支持。
- en: '**[no_tags]**'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: Oracle reflection uses ALL_** views instead of USER_** to get larger list of
    stuff to reflect from
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Oracle 反射使用 ALL_** 视图而不是 USER_**，以从中获取更大的反射列表。
- en: '**[no_tags]**'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: fixes to Oracle foreign key reflection
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 Oracle 外键反射。
- en: 'References: [#105](https://www.sqlalchemy.org/trac/ticket/105)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#105](https://www.sqlalchemy.org/trac/ticket/105)
- en: '**[no_tags]**'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: objectstore.commit(obj1, obj2,…) adds an extra step to seek out private relations
    on properties and delete child objects, even though its not a global commit
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: objectstore.commit(obj1, obj2, ...) 添加了一个额外的步骤，以查找属性上的私有关系并删除子对象，即使它不是全局提交。
- en: '**[no_tags]**'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: lots and lots of fixes to mappers which use inheritance, strengthened the concept
    of relations on a mapper being made towards the “local” table for that mapper,
    not the tables it inherits. allows more complex compositional patterns to work
    with lazy/eager loading.
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对使用继承的映射器进行了大量修复，加强了映射器上关系的概念，该关系指向映射器的“本地”表而不是它继承的表。可以让更复杂的组合模式与延迟/急加载一起使用。
- en: '**[no_tags]**'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added support for mappers to inherit from others based on the same table, just
    specify the same table as that of both parent/child mapper.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了支持，使映射器能够根据相同表从其他映射器继承，只需指定与父/子映射器相同的表。
- en: '**[no_tags]**'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: some minor speed improvements to the attributes system with regards to instantiating
    and populating new objects.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对属性系统进行了一些次要的速度改进，关于实例化和填充新对象。
- en: '**[no_tags]**'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: fixed MySQL binary unit test
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 MySQL 二进制单元测试。
- en: '**[no_tags]**'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: INSERTs can receive clause elements as VALUES arguments, not just literal values
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: INSERTs 可以接收子句元素作为 VALUES 参数，而不仅仅是文字值。
- en: '**[no_tags]**'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: support for calling multi-tokened functions, i.e. schema.mypkg.func()
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 支持调用多标记函数，即 schema.mypkg.func()。
- en: '**[no_tags]**'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added J. Ellis’ SQLSoup module to extensions package
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 J. Ellis 的 SQLSoup 模块添加到扩展包中。
- en: '**[no_tags]**'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added “polymorphic” examples illustrating methods to load multiple object types
    from one mapper, the second of which uses the new populate_instance() method.
    small improvements to mapper, UNION construct to help the examples along
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了“多态”示例，说明了从一个映射器加载多种对象类型的方法，第二种方法使用了新的 populate_instance() 方法。对映射器、UNION
    构造进行了小的改进，以帮助示例。
- en: '**[no_tags]**'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: improvements/fixes to session.refresh()/session.expire() (which may have been
    called “invalidate” earlier..)
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进/修复了 session.refresh()/session.expire()（之前可能称为“invalidate”）。
- en: '**[no_tags]**'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added session.expunge() which totally removes an object from the current session
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 session.expunge()，完全从当前会话中删除一个对象。
- en: '**[no_tags]**'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added *args, **kwargs pass-through to engine.transaction(func) allowing easier
    creation of transactionalizing decorator functions
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 *args, **kwargs 传递到 engine.transaction(func)，从而使事务化装饰器函数更容易创建。
- en: '**[no_tags]**'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: 'added iterator interface to ResultProxy: “for row in result:…”'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为 ResultProxy 添加了迭代器接口：“for row in result:…”
- en: '**[no_tags]**'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added assertion to tx = session.begin(); tx.rollback(); tx.begin(), i.e. can’t
    use it after a rollback()
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了断言到 tx = session.begin(); tx.rollback(); tx.begin()，即回滚后不能使用它。
- en: '**[no_tags]**'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added date conversion on bind parameter fix to SQLite enabling dates to work
    with pysqlite1
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 SQLite 中的绑定参数修复中添加了日期转换，使日期能够与 pysqlite1 兼容。
- en: '**[no_tags]**'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: improvements to subqueries to more intelligently construct their FROM clauses
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对子查询进行了改进，以更智能地构建其 FROM 子句。
- en: 'References: [#116](https://www.sqlalchemy.org/trac/ticket/116)'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#116](https://www.sqlalchemy.org/trac/ticket/116)
- en: '**[no_tags]**'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: added PickleType to types.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 PickleType 添加到类型中。
- en: '**[no_tags]**'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[no_tags]**'
- en: 'fixed two bugs with column labels with regards to bind parameters: bind param
    keynames they are now generated from a column “label” in all relevant cases to
    take advantage of excess-name-length rules, and checks for a peculiar collision
    against a column named the same as “tablename_colname” added'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了两个与绑定参数相关的列标签错误：现在在所有相关情况下，绑定参数键名都是从列“标签”生成的，以利用过长名称规则，并检查是否与列名相同的“tablename_colname”发生了奇怪的冲突。
- en: '**[no_tags]**'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: major overhaul to unit of work documentation, other documentation sections.
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对工作单元文档和其他文档部分进行了重大改进。
- en: '**[no_tags]**'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed attributes bug where if an object is committed, its lazy-loaded list got
    blown away if it hadn’t been loaded
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了属性错误，如果对象已提交，则其惰性加载的列表如果尚未加载则会被清除。
- en: '**[no_tags]**'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added unique_connection() method to engine, connection pool to return a connection
    that is not part of the thread-local context or any current transaction
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向引擎、连接池添加了unique_connection()方法，以返回不属于线程本地上下文或任何当前事务的连接。
- en: '**[no_tags]**'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added invalidate() function to pooled connection. will remove the connection
    from the pool. still need work for engines to auto-reconnect to a stale DB though.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在池化连接中添加了invalidate()函数。将从池中移除连接。但仍需要处理引擎自动重新连接到陈旧数据库的问题。
- en: '**[no_tags]**'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added distinct() function to column elements so you can do func.count(mycol.distinct())
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向列元素添加了distinct()函数，这样您就可以执行func.count(mycol.distinct())。
- en: '**[no_tags]**'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “always_refresh” flag to Mapper, creates a mapper that will always refresh
    the attributes of objects it gets/selects from the DB, overwriting any changes
    made.
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向Mapper添加了“always_refresh”标志，创建一个始终刷新从数据库获取/选择的对象属性的映射器，覆盖任何已做的更改。
- en: 0.1.4
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.4
- en: 'Released: Mon Mar 13 2006'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年3月13日星期一
- en: '**[no_tags]**'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: create_engine() now uses genericized parameters; host/hostname, db/dbname/database,
    password/passwd, etc. for all engine connections. makes engine URIs much more
    “universal”
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine()现在使用通用化参数；主机/主机名、数据库/数据库名、密码/密码等对于所有引擎连接。使引擎URI更加“通用”。
- en: '**[no_tags]**'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added support for SELECT statements embedded into a column clause, using the
    flag “scalar=True”
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对嵌入到列子句中的SELECT语句的支持，使用标志“scalar=True”。
- en: '**[no_tags]**'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: another overhaul to EagerLoading when used in conjunction with mappers that
    inherit; improvements to eager loads figuring out their aliased queries correctly,
    also relations set up against a mapper with inherited mappers will create joins
    against the table that is specific to the mapper itself (i.e. and not any tables
    that are inherited/are further down the inheritance chain), this can be overridden
    by using custom primary/secondary joins.
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对EagerLoading进行了另一次全面改进，当与继承的映射器一起使用时；改进了急加载正确确定其别名查询的功能，还有针对与具有继承映射器的关系设置的情况，将创建针对特定于映射器本身的表的连接（即不会针对任何继承/进一步下降继承链的表），这可以通过使用自定义主/次要连接来覆盖。
- en: '**[no_tags]**'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added J.Ellis patch to mapper.py so that selectone() throws an exception if
    query returns more than one object row, selectfirst() to not throw the exception.
    also adds selectfirst_by (synonymous with get_by) and selectone_by
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在mapper.py中添加了J.Ellis的补丁，使得selectone()在查询返回多个对象行时抛出异常，selectfirst()则不会抛出异常。还添加了selectfirst_by（与get_by同义）和selectone_by。
- en: '**[no_tags]**'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added onupdate parameter to Column, will exec SQL/python upon an update statement.Also
    adds “for_update=True” to all DefaultGenerator subclasses
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向Column添加了onupdate参数，将在更新语句执行时执行SQL/python。还将“for_update=True”添加到所有DefaultGenerator子类。
- en: '**[no_tags]**'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added support for Oracle table reflection contributed by Andrija Zaric; still
    some bugs to work out regarding composite primary keys/dictionary selection
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对Oracle表反射的支持，由Andrija Zaric贡献；仍需解决一些关于复合主键/字典选择的错误。
- en: '**[no_tags]**'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: checked in an initial Firebird module, awaiting testing.
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提交了一个初始的Firebird模块，等待测试。
- en: '**[no_tags]**'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added sql.ClauseParameters dictionary object as the result for compiled.get_params(),
    does late-typeprocessing of bind parameters so that the original values are easier
    to access
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向sql.ClauseParameters字典对象添加了作为compiled.get_params()结果的对象，对绑定参数进行了延迟类型处理，以便更容易访问原始值。
- en: '**[no_tags]**'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: more docs for indexes, column defaults, connection pooling, engine construction
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为索引、列默认值、连接池、引擎构建添加了更多文档。
- en: '**[no_tags]**'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to the construction of the types system. uses a simpler inheritance
    pattern so that any of the generic types can be easily subclassed, with no need
    for TypeDecorator.
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对类型系统的构建进行了全面改进。使用了更简单的继承模式，以便任何通用类型都可以轻松子类化，无需TypeDecorator。
- en: '**[no_tags]**'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “convert_unicode=False” parameter to SQLEngine, will cause all String
    types to perform unicode encoding/decoding (makes Strings act like Unicodes)
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了“convert_unicode=False”参数到SQLEngine，将导致所有String类型执行unicode编码/解码（使Strings表现得像Unicodes）
- en: '**[no_tags]**'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘encoding=”utf8”’ parameter to engine. the given encoding will be used
    for all encode/decode calls within Unicode types as well as Strings when convert_unicode=True.
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了‘encoding=”utf8”’参数到engine。给定的编码将用于Unicode类型内所有编码/解码调用以及当convert_unicode=True时的Strings。
- en: '**[no_tags]**'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved support for mapping against UNIONs, added polymorph.py example to illustrate
    multi-class mapping against a UNION
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进了对UNION映射的支持，添加了polymorph.py示例以说明多类映射对UNION的映射
- en: '**[no_tags]**'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to SQLite LIMIT/OFFSET syntax
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了SQLite LIMIT/OFFSET语法
- en: '**[no_tags]**'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to Oracle LIMIT syntax
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了Oracle LIMIT语法
- en: '**[no_tags]**'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added backref() function, allows backreferences to have keyword arguments that
    will be passed to the backref.
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了backref()函数，允许反向引用具有将传递给backref的关键字参数。
- en: '**[no_tags]**'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Sequences and ColumnDefault objects can do execute()/scalar() standalone
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Sequences和ColumnDefault对象可以独立执行()/标量()
- en: '**[no_tags]**'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: SQL functions (i.e. func.foo()) can do execute()/scalar() standalone
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQL函数（即func.foo()）可以独立执行()/标量()
- en: '**[no_tags]**'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to SQL functions so that the ANSI-standard functions, i.e. current_timestamp
    etc., do not specify parenthesis. all other functions do.
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了SQL函数，使得符合ANSI标准的函数，即current_timestamp等，不指定括号。所有其他函数都需要。
- en: '**[no_tags]**'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'added settattr_clean and append_clean to SmartProperty, which set attributes
    without triggering a “dirty” event or any history. used as: myclass.prop1.setattr_clean(myobject,
    ‘hi’)'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了settattr_clean和append_clean到SmartProperty，可以设置属性而不触发“dirty”事件或任何历史记录。用法如：myclass.prop1.setattr_clean(myobject,
    ‘hi’)
- en: '**[no_tags]**'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved support to column defaults when used by mappers; mappers will pull
    pre-executed defaults from statement’s executed bind parameters (pre-conversion)
    to populate them into a saved object’s attributes; if any PassiveDefaults have
    fired off, will instead post-fetch the row from the DB to populate the object.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进了映射器在使用列默认值时的支持；映射器将从语句的执行绑定参数（预转换）中提取预执行的默认值，以将其填充到保存对象的属性中；如果任何PassiveDefaults已触发，则将从数据库中后获取行以填充对象。
- en: '**[no_tags]**'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘get_session().invalidate(*obj)’ method to objectstore, instances will
    refresh() themselves upon the next attribute access.
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了‘get_session().invalidate(*obj)’方法到objectstore，实例将在下一次属性访问时刷新自己。
- en: '**[no_tags]**'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements to SQL func calls including an “engine” keyword argument so they
    can be execute()d or scalar()ed standalone, also added func accessor to SQLEngine
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进了SQL函数调用，包括一个“engine”关键字参数，以便它们可以独立执行()或标量()，还向SQLEngine添加了func访问器
- en: '**[no_tags]**'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to MySQL4 custom table engines, i.e. TYPE instead of ENGINE
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了MySQL4自定义表引擎，即TYPE而不是ENGINE
- en: '**[no_tags]**'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: slightly enhanced logging, includes timestamps and a somewhat configurable formatting
    system, in lieu of a full-blown logging system
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 稍微增强了日志记录，包括时间戳和一种可配置的格式化系统，而不是完整的日志记录系统
- en: '**[no_tags]**'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements to the ActiveMapper class from the TG gang, including many-to-many
    relationships
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对来自TG团队的ActiveMapper类进行了改进，包括多对多关系
- en: '**[no_tags]**'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added Double and TinyInt support to mysql
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了Double和TinyInt支持到mysql
- en: 0.1.3
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.3
- en: 'Released: Thu Mar 02 2006'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：Thu Mar 02 2006
- en: '**[no_tags]**'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: completed “post_update” feature, will add a second update statement before inserts
    and after deletes in order to reconcile a relationship without any dependencies
    being created; used when persisting two rows that are dependent on each other
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成了“post_update”功能，将在插入和删除之前添加第二个更新语句，以便在没有创建任何依赖关系的情况下协调关系；在持久化两行相互依赖时使用
- en: '**[no_tags]**'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: completed mapper.using(session) function, localized per-object Session functionality;
    objects can be declared and manipulated as local to any user-defined Session
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成了mapper.using(session)函数，针对每个对象的Session功能进行本地化；对象可以声明并作为本地用户定义的Session进行操作
- en: '**[no_tags]**'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to Oracle “row_number over” clause with multiple tables
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了Oracle带有多个表的“row_number over”子句
- en: '**[no_tags]**'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mapper.get() was not selecting multiple-keyed objects if the mapper’s table
    was a join, such as in an inheritance relationship, this is fixed.
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果 mapper 的表是一个连接，比如在继承关系中，mapper.get() 将不会选择多键对象，这个问题已经修复。
- en: '**[no_tags]**'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to sql/schema packages so that the sql package can run all on its own,
    producing selects, inserts, etc. without any engine dependencies. builds upon
    new TableClause/ColumnClause lexical objects. Schema’s Table/Column objects are
    the “physical” subclasses of them. simplifies schema/sql relationship, extensions
    (like proxyengine), and speeds overall performance by a large margin. removes
    the entire getattr() behavior that plagued 0.1.1.
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 sql/schema 包进行了全面改造，使得 sql 包可以独立运行，生成 select、insert 等，而不依赖于任何引擎。基于新的 TableClause/ColumnClause
    词法对象。Schema 的 Table/Column 对象是它们的 “物理” 子类。简化了 schema/sql 关系、扩展（如 proxyengine）并大幅提高了整体性能。移除了困扰
    0.1.1 版本的整个 getattr() 行为。
- en: '**[no_tags]**'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: refactoring of how the mapper “synchronizes” data between two objects into a
    separate module, works better with properties attached to a mapper that has an
    additional inheritance relationship to one of the related tables, also the same
    methodology used to synchronize parent/child objects now used by mapper to synchronize
    between inherited and inheriting mappers.
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重新设计了 mapper 在两个对象之间 “同步” 数据的方式，更好地处理附加到具有额外继承关系的 mapper 的属性，同时 mapper 用于在继承和被继承的
    mapper 之间同步的方法也用于在继承和被继承的 mapper 之间同步。
- en: '**[no_tags]**'
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: made objectstore “check for out-of-identitymap” more aggressive, will perform
    the check when object attributes are modified or the object is deleted
  id: totrans-223
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使 objectstore 更积极地 “检查超出 identitymap” ，当修改对象属性或删除对象时执行检查
- en: '**[no_tags]**'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Index object fully implemented, can be constructed standalone, or via “index”
    and “unique” arguments on Columns.
  id: totrans-225
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Index 对象完全实现，可以独立构建，也可以通过 Columns 上的 “index” 和 “unique” 参数构建。
- en: '**[no_tags]**'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “convert_unicode” flag to SQLEngine, will treat all String/CHAR types
    as Unicode types, with raw-byte/utf-8 translation on the bind parameter and result
    set side.
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 SQLEngine 添加了 “convert_unicode” 标志，将所有 String/CHAR 类型视为 Unicode 类型，在绑定参数和结果集方面进行原始字节/utf-8
    转换。
- en: '**[no_tags]**'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres maintains a list of ANSI functions that must have no parenthesis so
    function calls with no arguments work consistently
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: postgres 维护一个 ANSI 函数列表，这些函数必须没有括号，以便无参数的函数调用能够一致地工作
- en: '**[no_tags]**'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tables can be created with no engine specified. this will default their engine
    to a module-scoped “default engine” which is a ProxyEngine. this engine can be
    connected via the function “global_connect”.
  id: totrans-231
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以创建没有指定引擎的表。这将默认将它们的引擎设置为一个模块范围的 “默认引擎”，这是一个 ProxyEngine。可以通过函数 “global_connect”
    连接这个引擎。
- en: '**[no_tags]**'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “refresh(*obj)” method to objectstore / Session to reload the attributes
    of any set of objects from the database unconditionally
  id: totrans-233
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 objectstore / Session 添加了“refresh(*obj)”方法，可以无条件地重新加载数据库中任意一组对象的属性
- en: 0.1.2
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.2
- en: 'Released: Fri Feb 24 2006'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006 年 2 月 24 日 星期五
- en: '**[no_tags]**'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed a recursive call in schema that was somehow running 994 times then returning
    normally. broke nothing, slowed down everything. thanks to jpellerin for finding
    this.
  id: totrans-237
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了模式中的递归调用，该调用以某种方式运行了 994 次，然后正常返回。没有破坏任何东西，但减慢了一切。感谢 jpellerin 发现这个问题。
- en: 0.1.1
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.1
- en: 'Released: Thu Feb 23 2006'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006 年 2 月 23 日 星期四
- en: '**[no_tags]**'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to Function class so that expressions with a func.foo() use the type
    of the Function object (i.e. the left side) as the type of the boolean expression,
    not the other side which is more of a moving target (changeset 1020).
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 Function 类进行了小修复，以便具有 func.foo() 的表达式使用 Function 对象的类型（即左侧）作为布尔表达式的类型，而不是另一侧，后者更像是一个移动目标（变更集
    1020）。
- en: '**[no_tags]**'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: creating self-referring mappers with backrefs slightly easier (but still not
    that easy - changeset 1019)
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建具有反向引用 backrefs 的自引用映射稍微更容易了（但仍然不是那么容易 - 变更集 1019）
- en: '**[no_tags]**'
  id: totrans-244
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to one-to-one mappings (changeset 1015)
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了一对一映射的问题（变更集 1015）
- en: '**[no_tags]**'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: psycopg1 date/time issue with None fixed (changeset 1005)
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 psycopg1 中与 None 相关的日期/时间问题（变更集 1005）
- en: '**[no_tags]**'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'two issues related to postgres, which doesn’t want to give you the “lastrowid”
    since oids are deprecated:'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与 postgres 相关的两个问题，因为 oids 已经被弃用，所以它不想给你 “lastrowid”：
- en: postgres database-side defaults that are on primary key cols *do* execute explicitly
    beforehand, even though that’s not the idea of a PassiveDefault. this is because
    sequences on columns get reflected as PassiveDefaults, but need to be explicitly
    executed on a primary key col so we know what we just inserted.
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: postgres 数据库端默认值在主键列上是明确执行的，尽管这并不是被动默认值的概念。这是因为列上的序列被反映为被动默认值，但需要在主键列上明确执行，这样我们才知道刚刚插入的是什么。
- en: ''
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: if you did add a row that has a bunch of database-side defaults on it, and the
    PassiveDefault thing was working the old way, i.e. they just execute on the DB
    side, the “can’t get the row back without an OID” exception that occurred also
    will not happen unless someone (usually the ORM) explicitly asks for it.
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您添加了一行，并在其上有一堆数据库端的默认值，并且被动默认值的事情是以旧方式工作的，即它们只在数据库端执行，那么发生的“没有 OID 就无法获取行”的异常也不会发生，除非有人（通常是
    ORM）明确要求它。
- en: '**[no_tags]**'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed a glitch with engine.execute_compiled where it was making a second ResultProxy
    that just got thrown away.
  id: totrans-255
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 engine.execute_compiled 的一个小问题，它会生成一个只被丢弃的第二个 ResultProxy。
- en: '**[no_tags]**'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: began to implement newer logic in object properties. you can now say myclass.attr.property,
    which will give you the PropertyLoader corresponding to that attribute, i.e. myclass.mapper.props[‘attr’]
  id: totrans-257
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开始在对象属性中实现更新逻辑。现在你可以说 myclass.attr.property，这将给你对应于该属性的 PropertyLoader，即 myclass.mapper.props[‘attr’]
- en: '**[no_tags]**'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: eager loading has been internally overhauled to use aliases at all times. more
    complicated chains of eager loads can now be created without any need for explicit
    “use aliases”-type instructions. EagerLoader code is also much simpler now.
  id: totrans-259
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 急切加载已在内部进行了改进，始终使用别名。现在可以创建更复杂的急切加载链，而不需要任何显式的“使用别名”类型的指令。EagerLoader 代码现在也简单得多。
- en: '**[no_tags]**'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: a new somewhat experimental flag “use_update” added to relations, indicates
    that this relationship should be handled by a second UPDATE statement, either
    after a primary INSERT or before a primary DELETE. handles circular row dependencies.
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关系中添加了一个新的有些试验性的标志“use_update”，表示这个关系应该由第二个 UPDATE 语句处理，要么在主要的 INSERT 之后，要么在主要的
    DELETE 之前。处理循环行依赖关系。
- en: '**[no_tags]**'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added exceptions module, all raised exceptions (except for some KeyError/AttributeError
    exceptions) descend from these classes.
  id: totrans-263
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 exceptions 模块，所有引发的异常（除了一些 KeyError/AttributeError 异常）都是这些类的子类。
- en: '**[no_tags]**'
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to date types with MySQL, returned timedelta converted to datetime.time
  id: totrans-265
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 MySQL 中日期类型的问题，返回的 timedelta 转换为 datetime.time
- en: '**[no_tags]**'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: two-phase objectstore.commit operations (i.e. begin/commit) now return a transactional
    object (SessionTrans), to more clearly indicate transaction boundaries.
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两阶段 objectstore.commit 操作（即开始/提交）现在返回一个事务性对象（SessionTrans），以更清楚地指示事务边界。
- en: '**[no_tags]**'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Index object with create/drop support added to schema
  id: totrans-269
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Index 对象添加了对 schema 的创建/删除支持
- en: '**[no_tags]**'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to postgres, where it will explicitly pre-execute a PassiveDefault on a
    table if it is a primary key column, pursuant to the ongoing “we can’t get inserted
    rows back from postgres” issue
  id: totrans-271
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 postgres 的问题，在主键列上如果它是一个被动默认值，它将显式预先执行，符合持续存在的“我们无法从 postgres 获取插入的行”的问题
- en: '**[no_tags]**'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: change to information_schema query that gets back postgres table defs, now uses
    explicit JOIN keyword, since one user had faster performance with 8.1
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改了获取 postgres 表定义的 information_schema 查询，现在使用显式的 JOIN 关键字，因为有一个用户在 8.1 上表现更快的性能
- en: '**[no_tags]**'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to engine.process_defaults so it works correctly with a table that has different
    column name/column keys (changeset 982)
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 engine.process_defaults，使其在具有不同列名/列键的表上正确工作（更改集 982）
- en: '**[no_tags]**'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: a column can only be attached to one table - this is now asserted
  id: totrans-277
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一列只能附加到一个表上 - 这现在被断言了
- en: '**[no_tags]**'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres time types descend from Time type
  id: totrans-279
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: postgres 时间类型源自 Time 类型
- en: '**[no_tags]**'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to alltests so that it runs types test (now named testtypes)
  id: totrans-281
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了所有测试，以便运行类型测试（现在命名为 testtypes）
- en: '**[no_tags]**'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to Join object so that it correctly exports its foreign keys (cs 973)
  id: totrans-283
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 Join 对象，以便正确导出其外键（cs 973）
- en: '**[no_tags]**'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: creating relationships against mappers that use inheritance fixed (cs 973)
  id: totrans-285
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建与使用继承的映射器的关系已修复（cs 973）
- en: 0.1.7
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.7
- en: 'Released: Fri May 05 2006'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006 年 5 月 5 日星期五
- en: '**[no_tags]**'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes to topological sort algorithm
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对拓扑排序算法进行了一些修复
- en: '**[no_tags]**'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added DISTINCT ON support to Postgres (just supply distinct=[col1,col2..])
  id: totrans-291
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对 Postgres 的 DISTINCT ON 支持（只需提供 distinct=[col1,col2..]）
- en: '**[no_tags]**'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added __mod__ (% operator) to sql expressions
  id: totrans-293
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 __mod__（% 运算符）到 SQL 表达式
- en: '**[no_tags]**'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ”order_by” mapper property inherited from inheriting mapper
  id: totrans-295
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从继承的映射器继承的“order_by”映射器属性
- en: '**[no_tags]**'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to column type used when mapper UPDATES/DELETEs
  id: totrans-297
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了映射器 UPDATE/DELETE 时使用的列类型
- en: '**[no_tags]**'
  id: totrans-298
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: with convert_unicode=True, reflection was failing, has been fixed
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 convert_unicode=True，反射失败，已修复
- en: '**[no_tags]**'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: types types types! still weren’t working….have to use TypeDecorator again :(
  id: totrans-301
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型类型类型！仍然无法工作….必须再次使用 TypeDecorator :(
- en: '**[no_tags]**'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mysql binary type converts array output to buffer, fixes PickleType
  id: totrans-303
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: mysql 二进制类型将数组输出转换为缓冲区，修复了 PickleType
- en: '**[no_tags]**'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed the attributes.py memory leak once and for all
  id: totrans-305
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 最终解决了 attributes.py 的内存泄漏问题
- en: '**[no_tags]**'
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: unittests are qualified based on the databases that support each one
  id: totrans-307
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单元测试根据支持每个数据库的数据库进行了限定
- en: '**[no_tags]**'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where column defaults would clobber VALUES clause of insert objects
  id: totrans-309
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了列默认值会破坏插入对象的 VALUES 子句的错误
- en: '**[no_tags]**'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed bug where table def w/ schema name would force engine connection
  id: totrans-311
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了表定义中带有模式名称会强制引擎连接的错误
- en: '**[no_tags]**'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix for parenthesis to work correctly with subqueries in INSERT/UPDATE
  id: totrans-313
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了子查询中括号与 INSERT/UPDATE 正确工作的问题
- en: '**[no_tags]**'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: HistoryArraySet gets extend() method
  id: totrans-315
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: HistoryArraySet 获取了 extend() 方法
- en: '**[no_tags]**'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed lazyload support for other comparison operators besides =
  id: totrans-317
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 lazyload 对其他比较运算符的支持，而不仅仅是 =
- en: '**[no_tags]**'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lazyload fix where two comparisons in the join condition point to the samem
    column
  id: totrans-319
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 lazyload 中两个比较在连接条件中指向相同列的问题
- en: '**[no_tags]**'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “construct_new” flag to mapper, will use __new__ to create instances instead
    of __init__ (standard in 0.2)
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了“construct_new”标志到映射器，将使用 __new__ 创建实例而不是 __init__（在 0.2 中是标准）
- en: '**[no_tags]**'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added selectresults.py to SVN, missed it last time
  id: totrans-323
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了 selectresults.py 到 SVN，上次遗漏了
- en: '**[no_tags]**'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweak to allow a many-to-many relationship from a table to itself via an association
    table
  id: totrans-325
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 调整允许通过关联表从一个表到自身的多对多关系
- en: '**[no_tags]**'
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to “translate_row” function used by polymorphic example
  id: totrans-327
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用于多态示例的“translate_row”函数的小修复
- en: '**[no_tags]**'
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: create_engine uses cgi.parse_qsl to read query string (out the window in 0.2)
  id: totrans-329
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine 使用 cgi.parse_qsl 读取查询字符串（在 0.2 中已废弃）
- en: '**[no_tags]**'
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweaks to CAST operator
  id: totrans-331
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 CAST 运算符进行了调整
- en: '**[no_tags]**'
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed function names LOCAL_TIME/LOCAL_TIMESTAMP -> LOCALTIME/LOCALTIMESTAMP
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了函数名称 LOCAL_TIME/LOCAL_TIMESTAMP -> LOCALTIME/LOCALTIMESTAMP
- en: '**[no_tags]**'
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed order of ORDER BY/HAVING in compile
  id: totrans-335
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了编译中 ORDER BY/HAVING 的顺序
- en: 0.1.6
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.6
- en: 'Released: Wed Apr 12 2006'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年4月12日星期三
- en: '**[no_tags]**'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: support for MS-SQL added courtesy Rick Morrison, Runar Petursson
  id: totrans-339
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对 MS-SQL 的支持，感谢 Rick Morrison、Runar Petursson
- en: '**[no_tags]**'
  id: totrans-340
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: the latest SQLSoup from J. Ellis
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 来自 J. Ellis 的最新 SQLSoup
- en: '**[no_tags]**'
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: ActiveMapper has preliminary support for inheritance (Jeff Watkins)
  id: totrans-343
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ActiveMapper 对继承有初步支持（Jeff Watkins）
- en: '**[no_tags]**'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added a “mods” system which allows pluggable modules that modify/augment core
    functionality, using the function “install_mods(*modnames)”.
  id: totrans-345
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了一个“mods”系统，允许修改/增强核心功能的可插拔模块，使用函数“install_mods(*modnames)”。
- en: '**[no_tags]**'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added the first “mod”, SelectResults, which modifies mapper selects to return
    generators that turn ranges into LIMIT/OFFSET queries (Jonas Borgstr?
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了第一个“mod”，SelectResults，修改了 mapper selects 以返回将范围转换为 LIMIT/OFFSET 查询的生成器（Jonas
    Borgstr?）
- en: '**[no_tags]**'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: factored out querying capabilities of Mapper into a separate Query object which
    is Session-centric. this improves the performance of mapper.using(session) and
    makes other things possible.
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 Mapper 的查询功能分离为一个独立的 Query 对象，该对象是 Session-centric 的。这提高了 mapper.using(session)
    的性能，并使其他功能成为可能。
- en: '**[no_tags]**'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: objectstore/Session refactored, the official way to save objects is now via
    the flush() method. The begin/commit functionality of Session is factored into
    LegacySession which is still established as the default behavior, until the 0.2
    series.
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: objectstore/Session 重构，现在保存对象的官方方式是通过 flush() 方法。Session 的 begin/commit 功能被分解为
    LegacySession，仍然作为默认行为，直到 0.2 系列。
- en: '**[no_tags]**'
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: types system is bound to an engine at query compile time, not schema construction
    time. this simplifies the types system as well as the ProxyEngine.
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 类型系统在查询编译时绑定到引擎，而不是模���构建时。这简化了类型系统以及 ProxyEngine。
- en: '**[no_tags]**'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘version_id’ keyword argument to mapper. this keyword should reference
    a Column object with type Integer, preferably non-nullable, which will be used
    on the mapped table to track version numbers. this number is incremented on each
    save operation and is specified in the UPDATE/DELETE conditions so that it factors
    into the returned row count, which results in a ConcurrencyError if the value
    received is not the expected count.
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 mapper 添加了 ‘version_id’ 关键字参数。此关键字应引用一个具有整数类型的 Column 对象，最好是非空的，该对象将用于在映射表上跟踪版本号。此数字在每次保存操作时递增，并在
    UPDATE/DELETE 条件中指定，以便将其纳入返回的行数计数中，如果接收到的值不是预期的计数，则会导致 ConcurrencyError。
- en: '**[no_tags]**'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘entity_name’ keyword argument to mapper. a mapper is now associated with
    a class via the class object as well as an optional entity_name parameter, which
    is a string defaulting to None. any number of primary mappers can be created for
    a class, qualified by the entity name. instances of those classes will issue all
    of their load and save operations through their entity_name-qualified mapper,
    and maintain separate a identity in the identity map for an otherwise equivalent
    object.
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 mapper 添加了 ‘entity_name’ 关键字参数。现在，通过类对象以及可选的 entity_name 参数（默认为 None）将 mapper
    与类关联起来。可以为一个类创建任意数量的主要 mapper，由实体名称限定。这些类的实例将通过其实体名称限定的 mapper 发出所有的加载和保存操作，并在标识映射中维护一个对于另一个等效对象的独立标识。
- en: '**[no_tags]**'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to the attributes system. code has been clarified, and also fixed to
    support proper polymorphic behavior on object attributes.
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对属性系统进行了全面改进。代码已经澄清，并且还修复了对对象属性上正确多态行为的支持。
- en: '**[no_tags]**'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “for_update” flag to Select objects
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 Select 对象添加了 “for_update” 标志
- en: '**[no_tags]**'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some fixes for backrefs
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些用于反向引用的修复
- en: '**[no_tags]**'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix for postgres1 DateTime type
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 postgres1 DateTime 类型
- en: '**[no_tags]**'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: documentation pages mostly switched over to Markdown syntax
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 文档页面大部分已切换到 Markdown 语法
- en: 0.1.5
  id: totrans-368
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.5
- en: 'Released: Mon Mar 27 2006'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006 年 3 月 27 日 星���一
- en: '**[no_tags]**'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added SQLSession concept to SQLEngine. this object keeps track of retrieving
    a connection from the connection pool as well as an in-progress transaction. methods
    push_session() and pop_session() added to SQLEngine which push/pop a new SQLSession
    onto the engine, allowing operation upon a second connection “nested” within the
    previous one, allowing nested transactions. Other tricks are sure to come later
    regarding SQLSession.
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 SQLEngine 添加了 SQLSession 概念。此对象跟踪从连接池中检索连接以及正在进行的事务。向 SQLEngine 添加了 push_session()
    和 pop_session() 方法，这些方法将新的 SQLSession 推送/弹出到引擎上，允许在前一个连接“嵌套”内操作第二个连接，从而允许嵌套事务。关于
    SQLSession 的其他技巧肯定会在以后出现。
- en: '**[no_tags]**'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added nest_on argument to objectstore.Session. This is a single SQLEngine or
    list of engines for which push_session()/pop_session() will be called each time
    this Session becomes the active session (via objectstore.push_session() or equivalent).
    This allows a unit of work Session to take advantage of the nested transaction
    feature without explicitly calling push_session/pop_session on the engine.
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 objectstore.Session 添加了 nest_on 参数。这是一个单个 SQLEngine 或引擎列表，每当此 Session 成为活动会话时（通过
    objectstore.push_session() 或等效方式），都将调用 push_session()/pop_session()。这允许一个工作单元
    Session 利用嵌套事务功能，而无需在引擎上显式调用 push_session/pop_session。
- en: '**[no_tags]**'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: factored apart objectstore/unitofwork to separate “Session scoping” from “uow
    commit heavy lifting”
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将 objectstore/unitofwork 分解为单独的“Session 作用域”和“uow 提交重要工作”
- en: '**[no_tags]**'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added populate_instance() method to MapperExtension. allows an extension to
    modify the population of object attributes. this method can call the populate_instance()
    method on another mapper to proxy the attribute population from one mapper to
    another; some row translation logic is also built in to help with this.
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 MapperExtension 添加了 populate_instance() 方法。允许扩展修改对象属性的填充。此方法可以调用另一个 mapper
    上的 populate_instance() 方法，以将属性填充从一个 mapper 代理到另一个 mapper；还内置了一些行翻译逻辑来帮助实现这一点。
- en: '**[no_tags]**'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed Oracle8-compatibility “use_ansi” flag which converts JOINs to comparisons
    with the = and (+) operators, passes basic unittests
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 Oracle8 兼容性的“use_ansi”标志，将 JOIN 转换为使用 = 和 (+) 运算符进行比较，通过了基本的单元测试
- en: '**[no_tags]**'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tweaks to Oracle LIMIT/OFFSET support
  id: totrans-381
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 调整了 Oracle LIMIT/OFFSET 支持
- en: '**[no_tags]**'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Oracle reflection uses ALL_** views instead of USER_** to get larger list of
    stuff to reflect from
  id: totrans-383
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Oracle 反射使用 ALL_** 视图而不是 USER_** 来获取更多要反射的内容列表
- en: '**[no_tags]**'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to Oracle foreign key reflection
  id: totrans-385
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了Oracle外键反射问题
- en: 'References: [#105](https://www.sqlalchemy.org/trac/ticket/105)'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#105](https://www.sqlalchemy.org/trac/ticket/105)
- en: '**[no_tags]**'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: objectstore.commit(obj1, obj2,…) adds an extra step to seek out private relations
    on properties and delete child objects, even though its not a global commit
  id: totrans-388
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: objectstore.commit(obj1, obj2,…)增加了一个额外步骤，寻找属性上的私有关系并删除子对象，即使它不是全局提交
- en: '**[no_tags]**'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: lots and lots of fixes to mappers which use inheritance, strengthened the concept
    of relations on a mapper being made towards the “local” table for that mapper,
    not the tables it inherits. allows more complex compositional patterns to work
    with lazy/eager loading.
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对使用继承的映射器进行了大量修复，加强了映射器上关系指向“本地”表的概念，而不是它继承的表。允许更复杂的组合模式与延迟/即时加载一起使用。
- en: '**[no_tags]**'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added support for mappers to inherit from others based on the same table, just
    specify the same table as that of both parent/child mapper.
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了支持映射器从其他映射器继承的功能，只需指定与父/子映射器相同的表。
- en: '**[no_tags]**'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: some minor speed improvements to the attributes system with regards to instantiating
    and populating new objects.
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于实例化和填充新对象的属性系统进行了一些轻微的速度改进。
- en: '**[no_tags]**'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed MySQL binary unit test
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了MySQL二进制单元测试
- en: '**[no_tags]**'
  id: totrans-397
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: INSERTs can receive clause elements as VALUES arguments, not just literal values
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: INSERTs可以接收子句元素作为VALUES参数，而不仅仅是文字值
- en: '**[no_tags]**'
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: support for calling multi-tokened functions, i.e. schema.mypkg.func()
  id: totrans-400
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 支持调用多令牌函数，即schema.mypkg.func()
- en: '**[no_tags]**'
  id: totrans-401
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added J. Ellis’ SQLSoup module to extensions package
  id: totrans-402
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将J. Ellis的SQLSoup模块添加到扩展包中
- en: '**[no_tags]**'
  id: totrans-403
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “polymorphic” examples illustrating methods to load multiple object types
    from one mapper, the second of which uses the new populate_instance() method.
    small improvements to mapper, UNION construct to help the examples along
  id: totrans-404
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了展示从一个映射器加载多个对象类型的“多态”示例，第二个示例使用了新的populate_instance()方法。对映射器进行了小的改进，使用UNION构造来帮助示例。
- en: '**[no_tags]**'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements/fixes to session.refresh()/session.expire() (which may have been
    called “invalidate” earlier..)
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对session.refresh()/session.expire()进行了改进/修复（之前可能称为“invalidate”..）
- en: '**[no_tags]**'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added session.expunge() which totally removes an object from the current session
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了session.expunge()，完全从当前会话中删除对象
- en: '**[no_tags]**'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added *args, **kwargs pass-through to engine.transaction(func) allowing easier
    creation of transactionalizing decorator functions
  id: totrans-410
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在engine.transaction(func)中添加了*args, **kwargs传递，允许更容易地创建事务化装饰器函数
- en: '**[no_tags]**'
  id: totrans-411
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'added iterator interface to ResultProxy: “for row in result:…”'
  id: totrans-412
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对ResultProxy添加了迭代器接口：“for row in result:…”
- en: '**[no_tags]**'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added assertion to tx = session.begin(); tx.rollback(); tx.begin(), i.e. can’t
    use it after a rollback()
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在tx = session.begin(); tx.rollback(); tx.begin()中添加了断言，即在回滚后不能再使用它()
- en: '**[no_tags]**'
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added date conversion on bind parameter fix to SQLite enabling dates to work
    with pysqlite1
  id: totrans-416
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在SQLite上添加了绑定参数修复日期转换���使日期能够与pysqlite1一起使用
- en: '**[no_tags]**'
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements to subqueries to more intelligently construct their FROM clauses
  id: totrans-418
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对子查询进行了改进，更智能地构造它们的FROM子句
- en: 'References: [#116](https://www.sqlalchemy.org/trac/ticket/116)'
  id: totrans-419
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参考：[#116](https://www.sqlalchemy.org/trac/ticket/116)
- en: '**[no_tags]**'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added PickleType to types.
  id: totrans-421
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在types中添加了PickleType。
- en: '**[no_tags]**'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'fixed two bugs with column labels with regards to bind parameters: bind param
    keynames they are now generated from a column “label” in all relevant cases to
    take advantage of excess-name-length rules, and checks for a peculiar collision
    against a column named the same as “tablename_colname” added'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了与绑定参数相关的列标签两个错误：绑定参数键名现在在所有相关情况下都从列“标签”生成，以利用过长名称规则，并检查是否与列名为“tablename_colname”的列发生奇怪的冲突
- en: '**[no_tags]**'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: major overhaul to unit of work documentation, other documentation sections.
  id: totrans-425
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对工作单元文档和其他文档部分进行了重大改进。
- en: '**[no_tags]**'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed attributes bug where if an object is committed, its lazy-loaded list got
    blown away if it hadn’t been loaded
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了属性bug，即如果对象已提交，则其延迟加载的列表如果尚未加载则会被清除
- en: '**[no_tags]**'
  id: totrans-428
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added unique_connection() method to engine, connection pool to return a connection
    that is not part of the thread-local context or any current transaction
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在engine中添加了unique_connection()方法，连接池返回一个不属于线程本地上下文或任何当前事务的连接
- en: '**[no_tags]**'
  id: totrans-430
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added invalidate() function to pooled connection. will remove the connection
    from the pool. still need work for engines to auto-reconnect to a stale DB though.
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在池化连接中添加了invalidate()函数。将从池中移除连接。但仍需工作以使引擎自动重新连接到陈旧的数据库。
- en: '**[no_tags]**'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added distinct() function to column elements so you can do func.count(mycol.distinct())
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在列元素中添加了distinct()函数，以便可以执行func.count(mycol.distinct())。
- en: '**[no_tags]**'
  id: totrans-434
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “always_refresh” flag to Mapper, creates a mapper that will always refresh
    the attributes of objects it gets/selects from the DB, overwriting any changes
    made.
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Mapper中添加了“always_refresh”标志，创建一个始终刷新从数据库获取/选择的对象属性的映射器，覆盖任何已做出的更改。
- en: 0.1.4
  id: totrans-436
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 版本0.1.4
- en: 'Released: Mon Mar 13 2006'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年3月13日
- en: '**[no_tags]**'
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: create_engine() now uses genericized parameters; host/hostname, db/dbname/database,
    password/passwd, etc. for all engine connections. makes engine URIs much more
    “universal”
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: create_engine()现在使用通用化参数；主机/主机名、数据库/dbname/数据库、密码/passwd等对所有引擎连接都有效。使引擎URI更加“通用”。
- en: '**[no_tags]**'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added support for SELECT statements embedded into a column clause, using the
    flag “scalar=True”
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对嵌入到列子句中的SELECT语句的支持，使用标志“scalar=True”。
- en: '**[no_tags]**'
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: another overhaul to EagerLoading when used in conjunction with mappers that
    inherit; improvements to eager loads figuring out their aliased queries correctly,
    also relations set up against a mapper with inherited mappers will create joins
    against the table that is specific to the mapper itself (i.e. and not any tables
    that are inherited/are further down the inheritance chain), this can be overridden
    by using custom primary/secondary joins.
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在与继承的映射器一起使用时，对EagerLoading进行了另一次全面改进；改进了急加载正确确定其别名查询的能力，还有针对与具有继承映射器的关系设置的表的连接，将创建针对映射器本身特定表的连接（即不会针对任何继承/进一步下降继承链的表），这可以通过使用自定义主/次要连接来覆盖。
- en: '**[no_tags]**'
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added J.Ellis patch to mapper.py so that selectone() throws an exception if
    query returns more than one object row, selectfirst() to not throw the exception.
    also adds selectfirst_by (synonymous with get_by) and selectone_by
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了J.Ellis对mapper.py的补丁，使selectone()在查询返回多个对象行时抛出异常，selectfirst()不抛出异常。还添加了selectfirst_by（与get_by同义）和selectone_by。
- en: '**[no_tags]**'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added onupdate parameter to Column, will exec SQL/python upon an update statement.Also
    adds “for_update=True” to all DefaultGenerator subclasses
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Column中添加了onupdate参数，将在更新语句时执行SQL/python。还为所有DefaultGenerator子类添加了“for_update=True”。
- en: '**[no_tags]**'
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added support for Oracle table reflection contributed by Andrija Zaric; still
    some bugs to work out regarding composite primary keys/dictionary selection
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了对Oracle表反射的支持，由Andrija Zaric贡献；仍然需要解决一些关于复合主键/字典选择的错误。
- en: '**[no_tags]**'
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: checked in an initial Firebird module, awaiting testing.
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提交了一个初始的Firebird模块，等待测试。
- en: '**[no_tags]**'
  id: totrans-452
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added sql.ClauseParameters dictionary object as the result for compiled.get_params(),
    does late-typeprocessing of bind parameters so that the original values are easier
    to access
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在compiled.get_params()的结果中添加了sql.ClauseParameters字典对象，对绑定参数进行了延迟类型处理，以便更容易访问原始值。
- en: '**[no_tags]**'
  id: totrans-454
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: more docs for indexes, column defaults, connection pooling, engine construction
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为索引、列默认值、连接池、引擎构建添加了更多文档。
- en: '**[no_tags]**'
  id: totrans-456
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to the construction of the types system. uses a simpler inheritance
    pattern so that any of the generic types can be easily subclassed, with no need
    for TypeDecorator.
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对类型系统的构建进行了全面改进。使用了更简单的继承模式，使得任何通用类型都可以轻松地被子类化，无需TypeDecorator。
- en: '**[no_tags]**'
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “convert_unicode=False” parameter to SQLEngine, will cause all String
    types to perform unicode encoding/decoding (makes Strings act like Unicodes)
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在SQLEngine中添加了“convert_unicode=False”参数，将导致所有String类型执行unicode编码/解码（使Strings的行为类似于Unicodes）。
- en: '**[no_tags]**'
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘encoding=”utf8”’ parameter to engine. the given encoding will be used
    for all encode/decode calls within Unicode types as well as Strings when convert_unicode=True.
  id: totrans-461
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在引擎中添加了‘encoding=”utf8”’参数。给定的编码将用于Unicode类型内所有编码/解码调用以及当convert_unicode=True时的Strings。
- en: '**[no_tags]**'
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved support for mapping against UNIONs, added polymorph.py example to illustrate
    multi-class mapping against a UNION
  id: totrans-463
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 改进了对UNION的映射支持，添加了polymorph.py示例以说明多类映射对UNION的映射。
- en: '**[no_tags]**'
  id: totrans-464
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to SQLite LIMIT/OFFSET syntax
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了SQLite LIMIT/OFFSET语法问题
- en: '**[no_tags]**'
  id: totrans-466
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to Oracle LIMIT syntax
  id: totrans-467
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了Oracle LIMIT语法问题
- en: '**[no_tags]**'
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added backref() function, allows backreferences to have keyword arguments that
    will be passed to the backref.
  id: totrans-469
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加了backref()函数，允许反向引用具有将传递给backref的关键字参数。
- en: '**[no_tags]**'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Sequences and ColumnDefault objects can do execute()/scalar() standalone
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Sequences和ColumnDefault对象可以独立执行/标量执行
- en: '**[no_tags]**'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: SQL functions (i.e. func.foo()) can do execute()/scalar() standalone
  id: totrans-473
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SQL函数（即func.foo()）可以独立执行/标量执行
- en: '**[no_tags]**'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to SQL functions so that the ANSI-standard functions, i.e. current_timestamp
    etc., do not specify parenthesis. all other functions do.
  id: totrans-475
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了SQL函数，使得符合ANSI标准的函数，即current_timestamp等，不指定括号。所有其他函数都会指定括号。
- en: '**[no_tags]**'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'added settattr_clean and append_clean to SmartProperty, which set attributes
    without triggering a “dirty” event or any history. used as: myclass.prop1.setattr_clean(myobject,
    ‘hi’)'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向SmartProperty添加了settattr_clean和append_clean，可以设置属性而不触发“脏”事件或任何历史记录。用法如：myclass.prop1.setattr_clean(myobject,
    ‘hi’)
- en: '**[no_tags]**'
  id: totrans-478
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improved support to column defaults when used by mappers; mappers will pull
    pre-executed defaults from statement’s executed bind parameters (pre-conversion)
    to populate them into a saved object’s attributes; if any PassiveDefaults have
    fired off, will instead post-fetch the row from the DB to populate the object.
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当mappers使用列默认值时提供了改进支持；mappers将从语句的执行绑定参数（预转换）中提取预执行的默认值，以填充到保存对象的属性中；如果任何PassiveDefaults已经触发，将从数据库中后获取行以填充对象。
- en: '**[no_tags]**'
  id: totrans-480
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added ‘get_session().invalidate(*obj)’ method to objectstore, instances will
    refresh() themselves upon the next attribute access.
  id: totrans-481
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在objectstore中添加了‘get_session().invalidate(*obj)’方法，实例将在下一次属性访问时自动刷新。
- en: '**[no_tags]**'
  id: totrans-482
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements to SQL func calls including an “engine” keyword argument so they
    can be execute()d or scalar()ed standalone, also added func accessor to SQLEngine
  id: totrans-483
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对SQL函数的支持进行了改进，包括一个“engine”关键字参数，以便它们可以独立执行或标量执行，还向SQLEngine添加了func访问器
- en: '**[no_tags]**'
  id: totrans-484
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to MySQL4 custom table engines, i.e. TYPE instead of ENGINE
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了MySQL4自定义表引擎，即TYPE而不是ENGINE
- en: '**[no_tags]**'
  id: totrans-486
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: slightly enhanced logging, includes timestamps and a somewhat configurable formatting
    system, in lieu of a full-blown logging system
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 稍微增强了日志记录，包括时间戳和一种可配置的格式系统，而不是完整的日志记录系统
- en: '**[no_tags]**'
  id: totrans-488
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: improvements to the ActiveMapper class from the TG gang, including many-to-many
    relationships
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对TG团队的ActiveMapper类进行了改进，包括多对多关系
- en: '**[no_tags]**'
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added Double and TinyInt support to mysql
  id: totrans-491
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向mysql添加了Double和TinyInt支持
- en: 0.1.3
  id: totrans-492
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.3
- en: 'Released: Thu Mar 02 2006'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006年3月2日
- en: '**[no_tags]**'
  id: totrans-494
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: completed “post_update” feature, will add a second update statement before inserts
    and after deletes in order to reconcile a relationship without any dependencies
    being created; used when persisting two rows that are dependent on each other
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成了“post_update”功能，将在插入和删除之前添加第二个更新语句，以便在没有创建任何依赖关系的情况下协调关系；在持久化两行相互依赖的情况下使用
- en: '**[no_tags]**'
  id: totrans-496
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: completed mapper.using(session) function, localized per-object Session functionality;
    objects can be declared and manipulated as local to any user-defined Session
  id: totrans-497
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 完成了mapper.using(session)函数，针对每个对象的Session功能进行本地化；对象可以声明并操作为任何用户定义的Session的本地对象
- en: '**[no_tags]**'
  id: totrans-498
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to Oracle “row_number over” clause with multiple tables
  id: totrans-499
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了Oracle中带有多个表的“row_number over”子句
- en: '**[no_tags]**'
  id: totrans-500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: mapper.get() was not selecting multiple-keyed objects if the mapper’s table
    was a join, such as in an inheritance relationship, this is fixed.
  id: totrans-501
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果mapper的表是一个连接，例如在继承关系中，mapper.get()不会选择多键对象，这个问题已经修复。
- en: '**[no_tags]**'
  id: totrans-502
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: overhaul to sql/schema packages so that the sql package can run all on its own,
    producing selects, inserts, etc. without any engine dependencies. builds upon
    new TableClause/ColumnClause lexical objects. Schema’s Table/Column objects are
    the “physical” subclasses of them. simplifies schema/sql relationship, extensions
    (like proxyengine), and speeds overall performance by a large margin. removes
    the entire getattr() behavior that plagued 0.1.1.
  id: totrans-503
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对sql/schema包进行了全面改进，使得sql包可以独立运行，生成selects、inserts等，而不依赖于任何引擎。基于新的TableClause/ColumnClause词法对象。Schema的Table/Column对象是它们的“物理”子类。简化了schema/sql关系，扩展（如proxyengine），并通过大幅提高整体性能。删除了困扰0.1.1版本的整个getattr()行为。
- en: '**[no_tags]**'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: refactoring of how the mapper “synchronizes” data between two objects into a
    separate module, works better with properties attached to a mapper that has an
    additional inheritance relationship to one of the related tables, also the same
    methodology used to synchronize parent/child objects now used by mapper to synchronize
    between inherited and inheriting mappers.
  id: totrans-505
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重构了映射器如何在两个对象之间“同步”数据的方式，将其放入一个单独的模块中，与附加到具有与相关表之一的附加继承关系的映射器的属性一起使用效果更好，现在映射器用于在继承和被继承的映射器之间同步的相同方法也用于同步父/子对象。
- en: '**[no_tags]**'
  id: totrans-506
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: made objectstore “check for out-of-identitymap” more aggressive, will perform
    the check when object attributes are modified or the object is deleted
  id: totrans-507
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使 objectstore 的“检查是否超出 identitymap”更加积极，当修改对象属性或删除对象时将执行检查
- en: '**[no_tags]**'
  id: totrans-508
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Index object fully implemented, can be constructed standalone, or via “index”
    and “unique” arguments on Columns.
  id: totrans-509
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 索引对象已完全实现，可以独立构建，也可以通过列上的“index”和“unique”参数构建。
- en: '**[no_tags]**'
  id: totrans-510
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “convert_unicode” flag to SQLEngine, will treat all String/CHAR types
    as Unicode types, with raw-byte/utf-8 translation on the bind parameter and result
    set side.
  id: totrans-511
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 SQLEngine 添加了“convert_unicode”标志，将所有 String/CHAR 类型视为 Unicode 类型，在绑定参数和结果集方面进行原始字节/utf-8
    转换。
- en: '**[no_tags]**'
  id: totrans-512
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres maintains a list of ANSI functions that must have no parenthesis so
    function calls with no arguments work consistently
  id: totrans-513
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: postgres 维护一个 ANSI 函数列表，这些函数不能带括号，因此没有参数的函数调用可以一致工作
- en: '**[no_tags]**'
  id: totrans-514
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: tables can be created with no engine specified. this will default their engine
    to a module-scoped “default engine” which is a ProxyEngine. this engine can be
    connected via the function “global_connect”.
  id: totrans-515
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以创建没有指定引擎的表。这将默认将它们的引擎设置为模块范围的“默认引擎”，这是一个 ProxyEngine。可以通过函数“global_connect”连接此引擎。
- en: '**[no_tags]**'
  id: totrans-516
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added “refresh(*obj)” method to objectstore / Session to reload the attributes
    of any set of objects from the database unconditionally
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向 objectstore / Session 添加了“refresh(*obj)”方法，从数据库无条件重新加载任意一组对象的属性
- en: 0.1.2
  id: totrans-518
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.2
- en: 'Released: Fri Feb 24 2006'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006 年 2 月 24 日 星期五
- en: '**[no_tags]**'
  id: totrans-520
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed a recursive call in schema that was somehow running 994 times then returning
    normally. broke nothing, slowed down everything. thanks to jpellerin for finding
    this.
  id: totrans-521
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了模式中的递归调用，某种方式运行了 994 次然后正常返回。没有破坏任何东西，但减慢了一切。感谢 jpellerin 发现这个问题。
- en: 0.1.1
  id: totrans-522
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 0.1.1
- en: 'Released: Thu Feb 23 2006'
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
  zh: 发布日期：2006 年 2 月 23 日 星期四
- en: '**[no_tags]**'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: small fix to Function class so that expressions with a func.foo() use the type
    of the Function object (i.e. the left side) as the type of the boolean expression,
    not the other side which is more of a moving target (changeset 1020).
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对 Function 类进行了小修复，以便具有 func.foo() 的表达式使用 Function 对象的类型（即左侧）作为布尔表达式的类型，而不是另一侧，这更像是一个移动目标（变更集
    1020）。
- en: '**[no_tags]**'
  id: totrans-526
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: creating self-referring mappers with backrefs slightly easier (but still not
    that easy - changeset 1019)
  id: totrans-527
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 backrefs 创建自引用映射器稍微更容易了（但仍然不是那么容易 - 变更集 1019）
- en: '**[no_tags]**'
  id: totrans-528
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixes to one-to-one mappings (changeset 1015)
  id: totrans-529
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了一对一映射的问题（变更集 1015）
- en: '**[no_tags]**'
  id: totrans-530
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: psycopg1 date/time issue with None fixed (changeset 1005)
  id: totrans-531
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 psycopg1 中 None 的日期/时间问题（变更集 1005）
- en: '**[no_tags]**'
  id: totrans-532
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: 'two issues related to postgres, which doesn’t want to give you the “lastrowid”
    since oids are deprecated:'
  id: totrans-533
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 与 postgres 相关的两个问题，因为 oids 已被弃用，所以它不想给你“lastrowid”：
- en: postgres database-side defaults that are on primary key cols *do* execute explicitly
    beforehand, even though that’s not the idea of a PassiveDefault. this is because
    sequences on columns get reflected as PassiveDefaults, but need to be explicitly
    executed on a primary key col so we know what we just inserted.
  id: totrans-534
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主键列上的 postgres 数据库端默认值 *确实* 在之前显式执行，尽管这不是 PassiveDefault 的想法。这是因为列上的序列被反映为
    PassiveDefaults，但需要在主键列上显式执行，以便我们知道刚刚插入了什么。
- en: ''
  id: totrans-535
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: ''
  id: totrans-536
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_IND
  type: TYPE_NORMAL
- en: if you did add a row that has a bunch of database-side defaults on it, and the
    PassiveDefault thing was working the old way, i.e. they just execute on the DB
    side, the “can’t get the row back without an OID” exception that occurred also
    will not happen unless someone (usually the ORM) explicitly asks for it.
  id: totrans-537
  prefs:
  - PREF_IND
  - PREF_BQ
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您添加了一行，并且该行具有许多数据库端默认值，并且 PassiveDefault 的工作方式是旧的，即它们只在数据库端执行，那么也不会发生“没有 OID
    无法获取行”的异常，除非有人（通常是 ORM）明确要求它。
- en: '**[no_tags]**'
  id: totrans-538
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fixed a glitch with engine.execute_compiled where it was making a second ResultProxy
    that just got thrown away.
  id: totrans-539
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复了 engine.execute_compiled 中的一个小问题，它创建了一个第二个 ResultProxy，然后被丢弃。
- en: '**[no_tags]**'
  id: totrans-540
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: began to implement newer logic in object properties. you can now say myclass.attr.property,
    which will give you the PropertyLoader corresponding to that attribute, i.e. myclass.mapper.props[‘attr’]
  id: totrans-541
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 开始在对象属性中实现更新逻辑。现在可以说myclass.attr.property，这将给您对应于该属性的PropertyLoader，即myclass.mapper.props['attr']
- en: '**[no_tags]**'
  id: totrans-542
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: eager loading has been internally overhauled to use aliases at all times. more
    complicated chains of eager loads can now be created without any need for explicit
    “use aliases”-type instructions. EagerLoader code is also much simpler now.
  id: totrans-543
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 急切加载已在内部进行了彻底改进，始终使用别名。现在可以创建更复杂的急切加载链，而无需任何明确的“使用别名”类型的指令。EagerLoader代码现在也简单得多。
- en: '**[no_tags]**'
  id: totrans-544
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: a new somewhat experimental flag “use_update” added to relations, indicates
    that this relationship should be handled by a second UPDATE statement, either
    after a primary INSERT or before a primary DELETE. handles circular row dependencies.
  id: totrans-545
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为关系添加了一个新的有点实验性的标志“use_update”，表示这个关系应该由第二个UPDATE语句处理，要么在主要INSERT之后，要么在主要DELETE之前。处理循环行依赖关系。
- en: '**[no_tags]**'
  id: totrans-546
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: added exceptions module, all raised exceptions (except for some KeyError/AttributeError
    exceptions) descend from these classes.
  id: totrans-547
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加exceptions模块，所有引发的异常（除了一些KeyError/AttributeError异常）都继承自这些类。
- en: '**[no_tags]**'
  id: totrans-548
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to date types with MySQL, returned timedelta converted to datetime.time
  id: totrans-549
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复与MySQL的日期类型，返回的timedelta转换为datetime.time
- en: '**[no_tags]**'
  id: totrans-550
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: two-phase objectstore.commit operations (i.e. begin/commit) now return a transactional
    object (SessionTrans), to more clearly indicate transaction boundaries.
  id: totrans-551
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两阶段objectstore.commit操作（即begin/commit）现在返回一个事务性对象（SessionTrans），以更清晰地指示事务边界。
- en: '**[no_tags]**'
  id: totrans-552
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: Index object with create/drop support added to schema
  id: totrans-553
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 具有创建/删除支持的Index对象已添加到schema
- en: '**[no_tags]**'
  id: totrans-554
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to postgres, where it will explicitly pre-execute a PassiveDefault on a
    table if it is a primary key column, pursuant to the ongoing “we can’t get inserted
    rows back from postgres” issue
  id: totrans-555
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复postgres，在主键列上明确预执行PassiveDefault，根据持续存在的“我们无法从postgres获取插入的行”问题
- en: '**[no_tags]**'
  id: totrans-556
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: change to information_schema query that gets back postgres table defs, now uses
    explicit JOIN keyword, since one user had faster performance with 8.1
  id: totrans-557
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 更改information_schema查询，获取postgres表定义，现在使用显式的JOIN关键字，因为一个用户在8.1上有更快的性能
- en: '**[no_tags]**'
  id: totrans-558
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to engine.process_defaults so it works correctly with a table that has different
    column name/column keys (changeset 982)
  id: totrans-559
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复engine.process_defaults，使其在具有不同列名/列键的表上正确工作（changeset 982）
- en: '**[no_tags]**'
  id: totrans-560
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: a column can only be attached to one table - this is now asserted
  id: totrans-561
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个列只能附加到一个表上 - 现在已经断言了这一点
- en: '**[no_tags]**'
  id: totrans-562
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: postgres time types descend from Time type
  id: totrans-563
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: postgres时间类型继承自Time类型
- en: '**[no_tags]**'
  id: totrans-564
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to alltests so that it runs types test (now named testtypes)
  id: totrans-565
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复alltests，使其运行types测试（现在命名为testtypes）
- en: '**[no_tags]**'
  id: totrans-566
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: fix to Join object so that it correctly exports its foreign keys (cs 973)
  id: totrans-567
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 修复Join对象，使其正确导出其外键（cs 973）
- en: '**[no_tags]**'
  id: totrans-568
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**[无标签]**'
- en: creating relationships against mappers that use inheritance fixed (cs 973)
  id: totrans-569
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建与使用继承固定的映射器关系（cs 973）
