- en: Installing JAX
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 JAX
- en: 原文：[`jax.readthedocs.io/en/latest/installation.html`](https://jax.readthedocs.io/en/latest/installation.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/installation.html`](https://jax.readthedocs.io/en/latest/installation.html)
- en: 'Using JAX requires installing two packages: `jax`, which is pure Python and
    cross-platform, and `jaxlib` which contains compiled binaries, and requires different
    builds for different operating systems and accelerators.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 JAX 需要安装两个包：`jax` 是纯 Python 的跨平台库，`jaxlib` 包含编译的二进制文件，对于不同的操作系统和加速器需要不同的构建。
- en: '**TL;DR** For most users, a typical JAX installation may look something like
    this:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**TL;DR** 对于大多数用户来说，典型的 JAX 安装可能如下所示：'
- en: '**CPU-only (Linux/macOS/Windows)**'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**仅限 CPU（Linux/macOS/Windows）**'
- en: '[PRE0]'
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**GPU (NVIDIA, CUDA 12)**'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GPU（NVIDIA，CUDA 12）**'
- en: '[PRE1]'
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**TPU (Google Cloud TPU VM)**'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**TPU（Google Cloud TPU VM）**'
- en: '[PRE2]'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '## Supported platforms'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '## 支持的平台'
- en: The table below shows all supported platforms and installation options. Check
    if your setup is supported; and if it says *“yes”* or *“experimental”*, then click
    on the corresponding link to learn how to install JAX in greater detail.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了所有支持的平台和安装选项。检查您的设置是否受支持；如果显示“是”或“实验性”，请单击相应链接以了解更详细的 JAX 安装方法。
- en: '|  | Linux, x86_64 | Linux, aarch64 | macOS, Intel x86_64, AMD GPU | macOS,
    Apple Silicon, ARM-based | Windows, x86_64 | Windows WSL2, x86_64 |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '|  | Linux，x86_64 | Linux，aarch64 | macOS，Intel x86_64，AMD GPU | macOS，Apple
    Silicon，基于 ARM | Windows，x86_64 | Windows WSL2，x86_64 |'
- en: '| --- | --- | --- | --- | --- | --- | --- |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- | --- |'
- en: '| CPU | yes | yes | yes | yes | yes | yes |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| CPU | 是 | 是 | 是 | 是 | 是 | 是 |'
- en: '| NVIDIA GPU | yes | yes | no | n/a | no | experimental |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| NVIDIA GPU | 是 | 是 | 否 | 不适用 | 否 | 实验性 |'
- en: '| Google Cloud TPU | yes | n/a | n/a | n/a | n/a | n/a |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| Google Cloud TPU | 是 | 不适用 | 不适用 | 不适用 | 不适用 | 不适用 |'
- en: '| AMD GPU | experimental | no | no | n/a | no | no |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| AMD GPU | 实验性 | 否 | 否 | 不适用 | 否 | 否 |'
- en: '| Apple GPU | n/a | no | experimental | experimental | n/a | n/a |  ## CPU'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '| Apple GPU | 不适用 | 否 | 实验性 | 实验性 | 不适用 | 不适用 |  ## CPU'
- en: 'pip installation: CPU'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: pip 安装：CPU
- en: 'Currently, the JAX team releases `jaxlib` wheels for the following operating
    systems and architectures:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，JAX 团队为以下操作系统和架构发布 `jaxlib` 轮子：
- en: Linux, x86_64
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux，x86_64
- en: Linux, aarch64
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux, aarch64
- en: macOS, Intel
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS，Intel
- en: macOS, Apple ARM-based
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS，基于 Apple ARM
- en: Windows, x86_64 (*experimental*)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows，x86_64（*实验性*）
- en: 'To install a CPU-only version of JAX, which might be useful for doing local
    development on a laptop, you can run:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装仅 CPU 版本的 JAX，可能对于在笔记本电脑上进行本地开发非常有用，您可以运行：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: On Windows, you may also need to install the [Microsoft Visual Studio 2019 Redistributable](https://learn.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022)
    if it is not already installed on your machine.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，如果尚未安装 [Microsoft Visual Studio 2019 Redistributable](https://learn.microsoft.com/zh-cn/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022)，您可能还需要安装它。
- en: 'Other operating systems and architectures require building from source. Trying
    to pip install on other operating systems and architectures may lead to `jaxlib`
    not being installed alongside `jax`, although `jax` may successfully install (but
    fail at runtime).  ## NVIDIA GPU'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '其他操作系统和架构需要从源代码构建。在其他操作系统和架构上尝试 pip 安装可能导致 `jaxlib` 未能与 `jax` 一起安装（虽然 `jax`
    可能成功安装，但在运行时可能会失败）。  ## NVIDIA GPU'
- en: JAX supports NVIDIA GPUs that have SM version 5.2 (Maxwell) or newer. Note that
    Kepler-series GPUs are no longer supported by JAX since NVIDIA has dropped support
    for Kepler GPUs in its software.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 支持具有 SM 版本 5.2（Maxwell）或更新版本的 NVIDIA GPU。请注意，由于 NVIDIA 在其软件中停止了对 Kepler
    系列 GPU 的支持，JAX 不再支持 Kepler 系列 GPU。
- en: You must first install the NVIDIA driver. You’re recommended to install the
    newest driver available from NVIDIA, but the driver version must be >= 525.60.13
    for CUDA 12 on Linux.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须先安装 NVIDIA 驱动程序。建议您安装 NVIDIA 提供的最新驱动程序，但驱动版本必须 >= 525.60.13 才能在 Linux 上运行
    CUDA 12。
- en: If you need to use a newer CUDA toolkit with an older driver, for example on
    a cluster where you cannot update the NVIDIA driver easily, you may be able to
    use the [CUDA forward compatibility packages](https://docs.nvidia.com/deploy/cuda-compatibility/)
    that NVIDIA provides for this purpose.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要在较老的驱动程序上使用更新的 CUDA 工具包，例如在无法轻松更新 NVIDIA 驱动程序的集群上，您可以使用 NVIDIA 专门为此目的提供的
    [CUDA 向前兼容包](https://docs.nvidia.com/deploy/cuda-compatibility/)。
- en: 'pip installation: NVIDIA GPU (CUDA, installed via pip, easier)'
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: pip 安装：NVIDIA GPU（通过 pip 安装，更加简便）
- en: 'There are two ways to install JAX with NVIDIA GPU support:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种安装 JAX 并支持 NVIDIA GPU 的方式：
- en: Using NVIDIA CUDA and cuDNN installed from pip wheels
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用从 pip 轮子安装的 NVIDIA CUDA 和 cuDNN
- en: Using a self-installed CUDA/cuDNN
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自行安装的 CUDA/cuDNN
- en: The JAX team strongly recommends installing CUDA and cuDNN using the pip wheels,
    since it is much easier!
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 团队强烈建议使用 pip wheel 安装 CUDA 和 cuDNN，因为这样更加简单！
- en: NVIDIA has released CUDA pip packages only for x86_64 and aarch64; on other
    platforms you must use a local installation of CUDA.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: NVIDIA 仅为 x86_64 和 aarch64 平台发布了 CUDA pip 包；在其他平台上，您必须使用本地安装的 CUDA。
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If JAX detects the wrong version of the NVIDIA CUDA libraries, there are several
    things you need to check:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 JAX 检测到错误版本的 NVIDIA CUDA 库，您需要检查以下几点：
- en: Make sure that `LD_LIBRARY_PATH` is not set, since `LD_LIBRARY_PATH` can override
    the NVIDIA CUDA libraries.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请确保未设置 `LD_LIBRARY_PATH`，因为 `LD_LIBRARY_PATH` 可能会覆盖 NVIDIA CUDA 库。
- en: Make sure that the NVIDIA CUDA libraries installed are those requested by JAX.
    Rerunning the installation command above should work.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保安装的 NVIDIA CUDA 库与 JAX 请求的库相符。重新运行上述安装命令应该可以解决问题。
- en: 'pip installation: NVIDIA GPU (CUDA, installed locally, harder)'
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: pip 安装：NVIDIA GPU（本地安装的 CUDA，更为复杂）
- en: If you prefer to use a preinstalled copy of NVIDIA CUDA, you must first install
    NVIDIA [CUDA](https://developer.nvidia.com/cuda-downloads) and [cuDNN](https://developer.nvidia.com/CUDNN).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想使用预安装的 NVIDIA CUDA 副本，您必须首先安装 NVIDIA 的[ CUDA](https://developer.nvidia.com/cuda-downloads)和[
    cuDNN](https://developer.nvidia.com/CUDNN)。
- en: JAX provides pre-built CUDA-compatible wheels for **Linux x86_64 and Linux aarch64
    only**. Other combinations of operating system and architecture are possible,
    but require building from source (refer to Building from source to learn more}.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 仅为 **Linux x86_64 和 Linux aarch64** 提供预编译的 CUDA 兼容 wheel。其他操作系统和架构的组合也可能存在，但需要从源代码构建（请参考构建指南以了解更多信息）。
- en: You should use an NVIDIA driver version that is at least as new as your [NVIDIA
    CUDA toolkit’s corresponding driver version](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#cuda-major-component-versions__table-cuda-toolkit-driver-versions).
    If you need to use a newer CUDA toolkit with an older driver, for example on a
    cluster where you cannot update the NVIDIA driver easily, you may be able to use
    the [CUDA forward compatibility packages](https://docs.nvidia.com/deploy/cuda-compatibility/)
    that NVIDIA provides for this purpose.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该使用至少与您的[NVIDIA CUDA toolkit 对应的驱动版本](https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html#cuda-major-component-versions__table-cuda-toolkit-driver-versions)相同的
    NVIDIA 驱动程序版本。例如，在无法轻易更新 NVIDIA 驱动程序的集群上需要使用更新的 CUDA 工具包，您可以使用 NVIDIA 为此目的提供的[CUDA
    向前兼容包](https://docs.nvidia.com/deploy/cuda-compatibility/)。
- en: 'JAX currently ships one CUDA wheel variant:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 目前提供一种 CUDA wheel 变体：
- en: '| Built with | Compatible with |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| Built with | Compatible with |'
- en: '| --- | --- |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| CUDA 12.3 | CUDA >=12.1 |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| CUDA 12.3 | CUDA >=12.1 |'
- en: '| CUDNN 9.0 | CUDNN >=9.0, <10.0 |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| CUDNN 9.0 | CUDNN >=9.0, <10.0 |'
- en: '| NCCL 2.19 | NCCL >=2.18 |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| NCCL 2.19 | NCCL >=2.18 |'
- en: JAX checks the versions of your libraries, and will report an error if they
    are not sufficiently new. Setting the `JAX_SKIP_CUDA_CONSTRAINTS_CHECK` environment
    variable will disable the check, but using older versions of CUDA may lead to
    errors, or incorrect results.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 检查您的库的版本，如果版本不够新，则会报错。设置 `JAX_SKIP_CUDA_CONSTRAINTS_CHECK` 环境变量将禁用此检查，但使用较旧版本的
    CUDA 可能会导致错误或不正确的结果。
- en: NCCL is an optional dependency, required only if you are performing multi-GPU
    computations.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: NCCL 是一个可选依赖项，仅在执行多 GPU 计算时才需要。
- en: 'To install, run:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 安装方法如下：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**These `pip` installations do not work with Windows, and may fail silently;
    refer to the table above.**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**这些 `pip` 安装在 Windows 上无法工作，并可能静默失败；请参考上表。**'
- en: 'You can find your CUDA version with the command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下命令查找您的 CUDA 版本：
- en: '[PRE6]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: JAX uses `LD_LIBRARY_PATH` to find CUDA libraries and `PATH` to find binaries
    (`ptxas`, `nvlink`). Please make sure that these paths point to the correct CUDA
    installation.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 使用 `LD_LIBRARY_PATH` 查找 CUDA 库，并使用 `PATH` 查找二进制文件（`ptxas`、`nvlink`）。请确保这些路径指向正确的
    CUDA 安装位置。
- en: Please let the JAX team know on [the GitHub issue tracker](https://github.com/google/jax/issues)
    if you run into any errors or problems with the pre-built wheels.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在使用预编译的 wheel 时遇到任何错误或问题，请在[GitHub 问题跟踪器](https://github.com/google/jax/issues)上告知
    JAX 团队。
- en: '### NVIDIA GPU Docker containers'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '### NVIDIA GPU Docker 容器'
- en: 'NVIDIA provides the [JAX Toolbox](https://github.com/NVIDIA/JAX-Toolbox) containers,
    which are bleeding edge containers containing nightly releases of jax and some
    models/frameworks.  ## Google Cloud TPU'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'NVIDIA 提供了[JAX 工具箱](https://github.com/NVIDIA/JAX-Toolbox)容器，这些是 bleeding edge
    容器，包含 jax 的夜间版本和一些模型/框架。  ## Google Cloud TPU'
- en: 'pip installation: Google Cloud TPU'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: pip 安装：Google Cloud TPU
- en: 'JAX provides pre-built wheels for [Google Cloud TPU](https://cloud.google.com/tpu/docs/users-guide-tpu-vm).
    To install JAX along with appropriate versions of `jaxlib` and `libtpu`, you can
    run the following in your cloud TPU VM:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 为 [Google Cloud TPU](https://cloud.google.com/tpu/docs/users-guide-tpu-vm)
    提供预构建的安装包。要在云 TPU VM 中安装 JAX 及相应版本的 `jaxlib` 和 `libtpu`，您可以运行以下命令：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'For users of Colab (https://colab.research.google.com/), be sure you are using
    *TPU v2* and not the older, deprecated TPU runtime.  ## Apple Silicon GPU (ARM-based)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Colab 的用户（https://colab.research.google.com/），请确保您使用的是 *TPU v2* 而不是已过时的旧
    TPU 运行时。## Apple Silicon GPU（基于 ARM 的）
- en: 'pip installation: Apple ARM-based Silicon GPUs'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: pip 安装：Apple 基于 ARM 的 Silicon GPU
- en: Apple provides an experimental Metal plugin for Apple ARM-based GPU hardware.
    For details, refer to [Apple’s JAX on Metal documentation](https://developer.apple.com/metal/jax/).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Apple 为基于 ARM 的 GPU 硬件提供了一个实验性的 Metal 插件。详情请参阅 [Apple 的 JAX on Metal 文档](https://developer.apple.com/metal/jax/)。
- en: '**Note:** There are several caveats with the Metal plugin:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** Metal 插件存在一些注意事项：'
- en: The Metal plugin is new and experimental and has a number of [known issues](https://github.com/google/jax/issues?q=is%3Aissue+is%3Aopen+label%3A%22Apple+GPU+%28Metal%29+plugin%22).
    Please report any issues on the JAX issue tracker.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Metal 插件是新的实验性质，并存在一些已知问题，请在 JAX 问题跟踪器上报告任何问题。
- en: 'The Metal plugin currently requires very specific versions of `jax` and `jaxlib`.
    This restriction will be relaxed over time as the plugin API matures.  ## AMD
    GPU'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前的 Metal 插件需要非常特定版本的 `jax` 和 `jaxlib`。随着插件 API 的成熟，此限制将逐步放宽。## AMD GPU
- en: 'JAX has experimental ROCm support. There are two ways to install JAX:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: JAX 具有实验性的 ROCm 支持。有两种安装 JAX 的方法：
- en: Use [AMD’s Docker container](https://hub.docker.com/r/rocm/jax); or
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 [AMD 的 Docker 容器](https://hub.docker.com/r/rocm/jax)；或者
- en: Build from source (refer to Building from source — a section called *Additional
    notes for building a ROCM `jaxlib` for AMD GPUs*).
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从源代码构建（参见从源代码构建 —— 一个名为 *Additional notes for building a ROCM `jaxlib` for AMD
    GPUs* 的部分）。
- en: Conda (community-supported)
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Conda（社区支持）
- en: Conda installation
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Conda 安装
- en: 'There is a community-supported Conda build of `jax`. To install it using `conda`,
    simply run:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 存在一个社区支持的 `jax` 的 Conda 构建。要使用 `conda` 安装它，只需运行：
- en: '[PRE8]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To install it on a machine with an NVIDIA GPU, run:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要在带有 NVIDIA GPU 的机器上安装它，请运行：
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Note the `cudatoolkit` distributed by `conda-forge` is missing `ptxas`, which
    JAX requires. You must therefore either install the `cuda-nvcc` package from the
    `nvidia` channel, or install CUDA on your machine separately so that `ptxas` is
    in your path. The channel order above is important (`conda-forge` before `nvidia`).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，由 `conda-forge` 分发的 `cudatoolkit` 缺少 JAX 所需的 `ptxas`。因此，您必须从 `nvidia` 渠道安装
    `cuda-nvcc` 包，或者在您的机器上单独安装 CUDA，以便 `ptxas` 在您的路径中可用。上述渠道顺序很重要（`conda-forge` 在
    `nvidia` 之前）。
- en: If you would like to override which release of CUDA is used by JAX, or to install
    the CUDA build on a machine without GPUs, follow the instructions in the [Tips
    & tricks](https://conda-forge.org/docs/user/tipsandtricks.html#installing-cuda-enabled-packages-like-tensorflow-and-pytorch)
    section of the `conda-forge` website.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望覆盖 JAX 使用的 CUDA 版本，或者在没有 GPU 的机器上安装 CUDA 版本，请按照 `conda-forge` 网站上“技巧和技巧”部分的说明操作。
- en: Go to the `conda-forge` [jaxlib](https://github.com/conda-forge/jaxlib-feedstock#installing-jaxlib)
    and [jax](https://github.com/conda-forge/jax-feedstock#installing-jax) repositories
    for more details.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 `conda-forge` 的 [jaxlib](https://github.com/conda-forge/jaxlib-feedstock#installing-jaxlib)
    和 [jax](https://github.com/conda-forge/jax-feedstock#installing-jax) 存储库获取更多详细信息。
- en: JAX nightly installation
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: JAX 夜间安装
- en: Nightly releases reflect the state of the main JAX repository at the time they
    are built, and may not pass the full test suite.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 夜间版本反映了它们构建时主 JAX 存储库的状态，并且可能无法通过完整的测试套件。
- en: 'CPU only:'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅限 CPU：
- en: '[PRE10]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Google Cloud TPU:'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Cloud TPU：
- en: '[PRE11]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'NVIDIA GPU (CUDA 12):'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA GPU（CUDA 12）：
- en: '[PRE12]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'NVIDIA GPU (CUDA 12) legacy:'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NVIDIA GPU（CUDA 12）遗留：
- en: Use the following for historical nightly releases of monolithic CUDA jaxlibs.
    You most likely do not want this; no further monolithic CUDA jaxlibs will be built
    and those that exist will expire by Sep 2024\. Use the “CUDA 12” option above.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 用于历史 nightly 版本的单片 CUDA jaxlibs。您很可能不需要此选项；不会再构建更多的单片 CUDA jaxlibs，并且现有的将在 2024
    年 9 月到期。请使用上面的“CUDA 12”选项。
- en: '[PRE13]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '## Building JAX from source'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '## 从源代码构建 JAX'
- en: Refer to Building from source.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 参考从源代码构建。
- en: Installing older `jaxlib` wheels
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装旧版本的 `jaxlib` wheels
- en: 'Due to storage limitations on the Python package index, the JAX team periodically
    removes older `jaxlib` wheels from the releases on http://pypi.org/project/jax.
    These can still be installed directly via the URLs here. For example:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Python软件包索引上的存储限制，JAX团队定期从 http://pypi.org/project/jax 的发布中删除旧的`jaxlib`安装包。但是您仍然可以通过这里的URL直接安装它们。例如：
- en: '[PRE14]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: For specific older GPU wheels, be sure to use the `jax_cuda_releases.html` URL;
    for example
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定的旧GPU安装包，请确保使用`jax_cuda_releases.html`的URL；例如
- en: '[PRE15]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
