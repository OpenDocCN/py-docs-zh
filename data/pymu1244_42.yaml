- en: Rect
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 矩形
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/rect.html](https://pymupdf.readthedocs.io/en/latest/rect.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/rect.html](https://pymupdf.readthedocs.io/en/latest/rect.html)
- en: '*Rect* represents a rectangle defined by four floating point numbers x0, y0,
    x1, y1\. They are treated as being coordinates of two diagonally opposite points.
    The first two numbers are regarded as the “top left” corner P[(x0,y0)] and P[(x1,y1)]
    as the “bottom right” one. However, these two properties need not coincide with
    their intuitive meanings – read on.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*矩形*由四个浮点数x0、y0、x1、y1定义。它们被视为两个对角点的坐标。前两个数被视为“左上”角P[(x0,y0)]，后两个数P[(x1,y1)]被视为“右下”角。然而，这两个属性不一定与它们直觉上的含义相符——请继续阅读。'
- en: 'The following remarks are also valid for [IRect](irect.html#irect) objects:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下注释也适用于[IRect](irect.html#irect)对象：
- en: A rectangle in the sense of (Py-) MuPDF **(and PDF)** always has **borders parallel
    to the x- resp. y-axis**. A general orthogonal tetragon **is not a rectangle**
    – in contrast to the mathematical definition.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在（Py-）MuPDF **（和PDF）**的意义上，矩形始终具有与x-或y轴平行的**边界**。一般的正交四边形不是矩形——与数学定义相反。
- en: The constructing points can be (almost! – see below) anywhere in the plane –
    they need not even be different, and e.g. “top left” need not be the geometrical
    “north-western” point.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构造点可以（几乎！——见下文）位于平面的任何地方——它们甚至不需要不同，例如，“左上角”不需要是几何上的“西北角”。
- en: Units are in points, where 72 points is 1 inch.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单位为点，其中72点为1英寸。
- en: 'For any given quadruple of numbers, the geometrically “same” rectangle can
    be defined in four different ways:'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于给定的四个数，几何上“相同”的矩形可以以四种不同的方式定义：
- en: Rect(P[(x0,y0)], P[(x1,y1)])
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 矩形P[(x0,y0)], P[(x1,y1)]
- en: Rect(P[(x1,y1)], P[(x0,y0)])
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 矩形P[(x1,y1)], P[(x0,y0)]
- en: Rect(P[(x0,y1)], P[(x1,y0)])
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 矩形P[(x0,y1)], P[(x1,y0)]
- en: Rect(P[(x1,y0)], P[(x0,y1)])
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 矩形P[(x1,y0)], P[(x0,y1)]
- en: '**(Changed in v1.19.0)** Hence some classification:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**（自v1.19.0更改）**因此有些分类：'
- en: A rectangle is called **valid** if `x0 <= x1` and `y0 <= y1` (i.e. the bottom
    right point is “south-eastern” to the top left one), otherwise **invalid**. Of
    the four alternatives above, **only the first** is valid. Please take into account,
    that in MuPDF’s coordinate system, the y-axis is oriented from **top to bottom**.
    Invalid rectangles have been called infinite in earlier versions.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`x0 <= x1`且`y0 <= y1`（即右下角点位于左上角点的“东南”方向），则矩形被称为**有效**，否则为**无效**。在MuPDF的坐标系统中，y轴是从**上到下**方向的。在早期版本中，无效的矩形被称为无限的。
- en: A rectangle is called **empty** if `x0 >= x1` or `y0 >= y1`. This implies, that
    **invalid rectangles are also always empty.** And [`width`](irect.html#IRect.width
    "IRect.width") (resp. [`height`](irect.html#IRect.height "IRect.height")) is **set
    to zero** if `x0 > x1` (resp. `y0 > y1`). In previous versions, a rectangle was
    empty only if one of width or height was zero.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`x0 >= x1`或`y0 >= y1`，则矩形被称为**空**。这意味着**无效的矩形也总是空的**。如果`x0 > x1`（或者`y0 > y1`），则[`width`](irect.html#IRect.width
    "IRect.width")（或[`height`](irect.html#IRect.height "IRect.height")）被**设置为零**。在早期版本中，只有当宽度或高度之一为零时，矩形才为空。
- en: Rectangle coordinates **cannot be outside** the number range from `FZ_MIN_INF_RECT
    = -2147483648` to `FZ_MAX_INF_RECT = 2147483520`. Both values have been chosen,
    because they are the smallest / largest 32bit integers that survive C float conversion
    roundtrips. In previous versions there was no limit for coordinate values.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩形坐标**不能超出**从`FZ_MIN_INF_RECT = -2147483648`到`FZ_MAX_INF_RECT = 2147483520`的数字范围。选择这两个值是因为它们是经过C浮点转换来回转换的最小/最大32位整数。在早期版本中，坐标值没有限制。
- en: There is **exactly one “infinite” rectangle**, defined by `x0 = y0 = FZ_MIN_INF_RECT`
    and `x1 = y1 = FZ_MAX_INF_RECT`. It contains every other rectangle. It is mainly
    used for technical purposes – e.g. when a function call should ignore a formally
    required rectangle argument. This rectangle is not empty.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存在**确切的一个“无限”矩形**，由`x0 = y0 = FZ_MIN_INF_RECT`和`x1 = y1 = FZ_MAX_INF_RECT`定义。它包含每一个其他矩形。主要用于技术目的，例如当函数调用应忽略一个形式上要求的矩形参数时。此矩形不为空。
- en: '**Rectangles are (semi-) open:** The right and the bottom edges (including
    the resp. corners) are not considered part of the rectangle. This implies, that
    only the top-left corner `(x0, y0)` can ever belong to the rectangle - the other
    three corners never do. An empty rectangle contains no corners at all.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矩形是（半）开放的：**右边和底边（包括相应的角）不被视为矩形的一部分。这意味着只有左上角`(x0, y0)`可能属于矩形，其余三个角不会。一个空矩形根本不包含任何角。'
- en: '[![_images/img-rect-contains.png](../Images/493e35b47c4160cd56a3e1fd68304a46.png)](_images/img-rect-contains.png)'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[![_images/img-rect-contains.png](../Images/493e35b47c4160cd56a3e1fd68304a46.png)](_images/img-rect-contains.png)'
- en: Here is an overview of the changes.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这里是更改的概览。
- en: '| Notion | Versions < 1.19.0 | Versions 1.19.* |'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| 注意 | 版本 < 1.19.0 | 版本 1.19.* |'
- en: '| --- | --- | --- |'
  id: totrans-21
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| empty | x0 = x1 or y0 = y1 | x0 >= x1 or y0 >= y1 – includes invalid rects
    |'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| 空 | x0 = x1 或 y0 = y1 | x0 >= x1 或 y0 >= y1 – 包括无效矩形 |'
- en: '| valid | n/a | x0 <= x1 and y0 <= y1 |'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| 有效 | 不适用 | x0 <= x1 且 y0 <= y1 |'
- en: '| infinite | all rects where x0 > x1 or y1 > y0 | **exactly one infinite rect
    / irect!** |'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| 无限 | 所有 x0 > x1 或 y1 > y0 的矩形 | **确切地一个无限矩形 / irect！** |'
- en: '| coordinate values | all numbers | `FZ_MIN_INF_RECT <= number <= FZ_MAX_INF_RECT`
    |'
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| 坐标值 | 所有数字 | `FZ_MIN_INF_RECT <= number <= FZ_MAX_INF_RECT` |'
- en: '| borders, corners | are parts of the rectangle | right and bottom corners
    and edges **are outside** |'
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_TB
  zh: '| 边界和角落 | 是矩形的一部分 | 右下角和边缘 **在外部** |'
- en: There are new top level functions defining infinite and standard empty rectangles
    and quads, see [`INFINITE_RECT()`](functions.html#INFINITE_RECT "INFINITE_RECT")
    and friends.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新增了定义无限和标准空矩形和四边形的顶级函数，请参见 [`INFINITE_RECT()`](functions.html#INFINITE_RECT
    "INFINITE_RECT") 和相关函数。
- en: '| **Methods / Attributes** | **Short Description** |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| **方法 / 属性** | **简短描述** |'
- en: '| --- | --- |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [`Rect.contains()`](#Rect.contains "Rect.contains") | checks containment
    of point_likes and rect_likes |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.contains()`](#Rect.contains "Rect.contains") | 检查点和矩形包含关系 |'
- en: '| [`Rect.get_area()`](#Rect.get_area "Rect.get_area") | calculate rectangle
    area |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.get_area()`](#Rect.get_area "Rect.get_area") | 计算矩形面积 |'
- en: '| [`Rect.include_point()`](#Rect.include_point "Rect.include_point") | enlarge
    rectangle to also contain a point |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.include_point()`](#Rect.include_point "Rect.include_point") | 扩展矩形以包含一个点
    |'
- en: '| [`Rect.include_rect()`](#Rect.include_rect "Rect.include_rect") | enlarge
    rectangle to also contain another one |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.include_rect()`](#Rect.include_rect "Rect.include_rect") | 扩展矩形以包含另一个矩形
    |'
- en: '| [`Rect.intersect()`](#Rect.intersect "Rect.intersect") | common part with
    another rectangle |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.intersect()`](#Rect.intersect "Rect.intersect") | 与另一个矩形的公共部分 |'
- en: '| [`Rect.intersects()`](#Rect.intersects "Rect.intersects") | checks for non-empty
    intersections |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.intersects()`](#Rect.intersects "Rect.intersects") | 检查非空交集 |'
- en: '| [`Rect.morph()`](#Rect.morph "Rect.morph") | transform with a point and a
    matrix |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.morph()`](#Rect.morph "Rect.morph") | 使用点和矩阵进行变换 |'
- en: '| [`Rect.torect()`](#Rect.torect "Rect.torect") | the matrix that transforms
    to another rectangle |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.torect()`](#Rect.torect "Rect.torect") | 将矩阵转换为另一个矩形 |'
- en: '| [`Rect.norm()`](#Rect.norm "Rect.norm") | the Euclidean norm |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.norm()`](#Rect.norm "Rect.norm") | 欧几里得范数 |'
- en: '| [`Rect.normalize()`](#Rect.normalize "Rect.normalize") | makes a rectangle
    valid |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.normalize()`](#Rect.normalize "Rect.normalize") | 使矩形有效 |'
- en: '| [`Rect.round()`](#Rect.round "Rect.round") | create smallest [IRect](irect.html#irect)
    containing rectangle |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.round()`](#Rect.round "Rect.round") | 创建包含矩形的最小 [IRect](irect.html#irect)
    |'
- en: '| [`Rect.transform()`](#Rect.transform "Rect.transform") | transform rectangle
    with a matrix |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.transform()`](#Rect.transform "Rect.transform") | 使用矩阵变换矩形 |'
- en: '| [`Rect.bottom_left`](#Rect.bottom_left "Rect.bottom_left") | bottom left
    point, synonym *bl* |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.bottom_left`](#Rect.bottom_left "Rect.bottom_left") | 左下角点，同义词 *bl*
    |'
- en: '| [`Rect.bottom_right`](#Rect.bottom_right "Rect.bottom_right") | bottom right
    point, synonym *br* |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.bottom_right`](#Rect.bottom_right "Rect.bottom_right") | 右下角点，同义词
    *br* |'
- en: '| [`Rect.height`](#Rect.height "Rect.height") | rectangle height |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.height`](#Rect.height "Rect.height") | 矩形高度 |'
- en: '| [`Rect.irect`](#Rect.irect "Rect.irect") | equals result of method *round()*
    |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.irect`](#Rect.irect "Rect.irect") | 等同于方法 *round()* 的结果 |'
- en: '| [`Rect.is_empty`](#Rect.is_empty "Rect.is_empty") | whether rectangle is
    empty |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.is_empty`](#Rect.is_empty "Rect.is_empty") | 矩形是否为空 |'
- en: '| [`Rect.is_valid`](#Rect.is_valid "Rect.is_valid") | whether rectangle is
    valid |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.is_valid`](#Rect.is_valid "Rect.is_valid") | 矩形是否有效 |'
- en: '| [`Rect.is_infinite`](#Rect.is_infinite "Rect.is_infinite") | whether rectangle
    is infinite |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.is_infinite`](#Rect.is_infinite "Rect.is_infinite") | 矩形是否无限大 |'
- en: '| [`Rect.top_left`](#Rect.top_left "Rect.top_left") | top left point, synonym
    *tl* |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.top_left`](#Rect.top_left "Rect.top_left") | 左上角点，同义词 *tl* |'
- en: '| [`Rect.top_right`](#Rect.top_right "Rect.top_right") | top_right point, synonym
    *tr* |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.top_right`](#Rect.top_right "Rect.top_right") | 右上角点，同义词 *tr* |'
- en: '| [`Rect.quad`](#Rect.quad "Rect.quad") | [Quad](quad.html#quad) made from
    rectangle corners |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.quad`](#Rect.quad "Rect.quad") | 由矩形角落制成的 [Quad](quad.html#quad) |'
- en: '| [`Rect.width`](#Rect.width "Rect.width") | rectangle width |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.width`](#Rect.width "Rect.width") | 矩形宽度 |'
- en: '| [`Rect.x0`](#Rect.x0 "Rect.x0") | left corners’ x coordinate |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.x0`](#Rect.x0 "Rect.x0") | 左上角的 x 坐标 |'
- en: '| [`Rect.x1`](#Rect.x1 "Rect.x1") | right corners’ x -coordinate |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.x1`](#Rect.x1 "Rect.x1") | 右上角的 x 坐标 |'
- en: '| [`Rect.y0`](#Rect.y0 "Rect.y0") | top corners’ y coordinate |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.y0`](#Rect.y0 "Rect.y0") | 左上角的 y 坐标 |'
- en: '| [`Rect.y1`](#Rect.y1 "Rect.y1") | bottom corners’ y coordinate |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| [`Rect.y1`](#Rect.y1 "Rect.y1") | 底部的 y 坐标 |'
- en: '**Class API**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**类 API**'
- en: '[PRE0]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Overloaded constructors: *top_left*, *bottom_right* stand for [`point_like`](glossary.html#point_like
    "point_like") objects, “sequence” is a Python sequence type of 4 numbers (see
    [Using Python Sequences as Arguments in PyMuPDF](app3.html#sequencetypes)), “rect”
    means another [`rect_like`](glossary.html#rect_like "rect_like"), while the other
    parameters mean coordinates.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 重载的构造函数：*top_left*，*bottom_right*表示[`point_like`](glossary.html#point_like "point_like")对象，“sequence”是一个包含
    4 个数字的 Python 序列类型（见[在 PyMuPDF 中使用 Python 序列作为参数](app3.html#sequencetypes)），“rect”表示另一个[`rect_like`](glossary.html#rect_like
    "rect_like")，而其他参数表示坐标。
- en: If “rect” is specified, the constructor creates a **new copy** of it.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了“rect”，则构造函数将创建它的**新副本**。
- en: Without parameters, the empty rectangle *Rect(0.0, 0.0, 0.0, 0.0)* is created.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 没有参数时，创建空矩形*Rect(0.0, 0.0, 0.0, 0.0)*。
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Creates the smallest containing [IRect](irect.html#irect). This is **not**
    the same as simply rounding the rectangle’s edges: The top left corner is rounded
    upwards and to the left while the bottom right corner is rounded downwards and
    to the right.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 创建包含[IRect](irect.html#irect)的最小矩形。这**不**同于简单地将矩形的边缘四舍五入：左上角向上和向左舍入，而右下角向下和向右舍入。
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If the rectangle is **empty**, the result is also empty.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果矩形是**空的**，则结果也是空的。
- en: '**Possible paradox:** The result may be empty, **even if** the rectangle is
    **not** empty! In such cases, the result obviously does **not** contain the rectangle.
    This is because MuPDF’s algorithm allows for a small tolerance (1e-3). Example:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可能的悖论：**即使矩形**不**为空，结果可能为空！在这种情况下，显然结果中不包含矩形。这是因为 MuPDF 的算法允许有一个小的容差（1e-3）。例如：'
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Return type:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[IRect](irect.html#irect)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[IRect](irect.html#irect)'
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Transforms the rectangle with a matrix and **replaces the original**. If the
    rectangle is empty or infinite, this is a no-operation.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 用矩阵变换矩形并**替换原始矩形**。如果矩形为空或无限，则这是一个无操作。
- en: 'Parameters:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**m** ([Matrix](matrix.html#matrix)) – The matrix for the transformation.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**m**（[矩阵](matrix.html#matrix)）- 转换的矩阵。'
- en: 'Return type:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '*Rect*'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*矩形*'
- en: 'Returns:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: the smallest rectangle that contains the transformed original.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 包含变换后原始矩形的最小矩形。
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The intersection (common rectangular area, largest rectangle contained in both)
    of the current rectangle and *r* is calculated and **replaces the current** rectangle.
    If either rectangle is empty, the result is also empty. If *r* is infinite, this
    is a no-operation. If the rectangles are (mathematically) disjoint sets, then
    the result is invalid. If the result is valid but empty, then the rectangles touch
    each other in a corner or (part of) a side.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 计算当前矩形和*r*的交集（公共矩形区域，同时包含在两者中的最大矩形）并**替换当前**矩形。如果其中一个矩形为空，则结果也为空。如果*r*是无限的，则这是一个无操作。如果矩形（在数学上）是不相交的集合，则结果无效。如果结果有效但为空，则矩形在一个角落或一边的（部分）接触。
- en: 'Parameters:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**r** ([Rect](#rect)) – Second rectangle'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**r**（[矩形](#rect)）- 第二个矩形'
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The smallest rectangle containing the current one and *r* is calculated and
    **replaces the current** one. If either rectangle is infinite, the result is also
    infinite. If one is empty, the other one will be taken as the result.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 计算当前矩形和*r*的最小包含矩形，并**替换当前**矩形。如果其中一个矩形是无限的，则结果也是无限的。如果其中一个为空，则另一个将被视为结果。
- en: 'Parameters:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**r** ([Rect](#rect)) – Second rectangle'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**r**（[矩形](#rect)）- 第二个矩形'
- en: '[PRE14]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The smallest rectangle containing the current one and point *p* is calculated
    and **replaces the current** one. **The infinite rectangle remains unchanged.**
    To create a rectangle containing a series of points, start with (the empty) *pymupdf.Rect(p1,
    p1)* and successively include the remaining points.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 计算当前矩形和点*p*的最小包含矩形，并**替换当前**矩形。**无限矩形保持不变。**要创建包含一系列点的矩形，请从（空的）*pymupdf.Rect(p1,
    p1)*开始，然后逐步包含其余点。
- en: 'Parameters:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**p** ([Point](point.html#point)) – Point to include.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**p**（[点](point.html#point)）- 要包含的点。'
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Calculate the area of the rectangle and, with no parameter, equals *abs(rect)*.
    Like an empty rectangle, the area of an infinite rectangle is also zero. So, at
    least one of *pymupdf.Rect(p1, p2)* and *pymupdf.Rect(p2, p1)* has a zero area.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 计算矩形的面积，并且没有参数时，等于*abs(rect)*。就像空矩形一样，无限矩形的面积也是零。因此，*pymupdf.Rect(p1, p2)* 和
    *pymupdf.Rect(p2, p1)* 至少有一个具有零面积。
- en: 'Parameters:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**unit** (*str*) – Specify required unit: respective squares of *px* (pixels,
    default), *in* (inches), *cm* (centimeters), or *mm* (millimeters).'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**unit**（*str*）– 指定所需单位：*px*（像素，默认）、*in*（英寸）、*cm*（厘米）或*mm*（毫米）的平方。'
- en: 'Return type:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: float
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE16]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Checks whether *x* is contained in the rectangle. It may be an *IRect*, *Rect*,
    *Point* or number. If *x* is an empty rectangle, this is always true. If the rectangle
    is empty this is always *False* for all non-empty rectangles and for all points.
    `x in rect` and `rect.contains(x)` are equivalent.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 检查*x*是否包含在矩形中。它可以是*IRect*、*Rect*、*Point*或数字。如果*x*是空矩形，则始终为真。如果矩形为空，则对所有非空矩形和所有点始终为*False*。`x
    in rect` 和 `rect.contains(x)` 是等价的。
- en: 'Parameters:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x** ([`rect_like`](glossary.html#rect_like "rect_like") or [`point_like`](glossary.html#point_like
    "point_like").) – the object to check.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**x**（[`rect_like`](glossary.html#rect_like "rect_like") 或 [`point_like`](glossary.html#point_like
    "point_like")。）– 要检查的对象。'
- en: 'Return type:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: bool
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔
- en: '[PRE17]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Checks whether the rectangle and a [`rect_like`](glossary.html#rect_like "rect_like")
    “r” contain a common non-empty [Rect](#rect). This will always be *False* if either
    is infinite or empty.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 检查矩形和[`rect_like`](glossary.html#rect_like "rect_like") “r”是否包含公共非空[Rect](#rect)。如果其中一个是无限的或为空，将始终为*False*。
- en: 'Parameters:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**r** (*rect_like*) – the rectangle to check.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**r**（*rect_like*）– 要检查的矩形。'
- en: 'Return type:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: bool
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔
- en: '[PRE18]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: New in version 1.19.3
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新版中的版本 1.19.3
- en: Compute the matrix which transforms this rectangle to a given one.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 计算将此矩形转换为给定矩形的矩阵。
- en: 'Parameters:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**rect** (*rect_like*) – the target rectangle. Must not be empty or infinite.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**rect**（*rect_like*）– 目标矩形。必须不为空或无限。'
- en: 'Return type:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Matrix](matrix.html#matrix)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '[Matrix](matrix.html#matrix)'
- en: 'Returns:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: 'a matrix `mat` such that `self * mat = rect`. Can for example be used to transform
    between the page and the pixmap coordinates. See an example use here [How to Use
    Pixmaps: Checking Text Visibility](recipes-images.html#recipesimages-p).'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '一个矩阵`mat`，使得`self * mat = rect`。例如，可用于在页面坐标和像素图坐标之间进行转换。请查看此处的示例用法 [How to
    Use Pixmaps: Checking Text Visibility](recipes-images.html#recipesimages-p)。'
- en: '[PRE19]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: New in version 1.17.0
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新版中的版本 1.17.0
- en: Return a new quad after applying a matrix to the rectangle using the fixed point
    `fixpoint`.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用固定点`fixpoint`应用矩阵到矩形后，返回一个新的四边形。
- en: 'Parameters:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fixpoint** (*point_like*) – the fixed point.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fixpoint**（*point_like*）– 固定点。'
- en: '**matrix** (*matrix_like*) – the matrix.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**matrix**（*matrix_like*）– 矩阵。'
- en: 'Returns:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: a new [Quad](quad.html#quad). This a wrapper for the same-named quad method.
    If infinite, the infinite quad is returned.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 新的[Quad](quad.html#quad)。这是同名quad方法的包装器。如果是无限的，将返回无限quad。
- en: '[PRE20]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: New in version 1.16.0
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新版中的版本 1.16.0
- en: Return the Euclidean norm of the rectangle treated as a vector of four numbers.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 返回作为四个数字向量处理的矩形的欧几里得范数。
- en: '[PRE21]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Replace** the rectangle with its valid version. This is done by shuffling
    the rectangle corners. After completion of this method, the bottom right corner
    will indeed be south-eastern to the top left one (but may still be empty).'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**替换** 矩形为其有效版本。通过对矩形角进行洗牌来完成此操作。完成此方法后，右下角确实位于左上角的东南方（但可能仍为空）。'
- en: '[PRE22]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Equals result of method *round()*.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 等于方法*round()*的结果。
- en: '[PRE23]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Equals *Point(x0, y0)*.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 *Point(x0, y0)*。
- en: 'Type:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[Point](point.html#point)'
- en: '[PRE25]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Equals `Point(x1, y0)`.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 `Point(x1, y0)`。
- en: 'Type:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[Point](point.html#point)'
- en: '[PRE27]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Equals `Point(x0, y1)`.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 `Point(x0, y1)`。
- en: 'Type:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[Point](point.html#point)'
- en: '[PRE29]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Equals `Point(x1, y1)`.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 `Point(x1, y1)`。
- en: 'Type:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '[Point](point.html#point)'
- en: '[PRE31]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The quadrilateral `Quad(rect.tl, rect.tr, rect.bl, rect.br)`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 四边形 `Quad(rect.tl, rect.tr, rect.bl, rect.br)`。
- en: 'Type:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Quad](quad.html#quad)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '[Quad](quad.html#quad)'
- en: '[PRE32]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Width of the rectangle. Equals `max(x1 - x0, 0)`.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 矩形的宽度。等于 `max(x1 - x0, 0)`。
- en: 'Return type:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: float
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE33]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Height of the rectangle. Equals `max(y1 - y0, 0)`.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 矩形的高度。等于 `max(y1 - y0, 0)`。
- en: 'Return type:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: float
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE34]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: X-coordinate of the left corners.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧角的X坐标。
- en: 'Type:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE35]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Y-coordinate of the top corners.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部角的Y坐标。
- en: 'Type:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE36]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: X-coordinate of the right corners.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 右侧角的X坐标。
- en: 'Type:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE37]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Y-coordinate of the bottom corners.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 底部角的Y坐标。
- en: 'Type:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 浮动
- en: '[PRE38]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '`True` if this is the infinite rectangle.'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`True`如果这是无限矩形。'
- en: 'Type:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE39]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '`True` if rectangle is empty.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`True`如果矩形为空。'
- en: 'Type:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE40]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '`True` if rectangle is valid.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`True`如果矩形有效。'
- en: 'Type:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: Note
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This class adheres to the Python sequence protocol, so components can be accessed
    via their index, too. Also refer to [Using Python Sequences as Arguments in PyMuPDF](app3.html#sequencetypes).
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此类符合Python序列协议，因此也可以通过索引访问组件。还请参阅[在PyMuPDF中使用Python序列作为参数](app3.html#sequencetypes)。
- en: Rectangles can be used with arithmetic operators – see chapter [Operator Algebra
    for Geometry Objects](algebra.html#algebra).
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩形可以与算术运算符一起使用 — 请参阅[几何对象运算代数](algebra.html#algebra)章节。
- en: Do you have any feedback on this page?
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 您对此页面有任何反馈吗？
- en: '* * *'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，没有任何明示或暗示的保证。本软件在许可下分发，未经许可明确授权，不得复制、修改或分发。请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)的许可信息或联系美国旧金山CA
    94129 Mesa街39号108A套房的Artifex Software Inc.获取更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 本文档覆盖了所有版本，直到1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
