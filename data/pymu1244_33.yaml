- en: IRect
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IRect
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/irect.html](https://pymupdf.readthedocs.io/en/latest/irect.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/irect.html](https://pymupdf.readthedocs.io/en/latest/irect.html)
- en: IRect is a rectangular bounding box, very similar to [Rect](rect.html#rect),
    except that all corner coordinates are integers. IRect is used to specify an area
    of pixels, e.g. to receive image data during rendering. Otherwise, e.g. considerations
    concerning emptiness and validity of rectangles also apply to this class. Methods
    and attributes have the same names, and in many cases are implemented by re-using
    the respective [Rect](rect.html#rect) counterparts.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: IRect 是一个矩形边界框，与 [Rect](rect.html#rect) 非常相似，唯一的区别是所有角坐标都是整数。IRect 用于指定像素区域，例如在渲染期间接收图像数据。否则，例如，关于矩形的空值和有效性的考虑也适用于这个类。方法和属性具有相同的名称，并且在许多情况下通过重用相应的
    [Rect](rect.html#rect) 对应项来实现。
- en: '| **Attribute / Method** | **Short Description** |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| **属性 / 方法** | **简短描述** |'
- en: '| --- | --- |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [`IRect.contains()`](#IRect.contains "IRect.contains") | checks containment
    of another object |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.contains()`](#IRect.contains "IRect.contains") | 检查另一个对象的包含性 |'
- en: '| [`IRect.get_area()`](#IRect.get_area "IRect.get_area") | calculate rectangle
    area |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.get_area()`](#IRect.get_area "IRect.get_area") | 计算矩形面积 |'
- en: '| [`IRect.intersect()`](#IRect.intersect "IRect.intersect") | common part with
    another rectangle |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.intersect()`](#IRect.intersect "IRect.intersect") | 与另一个矩形的公共部分 |'
- en: '| [`IRect.intersects()`](#IRect.intersects "IRect.intersects") | checks for
    non-empty intersection |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.intersects()`](#IRect.intersects "IRect.intersects") | 检查是否存在非空交集
    |'
- en: '| [`IRect.morph()`](#IRect.morph "IRect.morph") | transform with a point and
    a matrix |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.morph()`](#IRect.morph "IRect.morph") | 使用点和矩阵进行变换 |'
- en: '| [`IRect.torect()`](#IRect.torect "IRect.torect") | matrix that transforms
    to another rectangle |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.torect()`](#IRect.torect "IRect.torect") | 变换到另一个矩形的矩阵 |'
- en: '| [`IRect.norm()`](#IRect.norm "IRect.norm") | the Euclidean norm |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.norm()`](#IRect.norm "IRect.norm") | 欧几里得范数 |'
- en: '| [`IRect.normalize()`](#IRect.normalize "IRect.normalize") | makes a rectangle
    finite |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.normalize()`](#IRect.normalize "IRect.normalize") | 使矩形有限 |'
- en: '| [`IRect.bottom_left`](#IRect.bottom_left "IRect.bottom_left") | bottom left
    point, synonym *bl* |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.bottom_left`](#IRect.bottom_left "IRect.bottom_left") | 左下角点，同义词
    *bl* |'
- en: '| [`IRect.bottom_right`](#IRect.bottom_right "IRect.bottom_right") | bottom
    right point, synonym *br* |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.bottom_right`](#IRect.bottom_right "IRect.bottom_right") | 右下角点，同义词
    *br* |'
- en: '| [`IRect.height`](#IRect.height "IRect.height") | height of the rectangle
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.height`](#IRect.height "IRect.height") | 矩形的高度 |'
- en: '| [`IRect.is_empty`](#IRect.is_empty "IRect.is_empty") | whether rectangle
    is empty |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.is_empty`](#IRect.is_empty "IRect.is_empty") | 矩形是否为空 |'
- en: '| [`IRect.is_infinite`](#IRect.is_infinite "IRect.is_infinite") | whether rectangle
    is infinite |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.is_infinite`](#IRect.is_infinite "IRect.is_infinite") | 矩形是否无限 |'
- en: '| [`IRect.rect`](#IRect.rect "IRect.rect") | the [Rect](rect.html#rect) equivalent
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.rect`](#IRect.rect "IRect.rect") | [Rect](rect.html#rect) 的等价项 |'
- en: '| [`IRect.top_left`](#IRect.top_left "IRect.top_left") | top left point, synonym
    *tl* |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.top_left`](#IRect.top_left "IRect.top_left") | 左上角点，同义词 *tl* |'
- en: '| [`IRect.top_right`](#IRect.top_right "IRect.top_right") | top_right point,
    synonym *tr* |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.top_right`](#IRect.top_right "IRect.top_right") | 右上角点，同义词 *tr* |'
- en: '| [`IRect.quad`](#IRect.quad "IRect.quad") | [Quad](quad.html#quad) made from
    rectangle corners |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.quad`](#IRect.quad "IRect.quad") | 由矩形角点制成的 [Quad](quad.html#quad)
    |'
- en: '| [`IRect.width`](#IRect.width "IRect.width") | width of the rectangle |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.width`](#IRect.width "IRect.width") | 矩形的宽度 |'
- en: '| [`IRect.x0`](#IRect.x0 "IRect.x0") | X-coordinate of the top left corner
    |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.x0`](#IRect.x0 "IRect.x0") | 左上角的 X 坐标 |'
- en: '| [`IRect.x1`](#IRect.x1 "IRect.x1") | X-coordinate of the bottom right corner
    |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.x1`](#IRect.x1 "IRect.x1") | 右下角的 X 坐标 |'
- en: '| [`IRect.y0`](#IRect.y0 "IRect.y0") | Y-coordinate of the top left corner
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.y0`](#IRect.y0 "IRect.y0") | 左上角的 Y 坐标 |'
- en: '| [`IRect.y1`](#IRect.y1 "IRect.y1") | Y-coordinate of the bottom right corner
    |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| [`IRect.y1`](#IRect.y1 "IRect.y1") | 右下角的 Y 坐标 |'
- en: '**Class API**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**类 API**'
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Overloaded constructors. Also see examples below and those for the [Rect](rect.html#rect)
    class.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 构造函数的重载。还请参阅下面的示例以及 [Rect](rect.html#rect) 类的示例。
- en: If another irect is specified, a **new copy** will be made.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了另一个 irect，将创建一个 **新副本**。
- en: If sequence is specified, it must be a Python sequence type of 4 numbers (see
    [Using Python Sequences as Arguments in PyMuPDF](app3.html#sequencetypes)). Non-integer
    numbers will be truncated, non-numeric values will raise an exception.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了序列，它必须是包含 4 个数字的 Python 序列类型（参见 [使用 Python 序列作为 PyMuPDF 中的参数](app3.html#sequencetypes)）。非整数数字将被截断，非数值将引发异常。
- en: The other parameters mean integer coordinates.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 其他参数指整数坐标。
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Calculates the area of the rectangle and, with no parameter, equals *abs(IRect)*.
    Like an empty rectangle, the area of an infinite rectangle is also zero.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 计算矩形的面积，并且没有参数时等于 *abs(IRect)*。与空矩形一样，无限矩形的面积也是零。
- en: 'Parameters:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**unit** (*str*) – Specify required unit: respective squares of “px” (pixels,
    default), “in” (inches), “cm” (centimeters), or “mm” (millimeters).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**unit** (*str*) – 指定所需单位：“px”（像素，默认）、“in”（英寸）、“cm”（厘米）或“mm”（毫米）的平方。'
- en: 'Return type:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: float
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点数
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The intersection (common rectangular area) of the current rectangle and *ir*
    is calculated and replaces the current rectangle. If either rectangle is empty,
    the result is also empty. If either rectangle is infinite, the other one is taken
    as the result – and hence also infinite if both rectangles were infinite.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 计算当前矩形与 *ir* 的交集（共同的矩形区域），并替换当前矩形。如果任一矩形为空，则结果也为空。如果任一矩形为无限，则另一个被视为结果 - 因此如果两个矩形均为无限，则结果也为无限。
- en: 'Parameters:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**ir** (*rect_like*) – Second rectangle.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**ir** (*rect_like*) – 第二个矩形。'
- en: '[PRE7]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Checks whether *x* is contained in the rectangle. It may be [`rect_like`](glossary.html#rect_like
    "rect_like"), [`point_like`](glossary.html#point_like "point_like") or a number.
    If *x* is an empty rectangle, this is always true. Conversely, if the rectangle
    is empty this is always *False*, if *x* is not an empty rectangle and not a number.
    If *x* is a number, it will be checked to be one of the four components. *x in
    irect* and *irect.contains(x)* are equivalent.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 *x* 是否包含在矩形内。它可以是 [`rect_like`](glossary.html#rect_like "rect_like")、[`point_like`](glossary.html#point_like
    "point_like") 或数字。如果 *x* 是空矩形，则始终为真。反之，如果矩形为空，则始终为 *False*；如果 *x* 不是空矩形且不是数字，则始终为
    *False*；如果 *x* 是数字，则检查它是否是四个组件之一。*x in irect* 和 *irect.contains(x)* 是等效的。
- en: 'Parameters:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**x** ([IRect](#irect) or [Rect](rect.html#rect) or [Point](point.html#point)
    or int) – the object to check.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**x** ([IRect](#irect) 或 [矩形](rect.html#rect) 或 [点](point.html#point) 或 整数)
    – 要检查的对象。'
- en: 'Return type:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: bool
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Checks whether the rectangle and the [`rect_like`](glossary.html#rect_like "rect_like")
    “r” contain a common non-empty [IRect](#irect). This will always be *False* if
    either is infinite or empty.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 检查矩形和 [`rect_like`](glossary.html#rect_like "rect_like") “r” 是否包含共同非空的 [IRect](#irect)。如果其中任一方为无限或空，则始终为
    *False*。
- en: 'Parameters:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**r** (*rect_like*) – the rectangle to check.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**r** (*rect_like*) – 要检查的矩形。'
- en: 'Return type:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: bool
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE9]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: New in version 1.19.3
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本 1.19.3 中的新功能
- en: Compute the matrix which transforms this rectangle to a given one. See [`Rect.torect()`](rect.html#Rect.torect
    "Rect.torect").
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 计算将此矩形转换为给定矩形的矩阵。参见 [`Rect.torect()`](rect.html#Rect.torect "Rect.torect")。
- en: 'Parameters:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**rect** (*rect_like*) – the target rectangle. Must not be empty or infinite.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**rect** (*rect_like*) – 目标矩形。不得为空或无限。'
- en: 'Return type:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 返回类型：
- en: '[Matrix](matrix.html#matrix)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[矩阵](matrix.html#matrix)'
- en: 'Returns:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: a matrix `mat` such that `self * mat = rect`. Can for example be used to transform
    between the page and the pixmap coordinates.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 一个矩阵 `mat`，使得 `self * mat = rect`。例如，可用于在页面和位图坐标之间进行转换。
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: New in version 1.17.0
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本 1.17.0 中的新功能
- en: Return a new quad after applying a matrix to it using a fixed point.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用固定点应用矩阵后返回一个新的四边形。
- en: 'Parameters:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fixpoint** (*point_like*) – the fixed point.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fixpoint** (*point_like*) – 固定点。'
- en: '**matrix** (*matrix_like*) – the matrix.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**matrix** (*matrix_like*) – 矩阵。'
- en: 'Returns:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: a new [Quad](quad.html#quad). This a wrapper of the same-named quad method.
    If infinite, the infinite quad is returned.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 返回一个新的 [Quad](quad.html#quad)。这是同名 quad 方法的包装器。如果是无限的，则返回无限的 quad。
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: New in version 1.16.0
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本 1.16.0 中的新功能
- en: Return the Euclidean norm of the rectangle treated as a vector of four numbers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 返回矩形作为四个数字向量的欧几里得范数。
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Make the rectangle finite. This is done by shuffling rectangle corners. After
    this, the bottom right corner will indeed be south-eastern to the top left one.
    See [Rect](rect.html#rect) for a more details.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使矩形变为有限。通过移动矩形的角来实现。在此之后，右下角确实位于左上角的东南方。更多详细信息请参见 [矩形](rect.html#rect)。
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Equals *Point(x0, y0)*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 *Point(x0, y0)*。
- en: 'Type:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Equals *Point(x1, y0)*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 *Point(x1, y0)*。
- en: 'Type:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Equals *Point(x0, y1)*.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 *Point(x0, y1)*。
- en: 'Type:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE19]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Equals *Point(x1, y1)*.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 等于 *Point(x1, y1)*。
- en: 'Type:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE21]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The [Rect](rect.html#rect) with the same coordinates as floats.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 与浮点坐标相同的 [矩形](rect.html#rect)。
- en: 'Type:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Rect](rect.html#rect)'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '[矩形](rect.html#rect)'
- en: '[PRE22]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The quadrilateral *Quad(irect.tl, irect.tr, irect.bl, irect.br)*.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 四边形 *Quad(irect.tl, irect.tr, irect.bl, irect.br)*。
- en: 'Type:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Quad](quad.html#quad)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[四边形](quad.html#quad)'
- en: '[PRE23]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Contains the width of the bounding box. Equals *abs(x1 - x0)*.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 包含边界框的宽度。等于 *abs(x1 - x0)*。
- en: 'Type:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: int
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE24]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Contains the height of the bounding box. Equals *abs(y1 - y0)*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 包含边界框的高度。等于 *abs(y1 - y0)*。
- en: 'Type:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: int
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE25]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: X-coordinate of the left corners.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 左角的X坐标。
- en: 'Type:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: int
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE26]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Y-coordinate of the top corners.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 顶角的Y坐标。
- en: 'Type:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: int
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE27]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: X-coordinate of the right corners.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 右角的X坐标。
- en: 'Type:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: int
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE28]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Y-coordinate of the bottom corners.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 底角的Y坐标。
- en: 'Type:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: int
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 整数
- en: '[PRE29]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '*True* if rectangle is infinite, *False* otherwise.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '*True* 表示矩形无限，*False* 表示相反。'
- en: 'Type:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE30]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '*True* if rectangle is empty, *False* otherwise.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*True* 表示矩形为空，*False* 表示相反。'
- en: 'Type:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: Note
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This class adheres to the Python sequence protocol, so components can be accessed
    via their index, too. Also refer to [Using Python Sequences as Arguments in PyMuPDF](app3.html#sequencetypes).
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此类符合Python序列协议，因此也可以通过它们的索引访问组件。还可参考 [在PyMuPDF中使用Python序列作为参数](app3.html#sequencetypes)。
- en: Rectangles can be used with arithmetic operators – see chapter [Operator Algebra
    for Geometry Objects](algebra.html#algebra).
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 矩形可以与算术运算符一起使用 – 请参阅章节 [几何对象的运算代数](algebra.html#algebra)。
- en: Do you have any feedback on this page?
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对此页面有任何反馈吗？
- en: '* * *'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 本软件按原样提供，不提供任何明示或暗示的保证。本软件在许可下分发，并且除非在该许可条款明确授权的情况下，不得复制、修改或分发。有关详细信息，请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)，或联系Artifex
    Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA 94129, United States。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档覆盖了所有版本，直至1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
