- en: jax.export module
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: jax.export 模块
- en: 原文：[`jax.readthedocs.io/en/latest/jax.export.html`](https://jax.readthedocs.io/en/latest/jax.export.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jax.readthedocs.io/en/latest/jax.export.html`](https://jax.readthedocs.io/en/latest/jax.export.html)
- en: '## Classes'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '## 类'
- en: '| `Exported`(fun_name, in_tree, in_avals, ...) | A JAX function lowered to
    StableHLO. |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '| `Exported`(fun_name, in_tree, in_avals, ...) | 降低为 StableHLO 的 JAX 函数。 |'
- en: '| `DisabledSafetyCheck`(_impl) | A safety check that should be skipped on (de)serialization.
    |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| `DisabledSafetyCheck`(_impl) | 应在（反）序列化时跳过的安全检查。 |'
- en: Functions
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 函数
- en: '| `export`(fun_jit, *[, platforms, ...]) | Exports a JAX function for persistent
    serialization. |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `export`(fun_jit, *[, platforms, ...]) | 导出一个用于持久化序列化的 JAX 函数。 |'
- en: '| `deserialize`(blob) | Deserializes an Exported. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `deserialize`(blob) | 反序列化一个已导出的对象。 |'
- en: '| `minimum_supported_calling_convention_version` | int([x]) -> integer int(x,
    base=10) -> integer |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `minimum_supported_calling_convention_version` | int([x]) -> integer int(x,
    base=10) -> integer |'
- en: '| `maximum_supported_calling_convention_version` | int([x]) -> integer int(x,
    base=10) -> integer |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `maximum_supported_calling_convention_version` | int([x]) -> integer int(x,
    base=10) -> integer |'
- en: '| `default_export_platform`() | Retrieves the default export platform. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `default_export_platform`() | 获取默认的导出平台。 |'
- en: Functions related to shape polymorphism
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与形状多态性相关的函数
- en: '| `symbolic_shape`(shape_spec, *[, constraints, ...]) | Constructs a symbolic
    shape from a string representation. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `symbolic_shape`(shape_spec, *[, constraints, ...]) | 从字符串表示中构建一个符号形状。 |'
- en: '| `symbolic_args_specs`(args, shapes_specs[, ...]) | Constructs a pytree of
    jax.ShapeDtypeSpec arguments specs for export. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `symbolic_args_specs`(args, shapes_specs[, ...]) | 为导出构建一个 jax.ShapeDtypeSpec
    参数规范的 pytree。 |'
- en: '| `is_symbolic_dim`(p) | Checks if a dimension is symbolic. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `is_symbolic_dim`(p) | 检查一个维度是否是符号维度。 |'
- en: '| `SymbolicScope`([constraints_str]) | Indentifies a scope for symbolic expressions.
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `SymbolicScope`([constraints_str]) | 标识用于符号表达式的作用域。 |'
- en: Constants
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 常量
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The minimum supported serialization version; see Calling convention versions.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 最小支持的序列化版本；参见调用约定版本。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The maximum supported serialization version; see Calling convention versions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 最大支持的序列化版本；参见调用约定版本。
