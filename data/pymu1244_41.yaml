- en: Quad
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 四边形
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/quad.html](https://pymupdf.readthedocs.io/en/latest/quad.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/quad.html](https://pymupdf.readthedocs.io/en/latest/quad.html)
- en: Represents a four-sided mathematical shape (also called “quadrilateral” or “tetragon”)
    in the plane, defined as a sequence of four [Point](point.html#point) objects
    ul, ur, ll, lr (conveniently called upper left, upper right, lower left, lower
    right).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 表示平面中的四边形数学形状（也称为“四边形”或“四边形”），定义为四个 [Point](point.html#point) 对象 ul, ur, ll,
    lr 的序列（便于称为左上、右上、左下、右下）。
- en: Quads can **be obtained** as results of text search methods ([`Page.search_for()`](page.html#Page.search_for
    "Page.search_for")), and they **are used** to define text marker annotations (see
    e.g. [`Page.add_squiggly_annot()`](page.html#Page.add_squiggly_annot "Page.add_squiggly_annot")
    and friends), and in several draw methods (like [`Page.draw_quad()`](page.html#Page.draw_quad
    "Page.draw_quad") / [`Shape.draw_quad()`](shape.html#Shape.draw_quad "Shape.draw_quad"),
    [`Page.draw_oval()`](page.html#Page.draw_oval "Page.draw_oval")/ [`Shape.draw_quad()`](shape.html#Shape.draw_quad
    "Shape.draw_quad")).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 四边形可以作为文本搜索方法（[`Page.search_for()`](page.html#Page.search_for "Page.search_for")）的结果，它们用于定义文本标记注释（例如
    [`Page.add_squiggly_annot()`](page.html#Page.add_squiggly_annot "Page.add_squiggly_annot")
    等），以及多个绘制方法（如 [`Page.draw_quad()`](page.html#Page.draw_quad "Page.draw_quad")
    / [`Shape.draw_quad()`](shape.html#Shape.draw_quad "Shape.draw_quad")， [`Page.draw_oval()`](page.html#Page.draw_oval
    "Page.draw_oval") / [`Shape.draw_quad()`](shape.html#Shape.draw_quad "Shape.draw_quad")）。
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the corners of a rectangle are transformed with a **rotation**, **scale**
    or **translation** [Matrix](matrix.html#matrix), then the resulting quad is **rectangular**
    (= congruent to a rectangle), i.e. all of its corners again enclose angles of
    90 degrees. Property [`Quad.is_rectangular`](#Quad.is_rectangular "Quad.is_rectangular")
    checks whether a quad can be thought of being the result of such an operation.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果矩形的角点通过 **旋转**、**缩放** 或 **平移** [Matrix](matrix.html#matrix) 进行变换，则生成的四边形是
    **矩形**（全等于矩形），即其所有角再次形成90度角。属性 [`Quad.is_rectangular`](#Quad.is_rectangular "Quad.is_rectangular")
    检查四边形是否可以被看作是这样一个操作的结果。
- en: 'This is not true for all matrices: e.g. shear matrices produce parallelograms,
    and non-invertible matrices deliver “degenerate” tetragons like triangles or lines.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并非所有矩阵均满足此条件：例如，剪切矩阵生成平行四边形，而不可逆矩阵则生成“退化”四边形，如三角形或线段。
- en: Attribute [`Quad.rect`](#Quad.rect "Quad.rect") obtains the enveloping rectangle.
    Vice versa, rectangles now have attributes [`Rect.quad`](rect.html#Rect.quad "Rect.quad"),
    resp. [`IRect.quad`](irect.html#IRect.quad "IRect.quad") to obtain their respective
    tetragon versions.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性 [`Quad.rect`](#Quad.rect "Quad.rect") 获取包围矩形。反之亦然，现在矩形具有属性 [`Rect.quad`](rect.html#Rect.quad
    "Rect.quad") 和 [`IRect.quad`](irect.html#IRect.quad "IRect.quad") 分别获得它们的四边形版本。
- en: '| **Methods / Attributes** | **Short Description** |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| **方法 / 属性** | **简要描述** |'
- en: '| --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| [`Quad.transform()`](#Quad.transform "Quad.transform") | transform with a
    matrix |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.transform()`](#Quad.transform "Quad.transform") | 使用矩阵进行变换 |'
- en: '| [`Quad.morph()`](#Quad.morph "Quad.morph") | transform with a point and matrix
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.morph()`](#Quad.morph "Quad.morph") | 使用点和矩阵进行变形 |'
- en: '| [`Quad.ul`](#Quad.ul "Quad.ul") | upper left point |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.ul`](#Quad.ul "Quad.ul") | 左上角点 |'
- en: '| [`Quad.ur`](#Quad.ur "Quad.ur") | upper right point |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.ur`](#Quad.ur "Quad.ur") | 右上角点 |'
- en: '| [`Quad.ll`](#Quad.ll "Quad.ll") | lower left point |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.ll`](#Quad.ll "Quad.ll") | 左下角点 |'
- en: '| [`Quad.lr`](#Quad.lr "Quad.lr") | lower right point |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.lr`](#Quad.lr "Quad.lr") | 右下角点 |'
- en: '| [`Quad.is_convex`](#Quad.is_convex "Quad.is_convex") | true if quad is a
    convex set |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.is_convex`](#Quad.is_convex "Quad.is_convex") | 如果四边形是凸集则为 true |'
- en: '| [`Quad.is_empty`](#Quad.is_empty "Quad.is_empty") | true if quad is an empty
    set |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.is_empty`](#Quad.is_empty "Quad.is_empty") | 如果四边形是空集则为 true |'
- en: '| [`Quad.is_rectangular`](#Quad.is_rectangular "Quad.is_rectangular") | true
    if quad is congruent to a rectangle |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.is_rectangular`](#Quad.is_rectangular "Quad.is_rectangular") | 如果四边形与矩形全等则为
    true |'
- en: '| [`Quad.rect`](#Quad.rect "Quad.rect") | smallest containing [Rect](rect.html#rect)
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.rect`](#Quad.rect "Quad.rect") | 最小包含的 [Rect](rect.html#rect) |'
- en: '| [`Quad.width`](#Quad.width "Quad.width") | the longest width value |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.width`](#Quad.width "Quad.width") | 最长的宽度数值 |'
- en: '| [`Quad.height`](#Quad.height "Quad.height") | the longest height value |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| [`Quad.height`](#Quad.height "Quad.height") | 最长的高度数值 |'
- en: '**Class API**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**类 API**'
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Overloaded constructors: “ul”, “ur”, “ll”, “lr” stand for [`point_like`](glossary.html#point_like
    "point_like") objects (the four corners), “sequence” is a Python sequence with
    four [`point_like`](glossary.html#point_like "point_like") objects.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 过载的构造函数：“ul”，“ur”，“ll”，“lr”表示[`point_like`](glossary.html#point_like "point_like")对象（四个角点），“sequence”是包含四个[`point_like`](glossary.html#point_like
    "point_like")对象的Python序列。
- en: If “quad” is specified, the constructor creates a **new copy** of it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果指定了“quad”，则构造函数会创建其的**新副本**。
- en: Without parameters, a quad consisting of 4 copies of *Point(0, 0)* is created.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 没有参数时，创建包含4个*Point(0, 0)*的四边形。
- en: '[PRE5]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Modify the quadrilateral by transforming each of its corners with a matrix.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用矩阵转换四边形的每个角来修改它。
- en: 'Parameters:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**matrix** (*matrix_like*) – the matrix.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**矩阵** (*matrix_like*) – 矩阵。'
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '*(New in version 1.17.0)* “Morph” the quad with a matrix-like using a point-like
    as fixed point.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '*（从版本1.17.0开始）* 使用矩阵样式和点样式将四边形“变形”。'
- en: 'Parameters:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 参数：
- en: '**fixpoint** (*point_like*) – the point.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**fixpoint** (*point_like*) – 点。'
- en: '**matrix** (*matrix_like*) – the matrix.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矩阵** (*matrix_like*) – 矩阵。'
- en: 'Returns:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 返回：
- en: a new quad (no operation if this is the infinite quad).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个新的四边形（如果这是无限四边形，则不执行操作）。
- en: '[PRE7]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The smallest rectangle containing the quad, represented by the blue area in
    the following picture.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 包含四边形的最小矩形，由以下图片中的蓝色区域表示。
- en: '![_images/img-quads.jpg](../Images/dd342f79fb80249423116ac8e3c9c731.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![_images/img-quads.jpg](../Images/dd342f79fb80249423116ac8e3c9c731.png)'
- en: 'Type:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Rect](rect.html#rect)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[矩形](rect.html#rect)'
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Upper left point.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 左上角点。
- en: 'Type:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Upper right point.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 右上角点。
- en: 'Type:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE10]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Lower left point.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 左下角点。
- en: 'Type:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Lower right point.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 右下角点。
- en: 'Type:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: '[Point](point.html#point)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[点](point.html#point)'
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: New in version 1.16.1
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本1.16.1中的新功能
- en: Checks if for any two points of the quad, all points on their connecting line
    also belong to the quad.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 检查四边形的任意两个点，其连接线上的所有点是否也属于四边形。
- en: '[![_images/img-convexity.png](../Images/cac3af9d549092d288c6d955ee81b5a3.png)](_images/img-convexity.png)'
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[![_images/img-convexity.png](../Images/cac3af9d549092d288c6d955ee81b5a3.png)](_images/img-convexity.png)'
- en: 'Type:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE13]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: True if enclosed area is zero, which means that at least three of the four corners
    are on the same line. If this is false, the quad may still be degenerate or not
    look like a tetragon at all (triangles, parallelograms, trapezoids, …).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果封闭区域为零，则为真，这意味着四个角中至少有三个点在同一条线上。如果为假，则四边形可能仍然退化或根本不像四边形（三角形，平行四边形，梯形，...）。
- en: 'Type:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: True if all corner angles are 90 degrees. This implies that the quad is **convex
    and not empty**.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有角落的角度都为90度，则为真。这意味着四边形是**凸的且非空的**。
- en: 'Type:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: bool
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 布尔值
- en: '[PRE15]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The maximum length of the top and the bottom side.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部和底部边的最大长度。
- en: 'Type:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点数
- en: '[PRE16]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The maximum length of the left and the right side.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 左右边的最大长度。
- en: 'Type:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 类型：
- en: float
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 浮点数
- en: Remark
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备注
- en: This class adheres to the sequence protocol, so components can be dealt with
    via their indices, too. Also refer to [Using Python Sequences as Arguments in
    PyMuPDF](app3.html#sequencetypes).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 此类符合序列协议，因此组件也可以通过它们的索引处理。还参阅[在PyMuPDF中使用Python序列作为参数](app3.html#sequencetypes)。
- en: Algebra and Containment Checks
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代数和包含性检查
- en: 'Starting with v1.19.6, quads can be used in algebraic expressions like the
    other geometry object – the respective restrictions have been lifted. In particular,
    all the following combinations of containment checking are now possible:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 从v1.19.6开始，四边形可以像其他几何对象一样用于代数表达式 – 已取消了相应的限制。特别是现在可以进行所有以下包含检查的组合：
- en: '`{Point | IRect | Rect | Quad} in {IRect | Rect | Quad}`'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`{Point | IRect | Rect | Quad} 在 {IRect | Rect | Quad}`'
- en: 'Please note the following interesting detail:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意以下有趣的细节：
- en: 'For a rectangle, only its top-left point belongs to it. Since v1.19.0, rectangles
    are defined to be “open”, such that its bottom and its right edge do not belong
    to it – including the respective corners. But for quads there exists no such notion
    like “openness”, so we have the following somewhat surprising implication:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于矩形，仅其左上角点属于矩形。自v1.19.0起，矩形被定义为“开放的”，因此其底部和右边缘不属于矩形 – 包括相应的角点。但对于四边形，不存在“开放性”的概念，因此我们有以下有些令人惊讶的推论：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Do you have any feedback on this page?
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对这页有任何反馈？
- en: '* * *'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不附带任何明示或暗示的保证。此软件受许可证约束，未经许可不得复制、修改或分发。请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)获取许可信息，或联系美国旧金山
    94129，Mesa 街 39 号 108A 套房的 Artifex Software Inc. 了解更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖了截止到 1.24.4 版本的所有内容。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
- en: Remark
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备注
- en: This class adheres to the sequence protocol, so components can be dealt with
    via their indices, too. Also refer to [Using Python Sequences as Arguments in
    PyMuPDF](app3.html#sequencetypes).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 此类符合序列协议，因此组件也可以通过它们的索引处理。还请参阅[在 PyMuPDF 中将 Python 序列用作参数](app3.html#sequencetypes)。
- en: Algebra and Containment Checks
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代数和包含检查
- en: 'Starting with v1.19.6, quads can be used in algebraic expressions like the
    other geometry object – the respective restrictions have been lifted. In particular,
    all the following combinations of containment checking are now possible:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 从 v1.19.6 开始，四边形可以像其他几何对象一样用于代数表达式——相应的限制已经解除。特别地，所有以下组合的包含检查现在都是可能的：
- en: '`{Point | IRect | Rect | Quad} in {IRect | Rect | Quad}`'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`{点 | 矩形 | 矩形 | 四边形} 在 {矩形 | 矩形 | 四边形} 中`'
- en: 'Please note the following interesting detail:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意以下有趣的细节：
- en: 'For a rectangle, only its top-left point belongs to it. Since v1.19.0, rectangles
    are defined to be “open”, such that its bottom and its right edge do not belong
    to it – including the respective corners. But for quads there exists no such notion
    like “openness”, so we have the following somewhat surprising implication:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于矩形，只有它的左上角点属于它。自 v1.19.0 起，矩形被定义为“开放的”，因此其底部和右边缘不属于它——包括相应的角落。但对于四边形来说，不存在“开放性”这样的概念，因此我们有以下有些令人惊讶的推论：
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Do you have any feedback on this page?
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你对本页面有任何反馈吗？
- en: '* * *'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不附带任何明示或暗示的保证。此软件受许可证约束，未经许可不得复制、修改或分发。请参阅[artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)获取许可信息，或联系美国旧金山
    94129，Mesa 街 39 号 108A 套房的 Artifex Software Inc. 了解更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖了截止到 1.24.4 版本的所有内容。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
