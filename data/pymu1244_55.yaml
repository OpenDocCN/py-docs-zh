- en: Glossary
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 术语表
- en: 原文：[https://pymupdf.readthedocs.io/en/latest/glossary.html](https://pymupdf.readthedocs.io/en/latest/glossary.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://pymupdf.readthedocs.io/en/latest/glossary.html](https://pymupdf.readthedocs.io/en/latest/glossary.html)
- en: '[PRE0]'
  id: totrans-2
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is an esential general mathematical / geometrical term for understanding
    this documentation. Please see this section for a more detailed discussion: [Coordinates](app3.html#coordinates).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这是理解本文档的一个基本数学/几何术语。请参阅本节以获取更详细的讨论：[坐标](app3.html#coordinates)。
- en: '[PRE1]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: A Python sequence of 6 numbers.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含6个数字的Python序列。
- en: '[PRE2]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A Python sequence of 4 numbers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含4个数字的Python序列。
- en: '[PRE3]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: A Python sequence of 4 integers.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含4个整数的Python序列。
- en: '[PRE4]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: A Python sequence of 2 numbers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含2个数字的Python序列。
- en: '[PRE5]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: A Python sequence of 4 [`point_like`](#point_like "point_like") items.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含4个[`point_like`](#point_like "point_like")项的Python序列。
- en: '[PRE6]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A number of values in a PDF can inherited by objects further down in a parent-child
    relationship. The mediabox (physical size) of pages may for example be specified
    only once or in some node(s) of the [`pagetree`](#pagetree "pagetree") and will
    then be taken as value for all *kids*, that do not specify their own value.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: PDF中的许多值可以通过父子关系进一步向下继承到对象中。例如，页面的mediabox（物理大小）可能只在[`pagetree`](#pagetree "pagetree")的某些节点中指定一次，然后将作为所有未指定自己值的*kids*的值。
- en: '[PRE7]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'A PDF array of 4 floats specifying a physical page size – ([`inheritable`](#inheritable
    "inheritable"), mandatory). This rectangle should contain all other PDF – optional
    – page rectangles, which may be specified in addition: CropBox, TrimBox, ArtBox
    and BleedBox. Please consult [Adobe PDF References](app3.html#adobemanual) for
    details. The MediaBox is the only rectangle, for which there is no difference
    between MuPDF and PDF coordinate systems: [`Page.mediabox`](page.html#Page.mediabox
    "Page.mediabox") will always show the same coordinates as the `/MediaBox` key
    in a page’s object definition. For all other rectangles, MuPDF transforms y coordinates
    such that the **top** border is the point of reference. This can sometimes be
    confusing – you may for example encounter a situation like this one:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含4个浮点数的PDF数组，指定了页面的物理大小 - ([`可继承`](#inheritable "可继承")，必填）。此矩形应包含所有其他PDF页面矩形，可选
    - 页边框、裁剪框、艺术框和出血框。请参阅[Adobe PDF参考手册](app3.html#adobemanual)以获取详细信息。MediaBox是唯一一个在MuPDF和PDF坐标系统之间没有差异的矩形：[`Page.mediabox`](page.html#Page.mediabox
    "Page.mediabox")将始终显示与页面对象定义中的`/MediaBox`键相同的坐标。对于所有其他矩形，MuPDF转换y坐标，使得**顶部**边界成为参考点。这有时可能会让人困惑
    - 例如，您可能会遇到这样的情况：
- en: 'The page definition contains the following identical values: `/MediaBox [ 36
    45 607.5 765 ]`, `/CropBox [ 36 45 607.5 765 ]`.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 页面定义包含以下相同的值：`/MediaBox [ 36 45 607.5 765 ]`，`/CropBox [ 36 45 607.5 765 ]`。
- en: PyMuPDF accordingly shows `page.mediabox = Rect(36.0, 45.0, 607.5, 765.0)`.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyMuPDF相应地显示`page.mediabox = Rect(36.0, 45.0, 607.5, 765.0)`。
- en: '**BUT:** `page.cropbox = Rect(36.0, 0.0, 607.5, 720.0)`, because the two y-coordinates
    have been transformed (45 subtracted from both of them).'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**但是：** `page.cropbox = Rect(36.0, 0.0, 607.5, 720.0)`，因为两个y坐标已被转换（减去了45）。'
- en: '[PRE8]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: A PDF array of 4 floats specifying a page’s visible area – ([`inheritable`](#inheritable
    "inheritable"), optional). It is the default for TrimBox, ArtBox and BleedBox.
    If not present, it defaults to MediaBox. This value is **not affected** if the
    page is rotated – in contrast to [`Page.rect`](page.html#Page.rect "Page.rect").
    Also, other than the page rectangle, the top-left corner of the cropbox may or
    may not be *(0, 0)*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含4个浮点数的PDF数组，指定页面的可见区域 - （[`可继承`](#inheritable "可继承")，可选）。它是TrimBox、ArtBox和BleedBox的默认值。如果不存在，则默认为MediaBox。此值不受页面旋转的影响
    - 与[`Page.rect`](page.html#Page.rect "Page.rect")相反。另外，与页面矩形不同，裁剪框的左上角可能是*(0,
    0)*，也可能不是。
- en: '[PRE9]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: A central PDF [`dictionary`](#dictionary "dictionary") – also called the “root”
    – containing document-wide parameters and pointers to many other information.
    Its [`xref`](#xref "xref") is returned by [`Document.pdf_catalog()`](document.html#Document.pdf_catalog
    "Document.pdf_catalog").
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一个中心PDF [`字典`](#dictionary "字典") - 也称为“根” - 包含文档范围的参数和指向许多其他信息的指针。其[`xref`](#xref
    "xref")由[`Document.pdf_catalog()`](document.html#Document.pdf_catalog "Document.pdf_catalog")返回。
- en: '[PRE10]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'More precisely, the **PDF trailer** contains information in [`dictionary`](#dictionary
    "dictionary") format. It is usually located at the file’s end. In this dictionary,
    you will find things like the xrefs of the catalog and the metadata, the number
    of [`xref`](#xref "xref") numbers, etc. Here is the definition of the PDF spec:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 更准确地说，**PDF 尾部** 以 [`字典`](#dictionary "dictionary") 格式包含信息。通常位于文件的末尾。在此字典中，您将找到诸如目录和元数据的
    xrefs、[`xref`](#xref "xref") 数量等内容。以下是 PDF 规范的定义：
- en: '*“The trailer of a PDF file enables an application reading the file to quickly
    find the cross-reference table and certain special objects. Applications should
    read a PDF file from its end.”*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*“PDF 文件的尾部信息允许读取文件的应用程序快速找到交叉引用表和某些特殊对象。应用程序应该从文件的末尾开始读取 PDF 文件。”*'
- en: To access the trailer in PyMuPDF, use the usual methods [`Document.xref_object()`](document.html#Document.xref_object
    "Document.xref_object"), [`Document.xref_get_key()`](document.html#Document.xref_get_key
    "Document.xref_get_key") and [`Document.xref_get_keys()`](document.html#Document.xref_get_keys
    "Document.xref_get_keys") with `-1` instead of a positive xref number.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 PyMuPDF 中的尾部，请使用通常的方法 [`Document.xref_object()`](document.html#Document.xref_object
    "Document.xref_object")、[`Document.xref_get_key()`](document.html#Document.xref_get_key
    "Document.xref_get_key") 和 [`Document.xref_get_keys()`](document.html#Document.xref_get_keys
    "Document.xref_get_keys")，使用 `-1` 而不是正数 xref 编号。
- en: '[PRE11]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'A **content stream** is a PDF [`object`](#object "object") with an attached
    [`stream`](#stream "stream"), whose data consists of a sequence of instructions
    describing the graphical elements to be painted on a page, see “Stream Objects”
    on page 19 of [Adobe PDF References](app3.html#adobemanual). For an overview of
    the mini-language used in these streams, see chapter “Operator Summary” on page
    643 of the [Adobe PDF References](app3.html#adobemanual). A PDF [`page`](#page
    "page") can have none to many contents objects. If it has none, the page is empty
    (but still may show annotations). If it has several, they will be interpreted
    in sequence as if their instructions had been present in one such object (i.e.
    like in a concatenated string). It should be noted that there are more stream
    object types which use the same syntax: e.g. appearance dictionaries associated
    with annotations and Form XObjects.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容流** 是带有附加 [`stream`](#stream "stream") 的 PDF [`对象`](#object "object")，其数据包含一系列描述要在页面上绘制的图形元素的指令，详见
    Adobe PDF 参考手册第 19 页上的“Stream Objects”。有关这些流中使用的迷你语言的概述，请参阅 Adobe PDF 参考手册第 643
    页上的“操作符总结”章节。PDF [`页面`](#page "page") 可以没有到多个内容对象。如果没有内容对象，则页面为空（但仍可能显示注释）。如果有多个内容对象，则将按顺序解释它们，就好像它们的指令存在于一个这样的对象中（即像连接字符串一样）。应注意，还有更多使用相同语法的流对象类型，例如与注释相关联的外观字典和表单
    XObjects。'
- en: 'PyMuPDF provides a number of methods to deal with contents of PDF pages:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: PyMuPDF 提供了多种处理 PDF 页面内容的方法：
- en: '[`Page.read_contents()`](functions.html#Page.read_contents "Page.read_contents")
    – reads and concatenates all page contents into one `bytes` object.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.read_contents()`](functions.html#Page.read_contents "Page.read_contents")
    – 读取并连接所有页面内容为一个 `bytes` 对象。'
- en: '[`Page.clean_contents()`](functions.html#Page.clean_contents "Page.clean_contents")
    – a wrapper of a MuPDF function that reads, concatenates and syntax-cleans all
    page contents. After this, only one `/Contents` object will exist. In addition,
    page [`resources`](#resources "resources") will have been synchronized with it
    such that it will contain exactly those images, fonts and other objects that the
    page actually references.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.clean_contents()`](functions.html#Page.clean_contents "Page.clean_contents")
    – 一个 MuPDF 函数的包装，用于读取、连接和语法清理所有页面内容。之后，只会存在一个 `/Contents` 对象。此外，页面的 [`资源`](#resources
    "resources") 也将与之同步，确保它只包含页面实际引用的那些图像、字体和其他对象。'
- en: '[`Page.get_contents()`](functions.html#Page.get_contents "Page.get_contents")
    – return a list of [`xref`](#xref "xref") numbers of a page’s [`contents`](#contents
    "contents") objects. May be empty. Use [`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream") with one of these xrefs to read the resp. contents section.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.get_contents()`](functions.html#Page.get_contents "Page.get_contents")
    – 返回页面 [`内容`](#contents "contents") 对象的 [`xref`](#xref "xref") 编号列表。可能为空。使用 [`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream") 和其中一个 xref 来读取相应的内容部分。'
- en: '[`Page.set_contents()`](functions.html#Page.set_contents "Page.set_contents")
    – set a page’s `/Contents` key to the provided [`xref`](#xref "xref") number.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[`Page.set_contents()`](functions.html#Page.set_contents "Page.set_contents")
    – 将页面的 `/Contents` 键设置为提供的 [`xref`](#xref "xref") 编号。'
- en: '[PRE12]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: A [`dictionary`](#dictionary "dictionary") containing references to any resources
    (like images or fonts) required by a PDF [`page`](#page "page") (required, inheritable,
    [Adobe PDF References](app3.html#adobemanual) p. 81) and certain other objects
    (Form XObjects). This dictionary appears as a sub-dictionary in the object definition
    under the key */Resources*. Being an inheritable object type, there may exist
    “parent” resources for all pages or certain subsets of pages.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一个包含对PDF [`page`](#page "page")（必需的，可继承的，[Adobe PDF References](app3.html#adobemanual)
    第81页）和某些其他对象（Form XObjects）所需资源（如图像或字体）的引用的[`dictionary`](#dictionary "dictionary")，此字典作为对象定义的子字典出现，在键*/Resources*下。作为可继承对象类型，所有页面或某些页面子集可能存在“父”资源。
- en: '[PRE13]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'A PDF [`object`](#object "object") type, which is somewhat comparable to the
    same-named Python notion: “A dictionary object is an associative table containing
    pairs of objects, known as the dictionary’s entries. The first element of each
    entry is the key and the second element is the value. The key must be a name (…).
    The value can be any kind of object, including another dictionary. A dictionary
    entry whose value is null (…) is equivalent to an absent entry.” ([Adobe PDF References](app3.html#adobemanual)
    p. 18).'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: PDF [`object`](#object "object")类型，与同名的Python概念有些类似：“字典对象是一个关联表，包含对象对，称为字典的条目。每个条目的第一个元素是键，第二个元素是值。键必须是名称（…）。值可以是任何类型的对象，包括另一个字典。其值为null（…）的字典条目相当于不存在的条目。”（[Adobe
    PDF References](app3.html#adobemanual) 第18页）。
- en: 'Dictionaries are the most important [`object`](#object "object") type in PDF.
    Here is an example (describing a [`page`](#page "page")):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在PDF中，字典是最重要的[`object`](#object "object")类型之一。以下是一个示例（描述一个[`page`](#page "page")）：
- en: '[PRE14]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Contents*, *Type*, *MediaBox*, etc. are **keys**, *40 0 R*, *Page*, *[0 0
    595.32 841.92]*, etc. are the respective **values**. The strings *“<<”* and *“>>”*
    are used to enclose object definitions.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*Contents*, *Type*, *MediaBox*等是**键**，*40 0 R*、*Page*、*[0 0 595.32 841.92]*等是相应的**值**。字符串*“<<”*和*“>>”*用于封装对象定义。'
- en: 'This example also shows the syntax of **nested** dictionary values: *Resources*
    has an object as its value, which in turn is a dictionary with keys like *ExtGState*
    (with the value *<</R7 26 0 R>>*, which is another dictionary), etc.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例还显示了**嵌套**字典值的语法：*Resources*具有对象作为其值，其本身是一个带有像*ExtGState*（其值为*<</R7 26 0
    R>>*，即另一个字典）等键的字典。
- en: '[PRE15]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: A PDF page is a [`dictionary`](#dictionary "dictionary") object which defines
    one page in a PDF, see [Adobe PDF References](app3.html#adobemanual) p. 71.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: PDF页面是一个[`dictionary`](#dictionary "dictionary")对象，用于定义PDF中的一个页面，请参见[Adobe PDF
    References](app3.html#adobemanual) 第71页。
- en: '[PRE16]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The pages of a document are accessed through a structure known as the page
    tree, which defines the ordering of pages in the document. The tree structure
    allows PDF consumer applications, using only limited memory, to quickly open a
    document containing thousands of pages. The tree contains nodes of two types:
    intermediate nodes, called page tree nodes, and leaf nodes, called page objects.
    ([Adobe PDF References](app3.html#adobemanual) p. 75).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 文档的页面通过称为页面树的结构访问，该结构定义了文档中页面的顺序。树结构允许PDF消费应用程序仅使用有限内存快速打开包含数千页的文档。树包含两种类型的节点：中间节点称为页面树节点，叶节点称为页面对象。（[Adobe
    PDF References](app3.html#adobemanual) 第75页）。
- en: While it is possible to list all page references in just one array, PDFs with
    many pages are often created using *balanced tree* structures (“page trees”) for
    faster access to any single page. In relation to the total number of pages, this
    can reduce the average page access time by page number from a linear to some logarithmic
    order of magnitude.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以在一个数组中列出所有页面引用，但是具有许多页面的PDF通常使用“平衡树”结构（“页面树”）创建，以便更快地访问任何单个页面。相对于页面总数，这可以将平均页面访问时间从线性降低到对数级别。
- en: For fast page access, MuPDF can use its own array in memory – independently
    from what may or may not be present in the document file. This array is indexed
    by page number and therefore much faster than even the access via a perfectly
    balanced page tree.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了快速访问页面，MuPDF可以使用内存中的自己的数组 – 与文档文件中可能有或没有的内容无关。该数组通过页面号索引，因此比甚至通过完全平衡的页面树访问还要快得多。
- en: '[PRE17]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Similar to Python, PDF supports the notion *object*, which can come in eight
    basic types: boolean values (“true” or “false”), integer and real numbers, strings
    (**always** enclosed in brackets – either “()”, or “<>” to indicate hexadecimal),
    names (must always start with a “/”, e.g. `/Contents`), arrays (enclosed in brackets
    “[]”), dictionaries (enclosed in brackets “<<>>”), streams (enclosed by keywords
    “stream” / “endstream”), and the null object (“null”) ([Adobe PDF References](app3.html#adobemanual)
    p. 13). Objects can be made identifiable by assigning a label. This label is then
    called *indirect* object. PyMuPDF supports retrieving definitions of indirect
    objects via their cross reference number via [`Document.xref_object()`](document.html#Document.xref_object
    "Document.xref_object").'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Python 类似，PDF 支持 *对象*（object）的概念，它可以分为八种基本类型：布尔值（“true”或“false”）、整数和实数、字符串（**始终**用括号括起来
    – 要么“()”，要么“<>”表示十六进制）、名称（必须始终以“/”开头，例如 `/Contents`）、数组（用方括号“[]”括起来）、字典（用双尖括号“<<>>”括起来）、流（由关键字“stream”
    / “endstream”括起来）、以及空对象（“null”）（[Adobe PDF References](app3.html#adobemanual)
    p. 13）。对象可以通过分配标签来进行标识。然后称为*间接*对象。PyMuPDF 支持通过它们的交叉引用号检索间接对象的定义，通过 [`Document.xref_object()`](document.html#Document.xref_object
    "Document.xref_object")。
- en: '[PRE18]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'A PDF [`dictionary`](#dictionary "dictionary") [`object`](#object "object")
    type which is followed by a sequence of bytes, similar to Python *bytes*. “However,
    a PDF application can read a stream incrementally, while a string must be read
    in its entirety. Furthermore, a stream can be of unlimited length, whereas a string
    is subject to an implementation limit. For this reason, objects with potentially
    large amounts of data, such as images and page descriptions, are represented as
    streams.” “A stream consists of a [`dictionary`](#dictionary "dictionary") followed
    by zero or more bytes bracketed between the keywords *stream* and *endstream*”:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 PDF 的[`字典`](#dictionary "dictionary") [`对象`](#object "object")类型，其后跟着一系列字节，类似于
    Python 的 *bytes*。“然而，PDF 应用程序可以逐步读取流，而字符串必须一次性读取。此外，流可以是无限长度的，而字符串则受实现限制。因此，具有大量数据的对象（例如图像和页面描述）被表示为流。”
    “一个流由一个[`字典`](#dictionary "dictionary")后跟关键字 *stream* 和 *endstream* 之间的零个或多个字节组成”：
- en: '[PRE19]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: See [Adobe PDF References](app3.html#adobemanual) p. 19\. PyMuPDF supports retrieving
    stream content via [`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream"). Use [`Document.is_stream()`](functions.html#Document.is_stream
    "Document.is_stream") to determine whether an object is of stream type.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 参见 [Adobe PDF References](app3.html#adobemanual) p. 19\. PyMuPDF 支持通过 [`Document.xref_stream()`](document.html#Document.xref_stream
    "Document.xref_stream") 检索流内容。使用 [`Document.is_stream()`](functions.html#Document.is_stream
    "Document.is_stream") 来确定对象是否为流类型。
- en: '[PRE20]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: A mathematical notion meaning a vector of norm (“length”) 1 – usually the Euclidean
    norm is implied. In PyMuPDF, this term is restricted to [Point](point.html#point)
    objects, see [`Point.unit`](point.html#Point.unit "Point.unit").
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 数学概念，表示范数（“长度”）为 1 的向量 – 通常指欧几里德范数。在 PyMuPDF 中，这个术语限定为[Point](point.html#point)对象，请参见
    [`Point.unit`](point.html#Point.unit "Point.unit")。
- en: '[PRE21]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Abbreviation for cross-reference number: this is an integer unique identification
    for objects in a PDF. There exists a cross-reference table (which may physically
    consist of several separate segments) in each PDF, which stores the relative position
    of each object for quick lookup. The cross-reference table is one entry longer
    than the number of existing object: item zero is reserved and must not be used
    in any way. Many PyMuPDF classes have an *xref* attribute (which is zero for non-PDFs),
    and one can find out the total number of objects in a PDF via [`Document.xref_length()`](functions.html#Document.xref_length
    "Document.xref_length") *- 1*.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉引用号的缩写：这是 PDF 中对象的唯一整数标识。每个 PDF 中都存在一个交叉引用表（可能实际上由几个单独的段组成），它存储每个对象的相对位置以便快速查找。交叉引用表比实际存在的对象数多一个条目：第零项保留，不能以任何方式使用。许多
    PyMuPDF 类都有一个*xref*属性（对于非 PDF 文件为零），可以通过 [`Document.xref_length()`](functions.html#Document.xref_length
    "Document.xref_length") *- 1* 来找出 PDF 中对象的总数。
- en: '[PRE22]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: When referring to font size this metric is measured in points where 1 inch =
    72 points.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当提及字体大小时，这个度量单位是以点（points）为单位，其中 1 英寸 = 72 点。
- en: '[PRE23]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Images and [Pixmap](pixmap.html#pixmap) objects may contain resolution information
    provided as “dots per inch”, dpi, in each direction (horizontal and vertical).
    When MuPDF reads an image from a file or from a PDF object, it will parse this
    information and put it in [`Pixmap.xres`](pixmap.html#Pixmap.xres "Pixmap.xres"),
    [`Pixmap.yres`](pixmap.html#Pixmap.yres "Pixmap.yres"), respectively. If it finds
    no meaningful information in the input (like non-positive values or values exceeding
    4800), it will use “sane” defaults instead. The usual default value is 96, but
    it may also be 72 in some cases (e.g. for JPX images).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图像和[像素图](pixmap.html#pixmap)对象可能包含分辨率信息，以每个方向（水平和垂直）的“每英寸点数”，dpi为单位提供。 当MuPDF从文件或PDF对象中读取图像时，它将解析此信息并将其分别放入[`Pixmap.xres`](pixmap.html#Pixmap.xres
    "Pixmap.xres")、[`Pixmap.yres`](pixmap.html#Pixmap.yres "Pixmap.xres")中。 如果在输入中找不到有意义的信息（如非正值或值超过4800），则将使用“合理”的默认值。
    通常的默认值是96，但在某些情况下也可能是72（例如对于JPX图像）。
- en: '[PRE24]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Optional content properties dictionary - a sub [`dictionary`](#dictionary "dictionary")
    of the PDF [`catalog`](#catalog "catalog"). The central place to store optional
    content information, which is identified by the key `/OCProperties`. This dictionary
    has two required and one optional entry: (1) `/OCGs`, required, an array listing
    all optional content groups, (2) `/D`, required, the default optional content
    configuration dictionary (OCCD), (3) `/Configs`, optional, an array of alternative
    OCCDs.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 可选内容属性字典 - PDF [`catalog`](#catalog "catalog")的子[`dictionary`](#dictionary "dictionary")。
    存储可选内容信息的中心位置，由键`/OCProperties`标识。 此字典具有两个必填项和一个可选项：（1）`/OCGs`，必填，列出所有可选内容组的数组，（2）`/D`，必填，默认可选内容配置字典（OCCD），（3）`/Configs`，可选，备用OCCD的数组。
- en: '[PRE25]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Optional content configuration dictionary - a PDF [`dictionary`](#dictionary
    "dictionary") inside the PDF [`OCPD`](#OCPD "OCPD"). It stores a setting of ON
    / OFF states of OCGs and how they are presented to a PDF viewer program. Selecting
    a configuration is quick way to achieve temporary mass visibility state changes.
    After opening a PDF, the `/D` configuration of the [`OCPD`](#OCPD "OCPD") is always
    activated. Viewer should offer a way to switch between the `/D`, or one of the
    optional configurations contained in array `/Configs`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 可选内容配置字典 - PDF [`catalog`](#catalog "catalog")的子[`dictionary`](#dictionary "dictionary")。
    它存储了OCG的ON / OFF状态的设置以及它们如何呈现给PDF查看器程序。 选择配置是实现临时大规模可见性状态更改的快速方法。 打开PDF后，始终激活[`OCPD`](#OCPD
    "OCPD")的`/D`配置。 查看器应该提供一种在`/D`和数组`/Configs`中包含的一个可选配置之间切换的方法。
- en: '[PRE26]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Optional content group – a [`dictionary`](#dictionary "dictionary") object used
    to control the visibility of other PDF objects like images or annotations. Independently
    on which page they are defined, objects with the same OCG can simultaneously be
    shown or hidden by setting their OCG to ON or OFF. This can be achieved via the
    user interface provided by many PDF viewers (Adobe Acrobat), or programmatically.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 可选内容组 – 一个[`dictionary`](#dictionary "dictionary")对象，用于控制其他PDF对象（如图像或注释）的可见性。
    无论它们在哪一页定义，具有相同OCG的对象都可以通过将其OCG设置为ON或OFF同时显示或隐藏。 这可以通过许多PDF查看器（Adobe Acrobat）提供的用户界面或以编程方式实现。
- en: '[PRE27]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Optional content membership dictionary – a [`dictionary`](#dictionary "dictionary")
    object which can be used like an [`OCG`](#OCG "OCG"): it has a visibility state.
    The visibility of an OCMD is **computed:** it is a logical expression, which uses
    the state of one or more OCGs to produce a boolean value. The expression’s result
    is interpreted as ON (true) or OFF (false).'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 可选内容成员字典 – 一个[`dictionary`](#dictionary "dictionary")对象，可以像一个[`OCG`](#OCG "OCG")一样使用：它具有可见性状态。
    OCMD的可见性是**计算的：**它是一个逻辑表达式，使用一个或多个OCG的状态来产生布尔值。 表达式的结果被解释为ON（true）或OFF（false）。
- en: '[PRE28]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Some frequent character combinations are represented by their own special glyphs
    in more advanced fonts. Typical examples are “fi”, “fl”, “ffi” and “ffl”. These
    compounds are called *ligatures*. In PyMuPDF text extractions, there is the option
    to either return the corresponding unicode unchanged, or split ligatures up into
    their constituent parts: “fi” ==> “f” + “i”, etc.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一些频繁的字符组合由更高级的字体中的特殊字形表示。 典型的例子是“fi”、“fl”、“ffi”和“ffl”。 这些化合物称为*连字*。 在PyMuPDF文本提取中，有选项可以将相应的Unicode要么保持不变，要么将连字分解为其组成部分：“fi”
    ==> “f” + “i”，等等。
- en: Do you have any feedback on this page?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你对这个页面有什么反馈吗？
- en: '* * *'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '* * *'
- en: This software is provided AS-IS with no warranty, either express or implied.
    This software is distributed under license and may not be copied, modified or
    distributed except as expressly authorized under the terms of that license. Refer
    to licensing information at [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    or contact Artifex Software Inc., 39 Mesa Street, Suite 108A, San Francisco CA
    94129, United States for further information.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此软件按原样提供，不提供任何明示或暗示的保证。此软件根据许可证分发，未经许可不得复制、修改或分发。请参考 [artifex.com](https://www.artifex.com?utm_source=rtd-pymupdf&utm_medium=rtd&utm_content=footer-link)
    上的许可信息，或联系美国旧金山 94129 号 Mesa 街 39 号 108A 套房的 Artifex Software Inc. 获取更多信息。
- en: This documentation covers all versions up to 1.24.4.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此文档涵盖所有版本，直至 1.24.4。
- en: '[![Discord logo](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[![Discord 标志](../Images/66cbb5081103a580193aa66c87b90d9a.png)](https://discord.gg/TSpYGBW4eq)'
